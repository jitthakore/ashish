

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class sps_Hardness : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the sps_Hardness entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sps_Hardness()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sps_Hardness(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.sps_Hardness> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.sps_Hardness.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Hardness_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Hardness_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Hardness_No
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Hardness_No);
            }
            set
            {
                global::LightSwitchApplication.sps_Hardness.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Hardness_No, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hardness_No_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hardness_No_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hardness_No_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> Hardness_Date
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Hardness_Date);
            }
            set
            {
                global::LightSwitchApplication.sps_Hardness.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Hardness_Date, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hardness_Date_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hardness_Date_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hardness_Date_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Location
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Location);
            }
            set
            {
                global::LightSwitchApplication.sps_Hardness.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Location, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Offer_By
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Offer_By);
            }
            set
            {
                global::LightSwitchApplication.sps_Hardness.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Offer_By, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Offer_By_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Offer_By_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Offer_By_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Insp_By
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Insp_By);
            }
            set
            {
                global::LightSwitchApplication.sps_Hardness.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Insp_By, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Insp_By_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Insp_By_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Insp_By_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> Insp_Date
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Insp_Date);
            }
            set
            {
                global::LightSwitchApplication.sps_Hardness.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Insp_Date, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Insp_Date_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Insp_Date_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Insp_Date_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<short> Status
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.sps_Hardness.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string QC_Remark
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.QC_Remark);
            }
            set
            {
                global::LightSwitchApplication.sps_Hardness.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.QC_Remark, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QC_Remark_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QC_Remark_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QC_Remark_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EXEC_Remark
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.EXEC_Remark);
            }
            set
            {
                global::LightSwitchApplication.sps_Hardness.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.EXEC_Remark, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EXEC_Remark_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EXEC_Remark_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EXEC_Remark_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> Insp_PlanDate
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Insp_PlanDate);
            }
            set
            {
                global::LightSwitchApplication.sps_Hardness.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Insp_PlanDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Insp_PlanDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Insp_PlanDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Insp_PlanDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string InstID_No
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.InstID_No);
            }
            set
            {
                global::LightSwitchApplication.sps_Hardness.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.InstID_No, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InstID_No_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InstID_No_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InstID_No_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> Cal_Due_Dt
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Cal_Due_Dt);
            }
            set
            {
                global::LightSwitchApplication.sps_Hardness.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Cal_Due_Dt, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cal_Due_Dt_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cal_Due_Dt_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cal_Due_Dt_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AcceptanceValue
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.AcceptanceValue);
            }
            set
            {
                global::LightSwitchApplication.sps_Hardness.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.AcceptanceValue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AcceptanceValue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AcceptanceValue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AcceptanceValue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.sps_Contractor_Module sps_Contractor_Module
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.sps_Contractor_Module);
            }
            set
            {
                global::LightSwitchApplication.sps_Hardness.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.sps_Contractor_Module, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractor_Module_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractor_Module_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractor_Module_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.sps_HardnessDetail> sps_HardnessDetails
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.sps_HardnessDetails);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.sps_HardnessDetail> sps_HardnessDetailsQuery
        {
            get
            {
                return global::LightSwitchApplication.sps_Hardness.DetailsClass.GetQuery(this, global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.sps_HardnessDetails);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.sps_Hardness,
                global::LightSwitchApplication.sps_Hardness.DetailsClass,
                global::LightSwitchApplication.sps_Hardness.DetailsClass.IImplementation,
                global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Hardness_No;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass>.Entry
                __sps_HardnessEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass>.Entry(
                    global::LightSwitchApplication.sps_Hardness.DetailsClass.__sps_Hardness_CreateNew,
                    global::LightSwitchApplication.sps_Hardness.DetailsClass.__sps_Hardness_Created,
                    global::LightSwitchApplication.sps_Hardness.DetailsClass.__sps_Hardness_AllowSaveWithErrors);
            private static global::LightSwitchApplication.sps_Hardness __sps_Hardness_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.sps_Hardness> es)
            {
                return new global::LightSwitchApplication.sps_Hardness(es);
            }
            private static void __sps_Hardness_Created(global::LightSwitchApplication.sps_Hardness e)
            {
                e.sps_Hardness_Created();
            }
            private static bool __sps_Hardness_AllowSaveWithErrors(global::LightSwitchApplication.sps_Hardness e)
            {
                bool result = false;
                e.sps_Hardness_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string> Hardness_No
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Hardness_No) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>> Hardness_Date
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Hardness_Date) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string> Location
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Location) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string> Offer_By
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Offer_By) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string> Insp_By
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Insp_By) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>> Insp_Date
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Insp_Date) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<short>> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<short>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string> QC_Remark
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.QC_Remark) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string> EXEC_Remark
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.EXEC_Remark) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>> Insp_PlanDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Insp_PlanDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string> InstID_No
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.InstID_No) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>> Cal_Due_Dt
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.Cal_Due_Dt) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string> AcceptanceValue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.AcceptanceValue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::LightSwitchApplication.sps_Contractor_Module> sps_Contractor_Module
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.sps_Contractor_Module) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::LightSwitchApplication.sps_Contractor_Module>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::LightSwitchApplication.sps_HardnessDetail> sps_HardnessDetails
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.sps_HardnessDetails) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::LightSwitchApplication.sps_HardnessDetail>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string Hardness_No { get; set; }
                new global::System.Nullable<global::System.DateTime> Hardness_Date { get; set; }
                new string Location { get; set; }
                new string Offer_By { get; set; }
                new string Insp_By { get; set; }
                new global::System.Nullable<global::System.DateTime> Insp_Date { get; set; }
                new global::System.Nullable<short> Status { get; set; }
                new string QC_Remark { get; set; }
                new string EXEC_Remark { get; set; }
                new global::System.Nullable<global::System.DateTime> Insp_PlanDate { get; set; }
                new string InstID_No { get; set; }
                new global::System.Nullable<global::System.DateTime> Cal_Due_Dt { get; set; }
                new string AcceptanceValue { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation sps_Contractor_Module { get; set; }
                new global::System.Collections.IEnumerable sps_HardnessDetails { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry
                    Hardness_No = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry(
                        "Hardness_No",
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Hardness_No_Stub,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Hardness_No_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Hardness_No_Validate,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Hardness_No_GetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Hardness_No_SetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Hardness_No_OnValueChanged);
                private static void _Hardness_No_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Hardness.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data> c, global::LightSwitchApplication.sps_Hardness.DetailsClass d, object sf)
                {
                    c(d, ref d._Hardness_No, sf);
                }
                private static bool _Hardness_No_ComputeIsReadOnly(global::LightSwitchApplication.sps_Hardness e)
                {
                    bool result = false;
                    e.Hardness_No_IsReadOnly(ref result);
                    return result;
                }
                private static void _Hardness_No_Validate(global::LightSwitchApplication.sps_Hardness e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Hardness_No_Validate(r);
                }
                private static string _Hardness_No_GetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.ImplementationEntity.Hardness_No;
                }
                private static void _Hardness_No_SetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Hardness_No = v;
                }
                private static void _Hardness_No_OnValueChanged(global::LightSwitchApplication.sps_Hardness e)
                {
                    e.Hardness_No_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    Hardness_Date = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "Hardness_Date",
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Hardness_Date_Stub,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Hardness_Date_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Hardness_Date_Validate,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Hardness_Date_GetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Hardness_Date_SetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Hardness_Date_OnValueChanged);
                private static void _Hardness_Date_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Hardness.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.sps_Hardness.DetailsClass d, object sf)
                {
                    c(d, ref d._Hardness_Date, sf);
                }
                private static bool _Hardness_Date_ComputeIsReadOnly(global::LightSwitchApplication.sps_Hardness e)
                {
                    bool result = false;
                    e.Hardness_Date_IsReadOnly(ref result);
                    return result;
                }
                private static void _Hardness_Date_Validate(global::LightSwitchApplication.sps_Hardness e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Hardness_Date_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _Hardness_Date_GetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.ImplementationEntity.Hardness_Date;
                }
                private static void _Hardness_Date_SetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.Hardness_Date = global::LightSwitchApplication.sps_Hardness.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _Hardness_Date_OnValueChanged(global::LightSwitchApplication.sps_Hardness e)
                {
                    e.Hardness_Date_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry
                    Location = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry(
                        "Location",
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Location_Stub,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Location_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Location_Validate,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Location_GetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Location_SetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Location_OnValueChanged);
                private static void _Location_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Hardness.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data> c, global::LightSwitchApplication.sps_Hardness.DetailsClass d, object sf)
                {
                    c(d, ref d._Location, sf);
                }
                private static bool _Location_ComputeIsReadOnly(global::LightSwitchApplication.sps_Hardness e)
                {
                    bool result = false;
                    e.Location_IsReadOnly(ref result);
                    return result;
                }
                private static void _Location_Validate(global::LightSwitchApplication.sps_Hardness e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Location_Validate(r);
                }
                private static string _Location_GetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.ImplementationEntity.Location;
                }
                private static void _Location_SetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Location = v;
                }
                private static void _Location_OnValueChanged(global::LightSwitchApplication.sps_Hardness e)
                {
                    e.Location_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry
                    Offer_By = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry(
                        "Offer_By",
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Offer_By_Stub,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Offer_By_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Offer_By_Validate,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Offer_By_GetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Offer_By_SetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Offer_By_OnValueChanged);
                private static void _Offer_By_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Hardness.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data> c, global::LightSwitchApplication.sps_Hardness.DetailsClass d, object sf)
                {
                    c(d, ref d._Offer_By, sf);
                }
                private static bool _Offer_By_ComputeIsReadOnly(global::LightSwitchApplication.sps_Hardness e)
                {
                    bool result = false;
                    e.Offer_By_IsReadOnly(ref result);
                    return result;
                }
                private static void _Offer_By_Validate(global::LightSwitchApplication.sps_Hardness e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Offer_By_Validate(r);
                }
                private static string _Offer_By_GetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.ImplementationEntity.Offer_By;
                }
                private static void _Offer_By_SetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Offer_By = v;
                }
                private static void _Offer_By_OnValueChanged(global::LightSwitchApplication.sps_Hardness e)
                {
                    e.Offer_By_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry
                    Insp_By = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry(
                        "Insp_By",
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_By_Stub,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_By_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_By_Validate,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_By_GetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_By_SetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_By_OnValueChanged);
                private static void _Insp_By_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Hardness.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data> c, global::LightSwitchApplication.sps_Hardness.DetailsClass d, object sf)
                {
                    c(d, ref d._Insp_By, sf);
                }
                private static bool _Insp_By_ComputeIsReadOnly(global::LightSwitchApplication.sps_Hardness e)
                {
                    bool result = false;
                    e.Insp_By_IsReadOnly(ref result);
                    return result;
                }
                private static void _Insp_By_Validate(global::LightSwitchApplication.sps_Hardness e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Insp_By_Validate(r);
                }
                private static string _Insp_By_GetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.ImplementationEntity.Insp_By;
                }
                private static void _Insp_By_SetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Insp_By = v;
                }
                private static void _Insp_By_OnValueChanged(global::LightSwitchApplication.sps_Hardness e)
                {
                    e.Insp_By_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    Insp_Date = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "Insp_Date",
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_Date_Stub,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_Date_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_Date_Validate,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_Date_GetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_Date_SetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_Date_OnValueChanged);
                private static void _Insp_Date_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Hardness.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.sps_Hardness.DetailsClass d, object sf)
                {
                    c(d, ref d._Insp_Date, sf);
                }
                private static bool _Insp_Date_ComputeIsReadOnly(global::LightSwitchApplication.sps_Hardness e)
                {
                    bool result = false;
                    e.Insp_Date_IsReadOnly(ref result);
                    return result;
                }
                private static void _Insp_Date_Validate(global::LightSwitchApplication.sps_Hardness e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Insp_Date_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _Insp_Date_GetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.ImplementationEntity.Insp_Date;
                }
                private static void _Insp_Date_SetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.Insp_Date = global::LightSwitchApplication.sps_Hardness.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _Insp_Date_OnValueChanged(global::LightSwitchApplication.sps_Hardness e)
                {
                    e.Insp_Date_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<short>>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<short>>.Entry(
                        "Status",
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Hardness.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<short>>.Data> c, global::LightSwitchApplication.sps_Hardness.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.sps_Hardness e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.sps_Hardness e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static global::System.Nullable<short> _Status_GetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d, global::System.Nullable<short> v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.sps_Hardness e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry
                    QC_Remark = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry(
                        "QC_Remark",
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._QC_Remark_Stub,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._QC_Remark_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._QC_Remark_Validate,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._QC_Remark_GetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._QC_Remark_SetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._QC_Remark_OnValueChanged);
                private static void _QC_Remark_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Hardness.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data> c, global::LightSwitchApplication.sps_Hardness.DetailsClass d, object sf)
                {
                    c(d, ref d._QC_Remark, sf);
                }
                private static bool _QC_Remark_ComputeIsReadOnly(global::LightSwitchApplication.sps_Hardness e)
                {
                    bool result = false;
                    e.QC_Remark_IsReadOnly(ref result);
                    return result;
                }
                private static void _QC_Remark_Validate(global::LightSwitchApplication.sps_Hardness e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QC_Remark_Validate(r);
                }
                private static string _QC_Remark_GetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.ImplementationEntity.QC_Remark;
                }
                private static void _QC_Remark_SetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d, string v)
                {
                    d.ImplementationEntity.QC_Remark = v;
                }
                private static void _QC_Remark_OnValueChanged(global::LightSwitchApplication.sps_Hardness e)
                {
                    e.QC_Remark_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry
                    EXEC_Remark = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry(
                        "EXEC_Remark",
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._EXEC_Remark_Stub,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._EXEC_Remark_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._EXEC_Remark_Validate,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._EXEC_Remark_GetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._EXEC_Remark_SetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._EXEC_Remark_OnValueChanged);
                private static void _EXEC_Remark_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Hardness.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data> c, global::LightSwitchApplication.sps_Hardness.DetailsClass d, object sf)
                {
                    c(d, ref d._EXEC_Remark, sf);
                }
                private static bool _EXEC_Remark_ComputeIsReadOnly(global::LightSwitchApplication.sps_Hardness e)
                {
                    bool result = false;
                    e.EXEC_Remark_IsReadOnly(ref result);
                    return result;
                }
                private static void _EXEC_Remark_Validate(global::LightSwitchApplication.sps_Hardness e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EXEC_Remark_Validate(r);
                }
                private static string _EXEC_Remark_GetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.ImplementationEntity.EXEC_Remark;
                }
                private static void _EXEC_Remark_SetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d, string v)
                {
                    d.ImplementationEntity.EXEC_Remark = v;
                }
                private static void _EXEC_Remark_OnValueChanged(global::LightSwitchApplication.sps_Hardness e)
                {
                    e.EXEC_Remark_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    Insp_PlanDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "Insp_PlanDate",
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_PlanDate_Stub,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_PlanDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_PlanDate_Validate,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_PlanDate_GetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_PlanDate_SetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Insp_PlanDate_OnValueChanged);
                private static void _Insp_PlanDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Hardness.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.sps_Hardness.DetailsClass d, object sf)
                {
                    c(d, ref d._Insp_PlanDate, sf);
                }
                private static bool _Insp_PlanDate_ComputeIsReadOnly(global::LightSwitchApplication.sps_Hardness e)
                {
                    bool result = false;
                    e.Insp_PlanDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _Insp_PlanDate_Validate(global::LightSwitchApplication.sps_Hardness e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Insp_PlanDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _Insp_PlanDate_GetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.ImplementationEntity.Insp_PlanDate;
                }
                private static void _Insp_PlanDate_SetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.Insp_PlanDate = global::LightSwitchApplication.sps_Hardness.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _Insp_PlanDate_OnValueChanged(global::LightSwitchApplication.sps_Hardness e)
                {
                    e.Insp_PlanDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry
                    InstID_No = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry(
                        "InstID_No",
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._InstID_No_Stub,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._InstID_No_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._InstID_No_Validate,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._InstID_No_GetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._InstID_No_SetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._InstID_No_OnValueChanged);
                private static void _InstID_No_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Hardness.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data> c, global::LightSwitchApplication.sps_Hardness.DetailsClass d, object sf)
                {
                    c(d, ref d._InstID_No, sf);
                }
                private static bool _InstID_No_ComputeIsReadOnly(global::LightSwitchApplication.sps_Hardness e)
                {
                    bool result = false;
                    e.InstID_No_IsReadOnly(ref result);
                    return result;
                }
                private static void _InstID_No_Validate(global::LightSwitchApplication.sps_Hardness e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.InstID_No_Validate(r);
                }
                private static string _InstID_No_GetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.ImplementationEntity.InstID_No;
                }
                private static void _InstID_No_SetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d, string v)
                {
                    d.ImplementationEntity.InstID_No = v;
                }
                private static void _InstID_No_OnValueChanged(global::LightSwitchApplication.sps_Hardness e)
                {
                    e.InstID_No_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    Cal_Due_Dt = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "Cal_Due_Dt",
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Cal_Due_Dt_Stub,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Cal_Due_Dt_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Cal_Due_Dt_Validate,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Cal_Due_Dt_GetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Cal_Due_Dt_SetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._Cal_Due_Dt_OnValueChanged);
                private static void _Cal_Due_Dt_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Hardness.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.sps_Hardness.DetailsClass d, object sf)
                {
                    c(d, ref d._Cal_Due_Dt, sf);
                }
                private static bool _Cal_Due_Dt_ComputeIsReadOnly(global::LightSwitchApplication.sps_Hardness e)
                {
                    bool result = false;
                    e.Cal_Due_Dt_IsReadOnly(ref result);
                    return result;
                }
                private static void _Cal_Due_Dt_Validate(global::LightSwitchApplication.sps_Hardness e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Cal_Due_Dt_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _Cal_Due_Dt_GetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.ImplementationEntity.Cal_Due_Dt;
                }
                private static void _Cal_Due_Dt_SetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.Cal_Due_Dt = global::LightSwitchApplication.sps_Hardness.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _Cal_Due_Dt_OnValueChanged(global::LightSwitchApplication.sps_Hardness e)
                {
                    e.Cal_Due_Dt_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry
                    AcceptanceValue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Entry(
                        "AcceptanceValue",
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._AcceptanceValue_Stub,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._AcceptanceValue_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._AcceptanceValue_Validate,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._AcceptanceValue_GetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._AcceptanceValue_SetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._AcceptanceValue_OnValueChanged);
                private static void _AcceptanceValue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Hardness.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data> c, global::LightSwitchApplication.sps_Hardness.DetailsClass d, object sf)
                {
                    c(d, ref d._AcceptanceValue, sf);
                }
                private static bool _AcceptanceValue_ComputeIsReadOnly(global::LightSwitchApplication.sps_Hardness e)
                {
                    bool result = false;
                    e.AcceptanceValue_IsReadOnly(ref result);
                    return result;
                }
                private static void _AcceptanceValue_Validate(global::LightSwitchApplication.sps_Hardness e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AcceptanceValue_Validate(r);
                }
                private static string _AcceptanceValue_GetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.ImplementationEntity.AcceptanceValue;
                }
                private static void _AcceptanceValue_SetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AcceptanceValue = v;
                }
                private static void _AcceptanceValue_OnValueChanged(global::LightSwitchApplication.sps_Hardness e)
                {
                    e.AcceptanceValue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::LightSwitchApplication.sps_Contractor_Module>.Entry
                    sps_Contractor_Module = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::LightSwitchApplication.sps_Contractor_Module>.Entry(
                        "sps_Contractor_Module",
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._sps_Contractor_Module_Stub,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._sps_Contractor_Module_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._sps_Contractor_Module_Validate,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._sps_Contractor_Module_GetCoreImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._sps_Contractor_Module_GetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._sps_Contractor_Module_SetImplementationValue,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._sps_Contractor_Module_Refresh,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._sps_Contractor_Module_OnValueChanged);
                private static void _sps_Contractor_Module_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Hardness.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::LightSwitchApplication.sps_Contractor_Module>.Data> c, global::LightSwitchApplication.sps_Hardness.DetailsClass d, object sf)
                {
                    c(d, ref d._sps_Contractor_Module, sf);
                }
                private static bool _sps_Contractor_Module_ComputeIsReadOnly(global::LightSwitchApplication.sps_Hardness e)
                {
                    bool result = false;
                    e.sps_Contractor_Module_IsReadOnly(ref result);
                    return result;
                }
                private static void _sps_Contractor_Module_Validate(global::LightSwitchApplication.sps_Hardness e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.sps_Contractor_Module_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _sps_Contractor_Module_GetCoreImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.ImplementationEntity.sps_Contractor_Module;
                }
                private static global::LightSwitchApplication.sps_Contractor_Module _sps_Contractor_Module_GetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.sps_Contractor_Module, global::LightSwitchApplication.sps_Contractor_Module.DetailsClass>(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.sps_Contractor_Module, ref d._sps_Contractor_Module);
                }
                private static void _sps_Contractor_Module_SetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass d, global::LightSwitchApplication.sps_Contractor_Module v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.sps_Contractor_Module, ref d._sps_Contractor_Module, (i, ev) => i.sps_Contractor_Module = ev, v);
                }
                private static void _sps_Contractor_Module_Refresh(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.sps_Contractor_Module, ref d._sps_Contractor_Module);
                }
                private static void _sps_Contractor_Module_OnValueChanged(global::LightSwitchApplication.sps_Hardness e)
                {
                    e.sps_Contractor_Module_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::LightSwitchApplication.sps_HardnessDetail>.Entry
                    sps_HardnessDetails = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::LightSwitchApplication.sps_HardnessDetail>.Entry(
                        "sps_HardnessDetails",
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._sps_HardnessDetails_Stub,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._sps_HardnessDetails_GetReferencedEntities,
                        global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties._sps_HardnessDetails_GetEntityCollection);
                private static void _sps_HardnessDetails_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Hardness.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::LightSwitchApplication.sps_HardnessDetail>.Data> c, global::LightSwitchApplication.sps_Hardness.DetailsClass d, object sf)
                {
                    c(d, ref d._sps_HardnessDetails, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_HardnessDetail> _sps_HardnessDetails_GetReferencedEntities(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.sps_HardnessDetail, global::LightSwitchApplication.sps_HardnessDetail.DetailsClass>(global::LightSwitchApplication.sps_Hardness.DetailsClass.PropertySetProperties.sps_HardnessDetails, ref d._sps_HardnessDetails);
                }
                private static global::System.Collections.IEnumerable _sps_HardnessDetails_GetEntityCollection(global::LightSwitchApplication.sps_Hardness.DetailsClass d)
                {
                    return d.ImplementationEntity.sps_HardnessDetails;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data _Hardness_No;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _Hardness_Date;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data _Location;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data _Offer_By;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data _Insp_By;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _Insp_Date;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<short>>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data _QC_Remark;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data _EXEC_Remark;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _Insp_PlanDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data _InstID_No;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _Cal_Due_Dt;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, string>.Data _AcceptanceValue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::LightSwitchApplication.sps_Contractor_Module>.Data _sps_Contractor_Module;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.sps_Hardness, global::LightSwitchApplication.sps_Hardness.DetailsClass, global::LightSwitchApplication.sps_HardnessDetail>.Data _sps_HardnessDetails;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class sps_Location : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the sps_Location entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sps_Location()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sps_Location(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.sps_Location> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.sps_Location.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Location_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Location_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Plant
        {
            get
            {
                return global::LightSwitchApplication.sps_Location.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties.Plant);
            }
            set
            {
                global::LightSwitchApplication.sps_Location.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties.Plant, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Plant_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Plant_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Plant_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Location
        {
            get
            {
                return global::LightSwitchApplication.sps_Location.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties.Location);
            }
            set
            {
                global::LightSwitchApplication.sps_Location.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties.Location, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectID
        {
            get
            {
                return global::LightSwitchApplication.sps_Location.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties.ProjectID);
            }
            set
            {
                global::LightSwitchApplication.sps_Location.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties.ProjectID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> Active
        {
            get
            {
                return global::LightSwitchApplication.sps_Location.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties.Active);
            }
            set
            {
                global::LightSwitchApplication.sps_Location.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties.Active, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Active_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Active_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Active_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.sps_Location,
                global::LightSwitchApplication.sps_Location.DetailsClass,
                global::LightSwitchApplication.sps_Location.DetailsClass.IImplementation,
                global::LightSwitchApplication.sps_Location.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties.Plant;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass>.Entry
                __sps_LocationEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass>.Entry(
                    global::LightSwitchApplication.sps_Location.DetailsClass.__sps_Location_CreateNew,
                    global::LightSwitchApplication.sps_Location.DetailsClass.__sps_Location_Created,
                    global::LightSwitchApplication.sps_Location.DetailsClass.__sps_Location_AllowSaveWithErrors);
            private static global::LightSwitchApplication.sps_Location __sps_Location_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.sps_Location> es)
            {
                return new global::LightSwitchApplication.sps_Location(es);
            }
            private static void __sps_Location_Created(global::LightSwitchApplication.sps_Location e)
            {
                e.sps_Location_Created();
            }
            private static bool __sps_Location_AllowSaveWithErrors(global::LightSwitchApplication.sps_Location e)
            {
                bool result = false;
                e.sps_Location_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.sps_Location.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string> Plant
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties.Plant) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string> Location
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties.Location) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string> ProjectID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties.ProjectID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, global::System.Nullable<bool>> Active
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties.Active) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string Plant { get; set; }
                new string Location { get; set; }
                new string ProjectID { get; set; }
                new global::System.Nullable<bool> Active { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string>.Entry
                    Plant = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string>.Entry(
                        "Plant",
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Plant_Stub,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Plant_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Plant_Validate,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Plant_GetImplementationValue,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Plant_SetImplementationValue,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Plant_OnValueChanged);
                private static void _Plant_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Location.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string>.Data> c, global::LightSwitchApplication.sps_Location.DetailsClass d, object sf)
                {
                    c(d, ref d._Plant, sf);
                }
                private static bool _Plant_ComputeIsReadOnly(global::LightSwitchApplication.sps_Location e)
                {
                    bool result = false;
                    e.Plant_IsReadOnly(ref result);
                    return result;
                }
                private static void _Plant_Validate(global::LightSwitchApplication.sps_Location e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Plant_Validate(r);
                }
                private static string _Plant_GetImplementationValue(global::LightSwitchApplication.sps_Location.DetailsClass d)
                {
                    return d.ImplementationEntity.Plant;
                }
                private static void _Plant_SetImplementationValue(global::LightSwitchApplication.sps_Location.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Plant = v;
                }
                private static void _Plant_OnValueChanged(global::LightSwitchApplication.sps_Location e)
                {
                    e.Plant_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string>.Entry
                    Location = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string>.Entry(
                        "Location",
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Location_Stub,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Location_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Location_Validate,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Location_GetImplementationValue,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Location_SetImplementationValue,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Location_OnValueChanged);
                private static void _Location_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Location.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string>.Data> c, global::LightSwitchApplication.sps_Location.DetailsClass d, object sf)
                {
                    c(d, ref d._Location, sf);
                }
                private static bool _Location_ComputeIsReadOnly(global::LightSwitchApplication.sps_Location e)
                {
                    bool result = false;
                    e.Location_IsReadOnly(ref result);
                    return result;
                }
                private static void _Location_Validate(global::LightSwitchApplication.sps_Location e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Location_Validate(r);
                }
                private static string _Location_GetImplementationValue(global::LightSwitchApplication.sps_Location.DetailsClass d)
                {
                    return d.ImplementationEntity.Location;
                }
                private static void _Location_SetImplementationValue(global::LightSwitchApplication.sps_Location.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Location = v;
                }
                private static void _Location_OnValueChanged(global::LightSwitchApplication.sps_Location e)
                {
                    e.Location_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string>.Entry
                    ProjectID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string>.Entry(
                        "ProjectID",
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._ProjectID_Stub,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._ProjectID_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._ProjectID_Validate,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._ProjectID_GetImplementationValue,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._ProjectID_SetImplementationValue,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._ProjectID_OnValueChanged);
                private static void _ProjectID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Location.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string>.Data> c, global::LightSwitchApplication.sps_Location.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectID, sf);
                }
                private static bool _ProjectID_ComputeIsReadOnly(global::LightSwitchApplication.sps_Location e)
                {
                    bool result = false;
                    e.ProjectID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectID_Validate(global::LightSwitchApplication.sps_Location e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectID_Validate(r);
                }
                private static string _ProjectID_GetImplementationValue(global::LightSwitchApplication.sps_Location.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectID;
                }
                private static void _ProjectID_SetImplementationValue(global::LightSwitchApplication.sps_Location.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProjectID = v;
                }
                private static void _ProjectID_OnValueChanged(global::LightSwitchApplication.sps_Location e)
                {
                    e.ProjectID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, global::System.Nullable<bool>>.Entry
                    Active = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "Active",
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Active_Stub,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Active_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Active_Validate,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Active_GetImplementationValue,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Active_SetImplementationValue,
                        global::LightSwitchApplication.sps_Location.DetailsClass.PropertySetProperties._Active_OnValueChanged);
                private static void _Active_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Location.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.sps_Location.DetailsClass d, object sf)
                {
                    c(d, ref d._Active, sf);
                }
                private static bool _Active_ComputeIsReadOnly(global::LightSwitchApplication.sps_Location e)
                {
                    bool result = false;
                    e.Active_IsReadOnly(ref result);
                    return result;
                }
                private static void _Active_Validate(global::LightSwitchApplication.sps_Location e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Active_Validate(r);
                }
                private static global::System.Nullable<bool> _Active_GetImplementationValue(global::LightSwitchApplication.sps_Location.DetailsClass d)
                {
                    return d.ImplementationEntity.Active;
                }
                private static void _Active_SetImplementationValue(global::LightSwitchApplication.sps_Location.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.Active = v;
                }
                private static void _Active_OnValueChanged(global::LightSwitchApplication.sps_Location e)
                {
                    e.Active_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string>.Data _Plant;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string>.Data _Location;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, string>.Data _ProjectID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Location, global::LightSwitchApplication.sps_Location.DetailsClass, global::System.Nullable<bool>>.Data _Active;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class sps_Master_Proceduer : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the sps_Master_Proceduer entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sps_Master_Proceduer()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sps_Master_Proceduer(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.sps_Master_Proceduer> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Master_Proceduer_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Master_Proceduer_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Report_Type
        {
            get
            {
                return global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties.Report_Type);
            }
            set
            {
                global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties.Report_Type, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Report_Type_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Report_Type_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Report_Type_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Procedures
        {
            get
            {
                return global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties.Procedures);
            }
            set
            {
                global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties.Procedures, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Procedures_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Procedures_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Procedures_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectID
        {
            get
            {
                return global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties.ProjectID);
            }
            set
            {
                global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties.ProjectID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> Active
        {
            get
            {
                return global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.GetValue(this, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties.Active);
            }
            set
            {
                global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.SetValue(this, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties.Active, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Active_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Active_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Active_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.sps_Master_Proceduer,
                global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass,
                global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.IImplementation,
                global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties.Report_Type;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass>.Entry
                __sps_Master_ProceduerEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass>.Entry(
                    global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.__sps_Master_Proceduer_CreateNew,
                    global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.__sps_Master_Proceduer_Created,
                    global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.__sps_Master_Proceduer_AllowSaveWithErrors);
            private static global::LightSwitchApplication.sps_Master_Proceduer __sps_Master_Proceduer_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.sps_Master_Proceduer> es)
            {
                return new global::LightSwitchApplication.sps_Master_Proceduer(es);
            }
            private static void __sps_Master_Proceduer_Created(global::LightSwitchApplication.sps_Master_Proceduer e)
            {
                e.sps_Master_Proceduer_Created();
            }
            private static bool __sps_Master_Proceduer_AllowSaveWithErrors(global::LightSwitchApplication.sps_Master_Proceduer e)
            {
                bool result = false;
                e.sps_Master_Proceduer_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string> Report_Type
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties.Report_Type) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string> Procedures
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties.Procedures) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string> ProjectID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties.ProjectID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, global::System.Nullable<bool>> Active
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties.Active) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string Report_Type { get; set; }
                new string Procedures { get; set; }
                new string ProjectID { get; set; }
                new global::System.Nullable<bool> Active { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string>.Entry
                    Report_Type = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string>.Entry(
                        "Report_Type",
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Report_Type_Stub,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Report_Type_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Report_Type_Validate,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Report_Type_GetImplementationValue,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Report_Type_SetImplementationValue,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Report_Type_OnValueChanged);
                private static void _Report_Type_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string>.Data> c, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass d, object sf)
                {
                    c(d, ref d._Report_Type, sf);
                }
                private static bool _Report_Type_ComputeIsReadOnly(global::LightSwitchApplication.sps_Master_Proceduer e)
                {
                    bool result = false;
                    e.Report_Type_IsReadOnly(ref result);
                    return result;
                }
                private static void _Report_Type_Validate(global::LightSwitchApplication.sps_Master_Proceduer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Report_Type_Validate(r);
                }
                private static string _Report_Type_GetImplementationValue(global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass d)
                {
                    return d.ImplementationEntity.Report_Type;
                }
                private static void _Report_Type_SetImplementationValue(global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Report_Type = v;
                }
                private static void _Report_Type_OnValueChanged(global::LightSwitchApplication.sps_Master_Proceduer e)
                {
                    e.Report_Type_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string>.Entry
                    Procedures = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string>.Entry(
                        "Procedures",
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Procedures_Stub,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Procedures_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Procedures_Validate,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Procedures_GetImplementationValue,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Procedures_SetImplementationValue,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Procedures_OnValueChanged);
                private static void _Procedures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string>.Data> c, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass d, object sf)
                {
                    c(d, ref d._Procedures, sf);
                }
                private static bool _Procedures_ComputeIsReadOnly(global::LightSwitchApplication.sps_Master_Proceduer e)
                {
                    bool result = false;
                    e.Procedures_IsReadOnly(ref result);
                    return result;
                }
                private static void _Procedures_Validate(global::LightSwitchApplication.sps_Master_Proceduer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Procedures_Validate(r);
                }
                private static string _Procedures_GetImplementationValue(global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass d)
                {
                    return d.ImplementationEntity.Procedures;
                }
                private static void _Procedures_SetImplementationValue(global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Procedures = v;
                }
                private static void _Procedures_OnValueChanged(global::LightSwitchApplication.sps_Master_Proceduer e)
                {
                    e.Procedures_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string>.Entry
                    ProjectID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string>.Entry(
                        "ProjectID",
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._ProjectID_Stub,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._ProjectID_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._ProjectID_Validate,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._ProjectID_GetImplementationValue,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._ProjectID_SetImplementationValue,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._ProjectID_OnValueChanged);
                private static void _ProjectID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string>.Data> c, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectID, sf);
                }
                private static bool _ProjectID_ComputeIsReadOnly(global::LightSwitchApplication.sps_Master_Proceduer e)
                {
                    bool result = false;
                    e.ProjectID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectID_Validate(global::LightSwitchApplication.sps_Master_Proceduer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectID_Validate(r);
                }
                private static string _ProjectID_GetImplementationValue(global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectID;
                }
                private static void _ProjectID_SetImplementationValue(global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProjectID = v;
                }
                private static void _ProjectID_OnValueChanged(global::LightSwitchApplication.sps_Master_Proceduer e)
                {
                    e.ProjectID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, global::System.Nullable<bool>>.Entry
                    Active = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "Active",
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Active_Stub,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Active_ComputeIsReadOnly,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Active_Validate,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Active_GetImplementationValue,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Active_SetImplementationValue,
                        global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass.PropertySetProperties._Active_OnValueChanged);
                private static void _Active_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass d, object sf)
                {
                    c(d, ref d._Active, sf);
                }
                private static bool _Active_ComputeIsReadOnly(global::LightSwitchApplication.sps_Master_Proceduer e)
                {
                    bool result = false;
                    e.Active_IsReadOnly(ref result);
                    return result;
                }
                private static void _Active_Validate(global::LightSwitchApplication.sps_Master_Proceduer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Active_Validate(r);
                }
                private static global::System.Nullable<bool> _Active_GetImplementationValue(global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass d)
                {
                    return d.ImplementationEntity.Active;
                }
                private static void _Active_SetImplementationValue(global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.Active = v;
                }
                private static void _Active_OnValueChanged(global::LightSwitchApplication.sps_Master_Proceduer e)
                {
                    e.Active_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string>.Data _Report_Type;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string>.Data _Procedures;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, string>.Data _ProjectID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.sps_Master_Proceduer, global::LightSwitchApplication.sps_Master_Proceduer.DetailsClass, global::System.Nullable<bool>>.Data _Active;
            
        }
    
        #endregion
    }
    
    #endregion
}
