

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class GET_INSPECT_MPI_AFTERaccept : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the GET_INSPECT_MPI_AFTERaccept entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_INSPECT_MPI_AFTERaccept()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_INSPECT_MPI_AFTERaccept(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_INSPECT_MPI_AFTERaccept_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_INSPECT_MPI_AFTERaccept_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MPI_No
        {
            get
            {
                return global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.MPI_No);
            }
            set
            {
                global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.MPI_No, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MPI_No_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MPI_No_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MPI_No_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> MPI_Date
        {
            get
            {
                return global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.MPI_Date);
            }
            set
            {
                global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.MPI_Date, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MPI_Date_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MPI_Date_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MPI_Date_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> Insp_PlanDate
        {
            get
            {
                return global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.Insp_PlanDate);
            }
            set
            {
                global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.Insp_PlanDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Insp_PlanDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Insp_PlanDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Insp_PlanDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Module_ID_l2_Module
        {
            get
            {
                return global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.Module_ID_l2_Module);
            }
            set
            {
                global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.Module_ID_l2_Module, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_ID_l2_Module_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_ID_l2_Module_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_ID_l2_Module_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Module_Name
        {
            get
            {
                return global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.Module_Name);
            }
            set
            {
                global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.Module_Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Offer_By
        {
            get
            {
                return global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.Offer_By);
            }
            set
            {
                global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.Offer_By, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Offer_By_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Offer_By_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Offer_By_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept,
                global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass,
                global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.IImplementation,
                global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.MPI_No;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass>.Entry
                __GET_INSPECT_MPI_AFTERacceptEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass>.Entry(
                    global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.__GET_INSPECT_MPI_AFTERaccept_CreateNew,
                    global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.__GET_INSPECT_MPI_AFTERaccept_Created,
                    global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.__GET_INSPECT_MPI_AFTERaccept_AllowSaveWithErrors);
            private static global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept __GET_INSPECT_MPI_AFTERaccept_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept> es)
            {
                return new global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept(es);
            }
            private static void __GET_INSPECT_MPI_AFTERaccept_Created(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e)
            {
                e.GET_INSPECT_MPI_AFTERaccept_Created();
            }
            private static bool __GET_INSPECT_MPI_AFTERaccept_AllowSaveWithErrors(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e)
            {
                bool result = false;
                e.GET_INSPECT_MPI_AFTERaccept_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string> MPI_No
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.MPI_No) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::System.Nullable<global::System.DateTime>> MPI_Date
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.MPI_Date) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::System.Nullable<global::System.DateTime>> Insp_PlanDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.Insp_PlanDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string> Module_ID_l2_Module
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.Module_ID_l2_Module) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string> Module_Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.Module_Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string> Offer_By
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties.Offer_By) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string MPI_No { get; set; }
                new global::System.Nullable<global::System.DateTime> MPI_Date { get; set; }
                new global::System.Nullable<global::System.DateTime> Insp_PlanDate { get; set; }
                new string Module_ID_l2_Module { get; set; }
                new string Module_Name { get; set; }
                new string Offer_By { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Entry
                    MPI_No = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Entry(
                        "MPI_No",
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._MPI_No_Stub,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._MPI_No_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._MPI_No_Validate,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._MPI_No_GetImplementationValue,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._MPI_No_SetImplementationValue,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._MPI_No_OnValueChanged);
                private static void _MPI_No_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d, object sf)
                {
                    c(d, ref d._MPI_No, sf);
                }
                private static bool _MPI_No_ComputeIsReadOnly(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e)
                {
                    bool result = false;
                    e.MPI_No_IsReadOnly(ref result);
                    return result;
                }
                private static void _MPI_No_Validate(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MPI_No_Validate(r);
                }
                private static string _MPI_No_GetImplementationValue(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d)
                {
                    return d.ImplementationEntity.MPI_No;
                }
                private static void _MPI_No_SetImplementationValue(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MPI_No = v;
                }
                private static void _MPI_No_OnValueChanged(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e)
                {
                    e.MPI_No_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    MPI_Date = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "MPI_Date",
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._MPI_Date_Stub,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._MPI_Date_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._MPI_Date_Validate,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._MPI_Date_GetImplementationValue,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._MPI_Date_SetImplementationValue,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._MPI_Date_OnValueChanged);
                private static void _MPI_Date_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d, object sf)
                {
                    c(d, ref d._MPI_Date, sf);
                }
                private static bool _MPI_Date_ComputeIsReadOnly(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e)
                {
                    bool result = false;
                    e.MPI_Date_IsReadOnly(ref result);
                    return result;
                }
                private static void _MPI_Date_Validate(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MPI_Date_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _MPI_Date_GetImplementationValue(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d)
                {
                    return d.ImplementationEntity.MPI_Date;
                }
                private static void _MPI_Date_SetImplementationValue(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.MPI_Date = global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _MPI_Date_OnValueChanged(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e)
                {
                    e.MPI_Date_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    Insp_PlanDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "Insp_PlanDate",
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Insp_PlanDate_Stub,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Insp_PlanDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Insp_PlanDate_Validate,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Insp_PlanDate_GetImplementationValue,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Insp_PlanDate_SetImplementationValue,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Insp_PlanDate_OnValueChanged);
                private static void _Insp_PlanDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d, object sf)
                {
                    c(d, ref d._Insp_PlanDate, sf);
                }
                private static bool _Insp_PlanDate_ComputeIsReadOnly(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e)
                {
                    bool result = false;
                    e.Insp_PlanDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _Insp_PlanDate_Validate(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Insp_PlanDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _Insp_PlanDate_GetImplementationValue(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d)
                {
                    return d.ImplementationEntity.Insp_PlanDate;
                }
                private static void _Insp_PlanDate_SetImplementationValue(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.Insp_PlanDate = global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _Insp_PlanDate_OnValueChanged(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e)
                {
                    e.Insp_PlanDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Entry
                    Module_ID_l2_Module = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Entry(
                        "Module_ID_l2_Module",
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Module_ID_l2_Module_Stub,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Module_ID_l2_Module_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Module_ID_l2_Module_Validate,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Module_ID_l2_Module_GetImplementationValue,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Module_ID_l2_Module_SetImplementationValue,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Module_ID_l2_Module_OnValueChanged);
                private static void _Module_ID_l2_Module_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d, object sf)
                {
                    c(d, ref d._Module_ID_l2_Module, sf);
                }
                private static bool _Module_ID_l2_Module_ComputeIsReadOnly(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e)
                {
                    bool result = false;
                    e.Module_ID_l2_Module_IsReadOnly(ref result);
                    return result;
                }
                private static void _Module_ID_l2_Module_Validate(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Module_ID_l2_Module_Validate(r);
                }
                private static string _Module_ID_l2_Module_GetImplementationValue(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d)
                {
                    return d.ImplementationEntity.Module_ID_l2_Module;
                }
                private static void _Module_ID_l2_Module_SetImplementationValue(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Module_ID_l2_Module = v;
                }
                private static void _Module_ID_l2_Module_OnValueChanged(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e)
                {
                    e.Module_ID_l2_Module_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Entry
                    Module_Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Entry(
                        "Module_Name",
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Module_Name_Stub,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Module_Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Module_Name_Validate,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Module_Name_GetImplementationValue,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Module_Name_SetImplementationValue,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Module_Name_OnValueChanged);
                private static void _Module_Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d, object sf)
                {
                    c(d, ref d._Module_Name, sf);
                }
                private static bool _Module_Name_ComputeIsReadOnly(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e)
                {
                    bool result = false;
                    e.Module_Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Module_Name_Validate(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Module_Name_Validate(r);
                }
                private static string _Module_Name_GetImplementationValue(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d)
                {
                    return d.ImplementationEntity.Module_Name;
                }
                private static void _Module_Name_SetImplementationValue(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Module_Name = v;
                }
                private static void _Module_Name_OnValueChanged(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e)
                {
                    e.Module_Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Entry
                    Offer_By = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Entry(
                        "Offer_By",
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Offer_By_Stub,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Offer_By_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Offer_By_Validate,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Offer_By_GetImplementationValue,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Offer_By_SetImplementationValue,
                        global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass.PropertySetProperties._Offer_By_OnValueChanged);
                private static void _Offer_By_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d, object sf)
                {
                    c(d, ref d._Offer_By, sf);
                }
                private static bool _Offer_By_ComputeIsReadOnly(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e)
                {
                    bool result = false;
                    e.Offer_By_IsReadOnly(ref result);
                    return result;
                }
                private static void _Offer_By_Validate(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Offer_By_Validate(r);
                }
                private static string _Offer_By_GetImplementationValue(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d)
                {
                    return d.ImplementationEntity.Offer_By;
                }
                private static void _Offer_By_SetImplementationValue(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Offer_By = v;
                }
                private static void _Offer_By_OnValueChanged(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e)
                {
                    e.Offer_By_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Data _MPI_No;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _MPI_Date;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _Insp_PlanDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Data _Module_ID_l2_Module;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Data _Module_Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept.DetailsClass, string>.Data _Offer_By;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class GET_MPI_INSPECT : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the GET_MPI_INSPECT entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_MPI_INSPECT()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_MPI_INSPECT(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.GET_MPI_INSPECT> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_MPI_INSPECT_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_MPI_INSPECT_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MPI_No
        {
            get
            {
                return global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.MPI_No);
            }
            set
            {
                global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.MPI_No, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MPI_No_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MPI_No_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MPI_No_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> MPI_Date
        {
            get
            {
                return global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.MPI_Date);
            }
            set
            {
                global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.MPI_Date, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MPI_Date_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MPI_Date_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MPI_Date_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> Insp_PlanDate
        {
            get
            {
                return global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.Insp_PlanDate);
            }
            set
            {
                global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.Insp_PlanDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Insp_PlanDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Insp_PlanDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Insp_PlanDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Module_ID_l2_Module
        {
            get
            {
                return global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.Module_ID_l2_Module);
            }
            set
            {
                global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.Module_ID_l2_Module, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_ID_l2_Module_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_ID_l2_Module_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_ID_l2_Module_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Module_Name
        {
            get
            {
                return global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.Module_Name);
            }
            set
            {
                global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.Module_Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Offer_By
        {
            get
            {
                return global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.Offer_By);
            }
            set
            {
                global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.Offer_By, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Offer_By_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Offer_By_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Offer_By_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Contractor
        {
            get
            {
                return global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.Contractor);
            }
            set
            {
                global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.Contractor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contractor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contractor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contractor_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.GET_MPI_INSPECT,
                global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass,
                global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.IImplementation,
                global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.MPI_No;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass>.Entry
                __GET_MPI_INSPECTEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass>.Entry(
                    global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.__GET_MPI_INSPECT_CreateNew,
                    global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.__GET_MPI_INSPECT_Created,
                    global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.__GET_MPI_INSPECT_AllowSaveWithErrors);
            private static global::LightSwitchApplication.GET_MPI_INSPECT __GET_MPI_INSPECT_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.GET_MPI_INSPECT> es)
            {
                return new global::LightSwitchApplication.GET_MPI_INSPECT(es);
            }
            private static void __GET_MPI_INSPECT_Created(global::LightSwitchApplication.GET_MPI_INSPECT e)
            {
                e.GET_MPI_INSPECT_Created();
            }
            private static bool __GET_MPI_INSPECT_AllowSaveWithErrors(global::LightSwitchApplication.GET_MPI_INSPECT e)
            {
                bool result = false;
                e.GET_MPI_INSPECT_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string> MPI_No
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.MPI_No) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::System.Nullable<global::System.DateTime>> MPI_Date
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.MPI_Date) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::System.Nullable<global::System.DateTime>> Insp_PlanDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.Insp_PlanDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string> Module_ID_l2_Module
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.Module_ID_l2_Module) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string> Module_Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.Module_Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string> Offer_By
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.Offer_By) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string> Contractor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties.Contractor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string MPI_No { get; set; }
                new global::System.Nullable<global::System.DateTime> MPI_Date { get; set; }
                new global::System.Nullable<global::System.DateTime> Insp_PlanDate { get; set; }
                new string Module_ID_l2_Module { get; set; }
                new string Module_Name { get; set; }
                new string Offer_By { get; set; }
                new string Contractor { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Entry
                    MPI_No = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Entry(
                        "MPI_No",
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._MPI_No_Stub,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._MPI_No_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._MPI_No_Validate,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._MPI_No_GetImplementationValue,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._MPI_No_SetImplementationValue,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._MPI_No_OnValueChanged);
                private static void _MPI_No_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d, object sf)
                {
                    c(d, ref d._MPI_No, sf);
                }
                private static bool _MPI_No_ComputeIsReadOnly(global::LightSwitchApplication.GET_MPI_INSPECT e)
                {
                    bool result = false;
                    e.MPI_No_IsReadOnly(ref result);
                    return result;
                }
                private static void _MPI_No_Validate(global::LightSwitchApplication.GET_MPI_INSPECT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MPI_No_Validate(r);
                }
                private static string _MPI_No_GetImplementationValue(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d)
                {
                    return d.ImplementationEntity.MPI_No;
                }
                private static void _MPI_No_SetImplementationValue(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MPI_No = v;
                }
                private static void _MPI_No_OnValueChanged(global::LightSwitchApplication.GET_MPI_INSPECT e)
                {
                    e.MPI_No_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    MPI_Date = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "MPI_Date",
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._MPI_Date_Stub,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._MPI_Date_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._MPI_Date_Validate,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._MPI_Date_GetImplementationValue,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._MPI_Date_SetImplementationValue,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._MPI_Date_OnValueChanged);
                private static void _MPI_Date_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d, object sf)
                {
                    c(d, ref d._MPI_Date, sf);
                }
                private static bool _MPI_Date_ComputeIsReadOnly(global::LightSwitchApplication.GET_MPI_INSPECT e)
                {
                    bool result = false;
                    e.MPI_Date_IsReadOnly(ref result);
                    return result;
                }
                private static void _MPI_Date_Validate(global::LightSwitchApplication.GET_MPI_INSPECT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MPI_Date_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _MPI_Date_GetImplementationValue(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d)
                {
                    return d.ImplementationEntity.MPI_Date;
                }
                private static void _MPI_Date_SetImplementationValue(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.MPI_Date = global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _MPI_Date_OnValueChanged(global::LightSwitchApplication.GET_MPI_INSPECT e)
                {
                    e.MPI_Date_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    Insp_PlanDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "Insp_PlanDate",
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Insp_PlanDate_Stub,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Insp_PlanDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Insp_PlanDate_Validate,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Insp_PlanDate_GetImplementationValue,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Insp_PlanDate_SetImplementationValue,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Insp_PlanDate_OnValueChanged);
                private static void _Insp_PlanDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d, object sf)
                {
                    c(d, ref d._Insp_PlanDate, sf);
                }
                private static bool _Insp_PlanDate_ComputeIsReadOnly(global::LightSwitchApplication.GET_MPI_INSPECT e)
                {
                    bool result = false;
                    e.Insp_PlanDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _Insp_PlanDate_Validate(global::LightSwitchApplication.GET_MPI_INSPECT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Insp_PlanDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _Insp_PlanDate_GetImplementationValue(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d)
                {
                    return d.ImplementationEntity.Insp_PlanDate;
                }
                private static void _Insp_PlanDate_SetImplementationValue(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.Insp_PlanDate = global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _Insp_PlanDate_OnValueChanged(global::LightSwitchApplication.GET_MPI_INSPECT e)
                {
                    e.Insp_PlanDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Entry
                    Module_ID_l2_Module = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Entry(
                        "Module_ID_l2_Module",
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Module_ID_l2_Module_Stub,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Module_ID_l2_Module_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Module_ID_l2_Module_Validate,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Module_ID_l2_Module_GetImplementationValue,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Module_ID_l2_Module_SetImplementationValue,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Module_ID_l2_Module_OnValueChanged);
                private static void _Module_ID_l2_Module_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d, object sf)
                {
                    c(d, ref d._Module_ID_l2_Module, sf);
                }
                private static bool _Module_ID_l2_Module_ComputeIsReadOnly(global::LightSwitchApplication.GET_MPI_INSPECT e)
                {
                    bool result = false;
                    e.Module_ID_l2_Module_IsReadOnly(ref result);
                    return result;
                }
                private static void _Module_ID_l2_Module_Validate(global::LightSwitchApplication.GET_MPI_INSPECT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Module_ID_l2_Module_Validate(r);
                }
                private static string _Module_ID_l2_Module_GetImplementationValue(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d)
                {
                    return d.ImplementationEntity.Module_ID_l2_Module;
                }
                private static void _Module_ID_l2_Module_SetImplementationValue(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Module_ID_l2_Module = v;
                }
                private static void _Module_ID_l2_Module_OnValueChanged(global::LightSwitchApplication.GET_MPI_INSPECT e)
                {
                    e.Module_ID_l2_Module_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Entry
                    Module_Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Entry(
                        "Module_Name",
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Module_Name_Stub,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Module_Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Module_Name_Validate,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Module_Name_GetImplementationValue,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Module_Name_SetImplementationValue,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Module_Name_OnValueChanged);
                private static void _Module_Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d, object sf)
                {
                    c(d, ref d._Module_Name, sf);
                }
                private static bool _Module_Name_ComputeIsReadOnly(global::LightSwitchApplication.GET_MPI_INSPECT e)
                {
                    bool result = false;
                    e.Module_Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Module_Name_Validate(global::LightSwitchApplication.GET_MPI_INSPECT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Module_Name_Validate(r);
                }
                private static string _Module_Name_GetImplementationValue(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d)
                {
                    return d.ImplementationEntity.Module_Name;
                }
                private static void _Module_Name_SetImplementationValue(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Module_Name = v;
                }
                private static void _Module_Name_OnValueChanged(global::LightSwitchApplication.GET_MPI_INSPECT e)
                {
                    e.Module_Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Entry
                    Offer_By = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Entry(
                        "Offer_By",
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Offer_By_Stub,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Offer_By_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Offer_By_Validate,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Offer_By_GetImplementationValue,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Offer_By_SetImplementationValue,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Offer_By_OnValueChanged);
                private static void _Offer_By_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d, object sf)
                {
                    c(d, ref d._Offer_By, sf);
                }
                private static bool _Offer_By_ComputeIsReadOnly(global::LightSwitchApplication.GET_MPI_INSPECT e)
                {
                    bool result = false;
                    e.Offer_By_IsReadOnly(ref result);
                    return result;
                }
                private static void _Offer_By_Validate(global::LightSwitchApplication.GET_MPI_INSPECT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Offer_By_Validate(r);
                }
                private static string _Offer_By_GetImplementationValue(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d)
                {
                    return d.ImplementationEntity.Offer_By;
                }
                private static void _Offer_By_SetImplementationValue(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Offer_By = v;
                }
                private static void _Offer_By_OnValueChanged(global::LightSwitchApplication.GET_MPI_INSPECT e)
                {
                    e.Offer_By_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Entry
                    Contractor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Entry(
                        "Contractor",
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Contractor_Stub,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Contractor_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Contractor_Validate,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Contractor_GetImplementationValue,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Contractor_SetImplementationValue,
                        global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass.PropertySetProperties._Contractor_OnValueChanged);
                private static void _Contractor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d, object sf)
                {
                    c(d, ref d._Contractor, sf);
                }
                private static bool _Contractor_ComputeIsReadOnly(global::LightSwitchApplication.GET_MPI_INSPECT e)
                {
                    bool result = false;
                    e.Contractor_IsReadOnly(ref result);
                    return result;
                }
                private static void _Contractor_Validate(global::LightSwitchApplication.GET_MPI_INSPECT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Contractor_Validate(r);
                }
                private static string _Contractor_GetImplementationValue(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d)
                {
                    return d.ImplementationEntity.Contractor;
                }
                private static void _Contractor_SetImplementationValue(global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Contractor = v;
                }
                private static void _Contractor_OnValueChanged(global::LightSwitchApplication.GET_MPI_INSPECT e)
                {
                    e.Contractor_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Data _MPI_No;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _MPI_Date;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _Insp_PlanDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Data _Module_ID_l2_Module;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Data _Module_Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Data _Offer_By;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_MPI_INSPECT, global::LightSwitchApplication.GET_MPI_INSPECT.DetailsClass, string>.Data _Contractor;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class GET_PWHT_INSPECT_ACCEPT : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the GET_PWHT_INSPECT_ACCEPT entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_PWHT_INSPECT_ACCEPT()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_PWHT_INSPECT_ACCEPT(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_PWHT_INSPECT_ACCEPT_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_PWHT_INSPECT_ACCEPT_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PWHT_No
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.PWHT_No);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.PWHT_No, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PWHT_No_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PWHT_No_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PWHT_No_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DrgNo
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.DrgNo);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.DrgNo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Joint_ID
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Joint_ID);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Joint_ID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Joint_ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Joint_ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Joint_ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Joint_No
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Joint_No);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Joint_No, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Joint_No_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Joint_No_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Joint_No_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> PWHT_Date
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.PWHT_Date);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.PWHT_Date, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PWHT_Date_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PWHT_Date_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PWHT_Date_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> Authorize_date
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Authorize_date);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Authorize_date, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Authorize_date_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Authorize_date_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Authorize_date_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Authorize_By
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Authorize_By);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Authorize_By, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Authorize_By_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Authorize_By_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Authorize_By_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Module_Name
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Module_Name);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Module_Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Module_ID
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Module_ID);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Module_ID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_ID_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT,
                global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass,
                global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.IImplementation,
                global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.PWHT_No;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass>.Entry
                __GET_PWHT_INSPECT_ACCEPTEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass>.Entry(
                    global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.__GET_PWHT_INSPECT_ACCEPT_CreateNew,
                    global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.__GET_PWHT_INSPECT_ACCEPT_Created,
                    global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.__GET_PWHT_INSPECT_ACCEPT_AllowSaveWithErrors);
            private static global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT __GET_PWHT_INSPECT_ACCEPT_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT> es)
            {
                return new global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT(es);
            }
            private static void __GET_PWHT_INSPECT_ACCEPT_Created(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
            {
                e.GET_PWHT_INSPECT_ACCEPT_Created();
            }
            private static bool __GET_PWHT_INSPECT_ACCEPT_AllowSaveWithErrors(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
            {
                bool result = false;
                e.GET_PWHT_INSPECT_ACCEPT_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string> PWHT_No
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.PWHT_No) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string> DrgNo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.DrgNo) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string> Joint_ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Joint_ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string> Joint_No
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Joint_No) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>> PWHT_Date
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.PWHT_Date) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>> Authorize_date
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Authorize_date) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string> Authorize_By
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Authorize_By) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string> Module_Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Module_Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string> Module_ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties.Module_ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string PWHT_No { get; set; }
                new string DrgNo { get; set; }
                new string Joint_ID { get; set; }
                new string Joint_No { get; set; }
                new global::System.Nullable<global::System.DateTime> PWHT_Date { get; set; }
                new global::System.Nullable<global::System.DateTime> Authorize_date { get; set; }
                new string Authorize_By { get; set; }
                new string Module_Name { get; set; }
                new string Module_ID { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Entry
                    PWHT_No = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Entry(
                        "PWHT_No",
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_No_Stub,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_No_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_No_Validate,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_No_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_No_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_No_OnValueChanged);
                private static void _PWHT_No_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._PWHT_No, sf);
                }
                private static bool _PWHT_No_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    bool result = false;
                    e.PWHT_No_IsReadOnly(ref result);
                    return result;
                }
                private static void _PWHT_No_Validate(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PWHT_No_Validate(r);
                }
                private static string _PWHT_No_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.PWHT_No;
                }
                private static void _PWHT_No_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PWHT_No = v;
                }
                private static void _PWHT_No_OnValueChanged(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    e.PWHT_No_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Entry
                    DrgNo = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Entry(
                        "DrgNo",
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._DrgNo_Stub,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._DrgNo_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._DrgNo_Validate,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._DrgNo_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._DrgNo_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._DrgNo_OnValueChanged);
                private static void _DrgNo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._DrgNo, sf);
                }
                private static bool _DrgNo_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    bool result = false;
                    e.DrgNo_IsReadOnly(ref result);
                    return result;
                }
                private static void _DrgNo_Validate(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DrgNo_Validate(r);
                }
                private static string _DrgNo_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.DrgNo;
                }
                private static void _DrgNo_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DrgNo = v;
                }
                private static void _DrgNo_OnValueChanged(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    e.DrgNo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Entry
                    Joint_ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Entry(
                        "Joint_ID",
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Joint_ID_Stub,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Joint_ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Joint_ID_Validate,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Joint_ID_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Joint_ID_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Joint_ID_OnValueChanged);
                private static void _Joint_ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Joint_ID, sf);
                }
                private static bool _Joint_ID_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    bool result = false;
                    e.Joint_ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _Joint_ID_Validate(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Joint_ID_Validate(r);
                }
                private static string _Joint_ID_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Joint_ID;
                }
                private static void _Joint_ID_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Joint_ID = v;
                }
                private static void _Joint_ID_OnValueChanged(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    e.Joint_ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Entry
                    Joint_No = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Entry(
                        "Joint_No",
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Joint_No_Stub,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Joint_No_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Joint_No_Validate,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Joint_No_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Joint_No_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Joint_No_OnValueChanged);
                private static void _Joint_No_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Joint_No, sf);
                }
                private static bool _Joint_No_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    bool result = false;
                    e.Joint_No_IsReadOnly(ref result);
                    return result;
                }
                private static void _Joint_No_Validate(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Joint_No_Validate(r);
                }
                private static string _Joint_No_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Joint_No;
                }
                private static void _Joint_No_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Joint_No = v;
                }
                private static void _Joint_No_OnValueChanged(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    e.Joint_No_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    PWHT_Date = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "PWHT_Date",
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_Date_Stub,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_Date_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_Date_Validate,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_Date_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_Date_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_Date_OnValueChanged);
                private static void _PWHT_Date_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._PWHT_Date, sf);
                }
                private static bool _PWHT_Date_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    bool result = false;
                    e.PWHT_Date_IsReadOnly(ref result);
                    return result;
                }
                private static void _PWHT_Date_Validate(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PWHT_Date_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _PWHT_Date_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.PWHT_Date;
                }
                private static void _PWHT_Date_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.PWHT_Date = global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _PWHT_Date_OnValueChanged(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    e.PWHT_Date_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    Authorize_date = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "Authorize_date",
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_date_Stub,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_date_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_date_Validate,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_date_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_date_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_date_OnValueChanged);
                private static void _Authorize_date_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Authorize_date, sf);
                }
                private static bool _Authorize_date_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    bool result = false;
                    e.Authorize_date_IsReadOnly(ref result);
                    return result;
                }
                private static void _Authorize_date_Validate(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Authorize_date_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _Authorize_date_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Authorize_date;
                }
                private static void _Authorize_date_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.Authorize_date = global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _Authorize_date_OnValueChanged(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    e.Authorize_date_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Entry
                    Authorize_By = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Entry(
                        "Authorize_By",
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_By_Stub,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_By_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_By_Validate,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_By_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_By_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_By_OnValueChanged);
                private static void _Authorize_By_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Authorize_By, sf);
                }
                private static bool _Authorize_By_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    bool result = false;
                    e.Authorize_By_IsReadOnly(ref result);
                    return result;
                }
                private static void _Authorize_By_Validate(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Authorize_By_Validate(r);
                }
                private static string _Authorize_By_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Authorize_By;
                }
                private static void _Authorize_By_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Authorize_By = v;
                }
                private static void _Authorize_By_OnValueChanged(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    e.Authorize_By_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Entry
                    Module_Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Entry(
                        "Module_Name",
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Module_Name_Stub,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Module_Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Module_Name_Validate,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Module_Name_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Module_Name_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Module_Name_OnValueChanged);
                private static void _Module_Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Module_Name, sf);
                }
                private static bool _Module_Name_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    bool result = false;
                    e.Module_Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Module_Name_Validate(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Module_Name_Validate(r);
                }
                private static string _Module_Name_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Module_Name;
                }
                private static void _Module_Name_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Module_Name = v;
                }
                private static void _Module_Name_OnValueChanged(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    e.Module_Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Entry
                    Module_ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Entry(
                        "Module_ID",
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Module_ID_Stub,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Module_ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Module_ID_Validate,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Module_ID_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Module_ID_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass.PropertySetProperties._Module_ID_OnValueChanged);
                private static void _Module_ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Module_ID, sf);
                }
                private static bool _Module_ID_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    bool result = false;
                    e.Module_ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _Module_ID_Validate(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Module_ID_Validate(r);
                }
                private static string _Module_ID_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Module_ID;
                }
                private static void _Module_ID_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Module_ID = v;
                }
                private static void _Module_ID_OnValueChanged(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e)
                {
                    e.Module_ID_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Data _PWHT_No;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Data _DrgNo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Data _Joint_ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Data _Joint_No;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _PWHT_Date;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _Authorize_date;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Data _Authorize_By;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Data _Module_Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT.DetailsClass, string>.Data _Module_ID;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
    public sealed partial class GET_PWHT_JOINT_ACCEPT : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the GET_PWHT_JOINT_ACCEPT entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_PWHT_JOINT_ACCEPT()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GET_PWHT_JOINT_ACCEPT(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_PWHT_JOINT_ACCEPT_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_PWHT_JOINT_ACCEPT_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PWHT_No
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.PWHT_No);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.PWHT_No, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PWHT_No_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PWHT_No_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PWHT_No_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Module_ID
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Module_ID);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Module_ID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Module_Name
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Module_Name);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Module_Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Module_Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> Authorize_date
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Authorize_date);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Authorize_date, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Authorize_date_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Authorize_date_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Authorize_date_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Location
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Location);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Location, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Authorize_By
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Authorize_By);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Authorize_By, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Authorize_By_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Authorize_By_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Authorize_By_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DrgNo
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.DrgNo);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.DrgNo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Drg_ID
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Drg_ID);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Drg_ID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Drg_ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Drg_ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Drg_ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Rev
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Rev);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Rev, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rev_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rev_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rev_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Joint_No
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Joint_No);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Joint_No, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Joint_No_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Joint_No_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Joint_No_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Joint_ID
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Joint_ID);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Joint_ID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Joint_ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Joint_ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Joint_ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SizeThk
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.SizeThk);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.SizeThk, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SizeThk_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SizeThk_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SizeThk_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Heat_Treatment
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Heat_Treatment);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Heat_Treatment, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Heat_Treatment_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Heat_Treatment_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Heat_Treatment_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Loading_Temp
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Loading_Temp);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Loading_Temp, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Loading_Temp_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Loading_Temp_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Loading_Temp_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Rate_Of_Heating
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Rate_Of_Heating);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Rate_Of_Heating, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rate_Of_Heating_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rate_Of_Heating_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rate_Of_Heating_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Soaking_Temp
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Soaking_Temp);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Soaking_Temp, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Soaking_Temp_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Soaking_Temp_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Soaking_Temp_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Soaking_Peroid
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Soaking_Peroid);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Soaking_Peroid, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Soaking_Peroid_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Soaking_Peroid_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Soaking_Peroid_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Rate_Of_Cooling
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Rate_Of_Cooling);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Rate_Of_Cooling, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rate_Of_Cooling_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rate_Of_Cooling_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rate_Of_Cooling_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Unloading_Temp
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Unloading_Temp);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Unloading_Temp, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Unloading_Temp_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Unloading_Temp_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Unloading_Temp_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Remark_QA_Det
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Remark_QA_Det);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Remark_QA_Det, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Remark_QA_Det_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Remark_QA_Det_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Remark_QA_Det_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string QA_Remark
        {
            get
            {
                return global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.GetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.QA_Remark);
            }
            set
            {
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.SetValue(this, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.QA_Remark, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QA_Remark_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QA_Remark_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QA_Remark_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT,
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass,
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.IImplementation,
                global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.PWHT_No;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass>.Entry
                __GET_PWHT_JOINT_ACCEPTEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass>.Entry(
                    global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.__GET_PWHT_JOINT_ACCEPT_CreateNew,
                    global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.__GET_PWHT_JOINT_ACCEPT_Created,
                    global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.__GET_PWHT_JOINT_ACCEPT_AllowSaveWithErrors);
            private static global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT __GET_PWHT_JOINT_ACCEPT_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT> es)
            {
                return new global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT(es);
            }
            private static void __GET_PWHT_JOINT_ACCEPT_Created(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
            {
                e.GET_PWHT_JOINT_ACCEPT_Created();
            }
            private static bool __GET_PWHT_JOINT_ACCEPT_AllowSaveWithErrors(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
            {
                bool result = false;
                e.GET_PWHT_JOINT_ACCEPT_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> PWHT_No
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.PWHT_No) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Module_ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Module_ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Module_Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Module_Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>> Authorize_date
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Authorize_date) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Location
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Location) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Authorize_By
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Authorize_By) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> DrgNo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.DrgNo) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Drg_ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Drg_ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Rev
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Rev) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Joint_No
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Joint_No) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Joint_ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Joint_ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> SizeThk
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.SizeThk) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Heat_Treatment
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Heat_Treatment) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Loading_Temp
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Loading_Temp) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Rate_Of_Heating
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Rate_Of_Heating) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Soaking_Temp
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Soaking_Temp) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Soaking_Peroid
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Soaking_Peroid) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Rate_Of_Cooling
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Rate_Of_Cooling) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Unloading_Temp
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Unloading_Temp) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> Remark_QA_Det
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.Remark_QA_Det) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string> QA_Remark
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties.QA_Remark) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string PWHT_No { get; set; }
                new string Module_ID { get; set; }
                new string Module_Name { get; set; }
                new global::System.Nullable<global::System.DateTime> Authorize_date { get; set; }
                new string Location { get; set; }
                new string Authorize_By { get; set; }
                new string DrgNo { get; set; }
                new string Drg_ID { get; set; }
                new string Rev { get; set; }
                new string Joint_No { get; set; }
                new string Joint_ID { get; set; }
                new string SizeThk { get; set; }
                new string Heat_Treatment { get; set; }
                new string Loading_Temp { get; set; }
                new string Rate_Of_Heating { get; set; }
                new string Soaking_Temp { get; set; }
                new string Soaking_Peroid { get; set; }
                new string Rate_Of_Cooling { get; set; }
                new string Unloading_Temp { get; set; }
                new string Remark_QA_Det { get; set; }
                new string QA_Remark { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    PWHT_No = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "PWHT_No",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_No_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_No_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_No_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_No_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_No_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._PWHT_No_OnValueChanged);
                private static void _PWHT_No_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._PWHT_No, sf);
                }
                private static bool _PWHT_No_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.PWHT_No_IsReadOnly(ref result);
                    return result;
                }
                private static void _PWHT_No_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PWHT_No_Validate(r);
                }
                private static string _PWHT_No_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.PWHT_No;
                }
                private static void _PWHT_No_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PWHT_No = v;
                }
                private static void _PWHT_No_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.PWHT_No_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Module_ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Module_ID",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Module_ID_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Module_ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Module_ID_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Module_ID_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Module_ID_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Module_ID_OnValueChanged);
                private static void _Module_ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Module_ID, sf);
                }
                private static bool _Module_ID_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Module_ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _Module_ID_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Module_ID_Validate(r);
                }
                private static string _Module_ID_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Module_ID;
                }
                private static void _Module_ID_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Module_ID = v;
                }
                private static void _Module_ID_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Module_ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Module_Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Module_Name",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Module_Name_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Module_Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Module_Name_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Module_Name_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Module_Name_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Module_Name_OnValueChanged);
                private static void _Module_Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Module_Name, sf);
                }
                private static bool _Module_Name_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Module_Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Module_Name_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Module_Name_Validate(r);
                }
                private static string _Module_Name_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Module_Name;
                }
                private static void _Module_Name_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Module_Name = v;
                }
                private static void _Module_Name_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Module_Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    Authorize_date = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "Authorize_date",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_date_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_date_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_date_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_date_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_date_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_date_OnValueChanged);
                private static void _Authorize_date_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Authorize_date, sf);
                }
                private static bool _Authorize_date_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Authorize_date_IsReadOnly(ref result);
                    return result;
                }
                private static void _Authorize_date_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Authorize_date_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _Authorize_date_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Authorize_date;
                }
                private static void _Authorize_date_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.Authorize_date = global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _Authorize_date_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Authorize_date_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Location = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Location",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Location_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Location_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Location_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Location_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Location_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Location_OnValueChanged);
                private static void _Location_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Location, sf);
                }
                private static bool _Location_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Location_IsReadOnly(ref result);
                    return result;
                }
                private static void _Location_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Location_Validate(r);
                }
                private static string _Location_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Location;
                }
                private static void _Location_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Location = v;
                }
                private static void _Location_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Location_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Authorize_By = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Authorize_By",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_By_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_By_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_By_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_By_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_By_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Authorize_By_OnValueChanged);
                private static void _Authorize_By_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Authorize_By, sf);
                }
                private static bool _Authorize_By_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Authorize_By_IsReadOnly(ref result);
                    return result;
                }
                private static void _Authorize_By_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Authorize_By_Validate(r);
                }
                private static string _Authorize_By_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Authorize_By;
                }
                private static void _Authorize_By_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Authorize_By = v;
                }
                private static void _Authorize_By_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Authorize_By_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    DrgNo = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "DrgNo",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._DrgNo_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._DrgNo_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._DrgNo_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._DrgNo_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._DrgNo_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._DrgNo_OnValueChanged);
                private static void _DrgNo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._DrgNo, sf);
                }
                private static bool _DrgNo_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.DrgNo_IsReadOnly(ref result);
                    return result;
                }
                private static void _DrgNo_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DrgNo_Validate(r);
                }
                private static string _DrgNo_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.DrgNo;
                }
                private static void _DrgNo_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DrgNo = v;
                }
                private static void _DrgNo_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.DrgNo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Drg_ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Drg_ID",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Drg_ID_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Drg_ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Drg_ID_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Drg_ID_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Drg_ID_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Drg_ID_OnValueChanged);
                private static void _Drg_ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Drg_ID, sf);
                }
                private static bool _Drg_ID_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Drg_ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _Drg_ID_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Drg_ID_Validate(r);
                }
                private static string _Drg_ID_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Drg_ID;
                }
                private static void _Drg_ID_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Drg_ID = v;
                }
                private static void _Drg_ID_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Drg_ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Rev = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Rev",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rev_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rev_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rev_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rev_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rev_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rev_OnValueChanged);
                private static void _Rev_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Rev, sf);
                }
                private static bool _Rev_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Rev_IsReadOnly(ref result);
                    return result;
                }
                private static void _Rev_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Rev_Validate(r);
                }
                private static string _Rev_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Rev;
                }
                private static void _Rev_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Rev = v;
                }
                private static void _Rev_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Rev_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Joint_No = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Joint_No",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Joint_No_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Joint_No_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Joint_No_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Joint_No_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Joint_No_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Joint_No_OnValueChanged);
                private static void _Joint_No_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Joint_No, sf);
                }
                private static bool _Joint_No_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Joint_No_IsReadOnly(ref result);
                    return result;
                }
                private static void _Joint_No_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Joint_No_Validate(r);
                }
                private static string _Joint_No_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Joint_No;
                }
                private static void _Joint_No_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Joint_No = v;
                }
                private static void _Joint_No_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Joint_No_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Joint_ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Joint_ID",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Joint_ID_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Joint_ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Joint_ID_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Joint_ID_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Joint_ID_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Joint_ID_OnValueChanged);
                private static void _Joint_ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Joint_ID, sf);
                }
                private static bool _Joint_ID_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Joint_ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _Joint_ID_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Joint_ID_Validate(r);
                }
                private static string _Joint_ID_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Joint_ID;
                }
                private static void _Joint_ID_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Joint_ID = v;
                }
                private static void _Joint_ID_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Joint_ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    SizeThk = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "SizeThk",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._SizeThk_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._SizeThk_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._SizeThk_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._SizeThk_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._SizeThk_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._SizeThk_OnValueChanged);
                private static void _SizeThk_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._SizeThk, sf);
                }
                private static bool _SizeThk_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.SizeThk_IsReadOnly(ref result);
                    return result;
                }
                private static void _SizeThk_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SizeThk_Validate(r);
                }
                private static string _SizeThk_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.SizeThk;
                }
                private static void _SizeThk_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SizeThk = v;
                }
                private static void _SizeThk_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.SizeThk_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Heat_Treatment = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Heat_Treatment",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Heat_Treatment_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Heat_Treatment_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Heat_Treatment_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Heat_Treatment_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Heat_Treatment_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Heat_Treatment_OnValueChanged);
                private static void _Heat_Treatment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Heat_Treatment, sf);
                }
                private static bool _Heat_Treatment_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Heat_Treatment_IsReadOnly(ref result);
                    return result;
                }
                private static void _Heat_Treatment_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Heat_Treatment_Validate(r);
                }
                private static string _Heat_Treatment_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Heat_Treatment;
                }
                private static void _Heat_Treatment_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Heat_Treatment = v;
                }
                private static void _Heat_Treatment_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Heat_Treatment_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Loading_Temp = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Loading_Temp",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Loading_Temp_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Loading_Temp_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Loading_Temp_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Loading_Temp_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Loading_Temp_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Loading_Temp_OnValueChanged);
                private static void _Loading_Temp_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Loading_Temp, sf);
                }
                private static bool _Loading_Temp_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Loading_Temp_IsReadOnly(ref result);
                    return result;
                }
                private static void _Loading_Temp_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Loading_Temp_Validate(r);
                }
                private static string _Loading_Temp_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Loading_Temp;
                }
                private static void _Loading_Temp_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Loading_Temp = v;
                }
                private static void _Loading_Temp_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Loading_Temp_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Rate_Of_Heating = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Rate_Of_Heating",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rate_Of_Heating_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rate_Of_Heating_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rate_Of_Heating_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rate_Of_Heating_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rate_Of_Heating_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rate_Of_Heating_OnValueChanged);
                private static void _Rate_Of_Heating_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Rate_Of_Heating, sf);
                }
                private static bool _Rate_Of_Heating_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Rate_Of_Heating_IsReadOnly(ref result);
                    return result;
                }
                private static void _Rate_Of_Heating_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Rate_Of_Heating_Validate(r);
                }
                private static string _Rate_Of_Heating_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Rate_Of_Heating;
                }
                private static void _Rate_Of_Heating_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Rate_Of_Heating = v;
                }
                private static void _Rate_Of_Heating_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Rate_Of_Heating_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Soaking_Temp = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Soaking_Temp",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Soaking_Temp_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Soaking_Temp_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Soaking_Temp_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Soaking_Temp_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Soaking_Temp_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Soaking_Temp_OnValueChanged);
                private static void _Soaking_Temp_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Soaking_Temp, sf);
                }
                private static bool _Soaking_Temp_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Soaking_Temp_IsReadOnly(ref result);
                    return result;
                }
                private static void _Soaking_Temp_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Soaking_Temp_Validate(r);
                }
                private static string _Soaking_Temp_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Soaking_Temp;
                }
                private static void _Soaking_Temp_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Soaking_Temp = v;
                }
                private static void _Soaking_Temp_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Soaking_Temp_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Soaking_Peroid = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Soaking_Peroid",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Soaking_Peroid_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Soaking_Peroid_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Soaking_Peroid_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Soaking_Peroid_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Soaking_Peroid_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Soaking_Peroid_OnValueChanged);
                private static void _Soaking_Peroid_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Soaking_Peroid, sf);
                }
                private static bool _Soaking_Peroid_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Soaking_Peroid_IsReadOnly(ref result);
                    return result;
                }
                private static void _Soaking_Peroid_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Soaking_Peroid_Validate(r);
                }
                private static string _Soaking_Peroid_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Soaking_Peroid;
                }
                private static void _Soaking_Peroid_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Soaking_Peroid = v;
                }
                private static void _Soaking_Peroid_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Soaking_Peroid_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Rate_Of_Cooling = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Rate_Of_Cooling",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rate_Of_Cooling_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rate_Of_Cooling_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rate_Of_Cooling_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rate_Of_Cooling_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rate_Of_Cooling_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Rate_Of_Cooling_OnValueChanged);
                private static void _Rate_Of_Cooling_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Rate_Of_Cooling, sf);
                }
                private static bool _Rate_Of_Cooling_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Rate_Of_Cooling_IsReadOnly(ref result);
                    return result;
                }
                private static void _Rate_Of_Cooling_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Rate_Of_Cooling_Validate(r);
                }
                private static string _Rate_Of_Cooling_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Rate_Of_Cooling;
                }
                private static void _Rate_Of_Cooling_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Rate_Of_Cooling = v;
                }
                private static void _Rate_Of_Cooling_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Rate_Of_Cooling_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Unloading_Temp = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Unloading_Temp",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Unloading_Temp_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Unloading_Temp_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Unloading_Temp_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Unloading_Temp_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Unloading_Temp_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Unloading_Temp_OnValueChanged);
                private static void _Unloading_Temp_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Unloading_Temp, sf);
                }
                private static bool _Unloading_Temp_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Unloading_Temp_IsReadOnly(ref result);
                    return result;
                }
                private static void _Unloading_Temp_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Unloading_Temp_Validate(r);
                }
                private static string _Unloading_Temp_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Unloading_Temp;
                }
                private static void _Unloading_Temp_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Unloading_Temp = v;
                }
                private static void _Unloading_Temp_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Unloading_Temp_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    Remark_QA_Det = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "Remark_QA_Det",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Remark_QA_Det_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Remark_QA_Det_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Remark_QA_Det_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Remark_QA_Det_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Remark_QA_Det_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._Remark_QA_Det_OnValueChanged);
                private static void _Remark_QA_Det_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._Remark_QA_Det, sf);
                }
                private static bool _Remark_QA_Det_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.Remark_QA_Det_IsReadOnly(ref result);
                    return result;
                }
                private static void _Remark_QA_Det_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Remark_QA_Det_Validate(r);
                }
                private static string _Remark_QA_Det_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.Remark_QA_Det;
                }
                private static void _Remark_QA_Det_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Remark_QA_Det = v;
                }
                private static void _Remark_QA_Det_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.Remark_QA_Det_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry
                    QA_Remark = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Entry(
                        "QA_Remark",
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._QA_Remark_Stub,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._QA_Remark_ComputeIsReadOnly,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._QA_Remark_Validate,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._QA_Remark_GetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._QA_Remark_SetImplementationValue,
                        global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass.PropertySetProperties._QA_Remark_OnValueChanged);
                private static void _QA_Remark_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data> c, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, object sf)
                {
                    c(d, ref d._QA_Remark, sf);
                }
                private static bool _QA_Remark_ComputeIsReadOnly(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    bool result = false;
                    e.QA_Remark_IsReadOnly(ref result);
                    return result;
                }
                private static void _QA_Remark_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QA_Remark_Validate(r);
                }
                private static string _QA_Remark_GetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d)
                {
                    return d.ImplementationEntity.QA_Remark;
                }
                private static void _QA_Remark_SetImplementationValue(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass d, string v)
                {
                    d.ImplementationEntity.QA_Remark = v;
                }
                private static void _QA_Remark_OnValueChanged(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e)
                {
                    e.QA_Remark_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _PWHT_No;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Module_ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Module_Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _Authorize_date;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Location;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Authorize_By;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _DrgNo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Drg_ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Rev;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Joint_No;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Joint_ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _SizeThk;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Heat_Treatment;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Loading_Temp;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Rate_Of_Heating;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Soaking_Temp;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Soaking_Peroid;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Rate_Of_Cooling;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Unloading_Temp;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _Remark_QA_Det;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT.DetailsClass, string>.Data _QA_Remark;
            
        }
    
        #endregion
    }
    
    #endregion
}
