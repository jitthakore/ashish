//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the SPS_LSData datasource.
    /// </summary>
    public sealed partial class SPS_LSDataService
        : global::LightSwitchApplication.SPS_LSData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SPS_LSDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FITUP_ACCEPT_MAINs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FITUP_ACCEPT_MAINs_Validate(global::LightSwitchApplication.FITUP_ACCEPT_MAIN entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FITUP_ACCEPT_MAINs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.FITUP_ACCEPT_MAIN, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_CONTRACTORs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_CONTRACTORs_Validate(global::LightSwitchApplication.GET_CONTRACTOR entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_CONTRACTORs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_CONTRACTOR, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Get_FTU_For_inspect_closeds_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Get_FTU_For_inspect_closeds_Validate(global::LightSwitchApplication.Get_FTU_For_inspect_closed entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Get_FTU_For_inspect_closeds_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Get_FTU_For_inspect_closed, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_INSPECT_For_WVFs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_INSPECT_For_WVFs_Validate(global::LightSwitchApplication.GET_INSPECT_For_WVF entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_INSPECT_For_WVFs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_INSPECT_For_WVF, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_INSPECT_MPI_AFTERaccepts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_INSPECT_MPI_AFTERaccepts_Validate(global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_INSPECT_MPI_AFTERaccepts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_MPI_INSPECTs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_MPI_INSPECTs_Validate(global::LightSwitchApplication.GET_MPI_INSPECT entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_MPI_INSPECTs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_MPI_INSPECT, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_PWHT_INSPECT_ACCEPTs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_PWHT_INSPECT_ACCEPTs_Validate(global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_PWHT_INSPECT_ACCEPTs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_PWHT_JOINT_ACCEPTs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_PWHT_JOINT_ACCEPTs_Validate(global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_PWHT_JOINT_ACCEPTs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_QC_INSPECT_MPIs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_QC_INSPECT_MPIs_Validate(global::LightSwitchApplication.GET_QC_INSPECT_MPI entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_QC_INSPECT_MPIs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_QC_INSPECT_MPI, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hardness_offer_gets_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hardness_offer_gets_Validate(global::LightSwitchApplication.Hardness_offer_get entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hardness_offer_gets_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Hardness_offer_get, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Inspect_WVF_Details_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Inspect_WVF_Details_Validate(global::LightSwitchApplication.Inspect_WVF_Detail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Inspect_WVF_Details_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Inspect_WVF_Detail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractor_Modules_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractor_Modules_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractor_Modules_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractor_Modules_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractor_Modules_Inserting(global::LightSwitchApplication.sps_Contractor_Module entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractor_Modules_Inserted(global::LightSwitchApplication.sps_Contractor_Module entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractor_Modules_Updating(global::LightSwitchApplication.sps_Contractor_Module entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractor_Modules_Updated(global::LightSwitchApplication.sps_Contractor_Module entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractor_Modules_Deleting(global::LightSwitchApplication.sps_Contractor_Module entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractor_Modules_Deleted(global::LightSwitchApplication.sps_Contractor_Module entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractor_Modules_Validate(global::LightSwitchApplication.sps_Contractor_Module entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractor_Modules_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Contractor_Module, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractors_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractors_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractors_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractors_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractors_Inserting(global::LightSwitchApplication.sps_Contractor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractors_Inserted(global::LightSwitchApplication.sps_Contractor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractors_Updating(global::LightSwitchApplication.sps_Contractor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractors_Updated(global::LightSwitchApplication.sps_Contractor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractors_Deleting(global::LightSwitchApplication.sps_Contractor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractors_Deleted(global::LightSwitchApplication.sps_Contractor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractors_Validate(global::LightSwitchApplication.sps_Contractor entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Contractors_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Contractor, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_DrgLists_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_DrgLists_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_DrgLists_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_DrgLists_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_DrgLists_Inserting(global::LightSwitchApplication.sps_DrgList entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_DrgLists_Inserted(global::LightSwitchApplication.sps_DrgList entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_DrgLists_Updating(global::LightSwitchApplication.sps_DrgList entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_DrgLists_Updated(global::LightSwitchApplication.sps_DrgList entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_DrgLists_Deleting(global::LightSwitchApplication.sps_DrgList entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_DrgLists_Deleted(global::LightSwitchApplication.sps_DrgList entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_DrgLists_Validate(global::LightSwitchApplication.sps_DrgList entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_DrgLists_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_DrgList, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUDetails_Inserting(global::LightSwitchApplication.sps_FTUDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUDetails_Inserted(global::LightSwitchApplication.sps_FTUDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUDetails_Updating(global::LightSwitchApplication.sps_FTUDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUDetails_Updated(global::LightSwitchApplication.sps_FTUDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUDetails_Deleting(global::LightSwitchApplication.sps_FTUDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUDetails_Deleted(global::LightSwitchApplication.sps_FTUDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUDetails_Validate(global::LightSwitchApplication.sps_FTUDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_FTUDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUs_Inserting(global::LightSwitchApplication.sps_FTU entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUs_Inserted(global::LightSwitchApplication.sps_FTU entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUs_Updating(global::LightSwitchApplication.sps_FTU entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUs_Updated(global::LightSwitchApplication.sps_FTU entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUs_Deleting(global::LightSwitchApplication.sps_FTU entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUs_Deleted(global::LightSwitchApplication.sps_FTU entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUs_Validate(global::LightSwitchApplication.sps_FTU entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_FTUs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_FTU, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_HardnessDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_HardnessDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_HardnessDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_HardnessDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_HardnessDetails_Inserting(global::LightSwitchApplication.sps_HardnessDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_HardnessDetails_Inserted(global::LightSwitchApplication.sps_HardnessDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_HardnessDetails_Updating(global::LightSwitchApplication.sps_HardnessDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_HardnessDetails_Updated(global::LightSwitchApplication.sps_HardnessDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_HardnessDetails_Deleting(global::LightSwitchApplication.sps_HardnessDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_HardnessDetails_Deleted(global::LightSwitchApplication.sps_HardnessDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_HardnessDetails_Validate(global::LightSwitchApplication.sps_HardnessDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_HardnessDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_HardnessDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Hardnesses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Hardnesses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Hardnesses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Hardnesses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Hardnesses_Inserting(global::LightSwitchApplication.sps_Hardness entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Hardnesses_Inserted(global::LightSwitchApplication.sps_Hardness entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Hardnesses_Updating(global::LightSwitchApplication.sps_Hardness entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Hardnesses_Updated(global::LightSwitchApplication.sps_Hardness entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Hardnesses_Deleting(global::LightSwitchApplication.sps_Hardness entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Hardnesses_Deleted(global::LightSwitchApplication.sps_Hardness entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Hardnesses_Validate(global::LightSwitchApplication.sps_Hardness entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Hardnesses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Hardness, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Locations_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Locations_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Locations_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Locations_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Locations_Inserting(global::LightSwitchApplication.sps_Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Locations_Inserted(global::LightSwitchApplication.sps_Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Locations_Updating(global::LightSwitchApplication.sps_Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Locations_Updated(global::LightSwitchApplication.sps_Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Locations_Deleting(global::LightSwitchApplication.sps_Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Locations_Deleted(global::LightSwitchApplication.sps_Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Locations_Validate(global::LightSwitchApplication.sps_Location entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Locations_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Location, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Master_Proceduers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Master_Proceduers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Master_Proceduers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Master_Proceduers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Master_Proceduers_Inserting(global::LightSwitchApplication.sps_Master_Proceduer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Master_Proceduers_Inserted(global::LightSwitchApplication.sps_Master_Proceduer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Master_Proceduers_Updating(global::LightSwitchApplication.sps_Master_Proceduer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Master_Proceduers_Updated(global::LightSwitchApplication.sps_Master_Proceduer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Master_Proceduers_Deleting(global::LightSwitchApplication.sps_Master_Proceduer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Master_Proceduers_Deleted(global::LightSwitchApplication.sps_Master_Proceduer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Master_Proceduers_Validate(global::LightSwitchApplication.sps_Master_Proceduer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Master_Proceduers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Master_Proceduer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Matser_CodeOfConstructions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Matser_CodeOfConstructions_Validate(global::LightSwitchApplication.sps_Matser_CodeOfConstruction entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Matser_CodeOfConstructions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Matser_CodeOfConstruction, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCR_Details_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCR_Details_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCR_Details_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCR_Details_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCR_Details_Inserting(global::LightSwitchApplication.sps_MCR_Detail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCR_Details_Inserted(global::LightSwitchApplication.sps_MCR_Detail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCR_Details_Updating(global::LightSwitchApplication.sps_MCR_Detail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCR_Details_Updated(global::LightSwitchApplication.sps_MCR_Detail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCR_Details_Deleting(global::LightSwitchApplication.sps_MCR_Detail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCR_Details_Deleted(global::LightSwitchApplication.sps_MCR_Detail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCR_Details_Validate(global::LightSwitchApplication.sps_MCR_Detail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCR_Details_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_MCR_Detail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCRs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCRs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCRs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCRs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCRs_Inserting(global::LightSwitchApplication.sps_MCR entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCRs_Inserted(global::LightSwitchApplication.sps_MCR entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCRs_Updating(global::LightSwitchApplication.sps_MCR entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCRs_Updated(global::LightSwitchApplication.sps_MCR entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCRs_Deleting(global::LightSwitchApplication.sps_MCR entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCRs_Deleted(global::LightSwitchApplication.sps_MCR entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCRs_Validate(global::LightSwitchApplication.sps_MCR entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MCRs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_MCR, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Modules_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Modules_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Modules_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Modules_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Modules_Inserting(global::LightSwitchApplication.sps_Module entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Modules_Inserted(global::LightSwitchApplication.sps_Module entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Modules_Updating(global::LightSwitchApplication.sps_Module entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Modules_Updated(global::LightSwitchApplication.sps_Module entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Modules_Deleting(global::LightSwitchApplication.sps_Module entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Modules_Deleted(global::LightSwitchApplication.sps_Module entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Modules_Validate(global::LightSwitchApplication.sps_Module entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Modules_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Module, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Insps_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Insps_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Insps_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Insps_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Insps_Inserting(global::LightSwitchApplication.sps_MPI_Detail_Insp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Insps_Inserted(global::LightSwitchApplication.sps_MPI_Detail_Insp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Insps_Updating(global::LightSwitchApplication.sps_MPI_Detail_Insp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Insps_Updated(global::LightSwitchApplication.sps_MPI_Detail_Insp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Insps_Deleting(global::LightSwitchApplication.sps_MPI_Detail_Insp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Insps_Deleted(global::LightSwitchApplication.sps_MPI_Detail_Insp entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Insps_Validate(global::LightSwitchApplication.sps_MPI_Detail_Insp entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Insps_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_MPI_Detail_Insp, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Offs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Offs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Offs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Offs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Offs_Inserting(global::LightSwitchApplication.sps_MPI_Detail_Off entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Offs_Inserted(global::LightSwitchApplication.sps_MPI_Detail_Off entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Offs_Updating(global::LightSwitchApplication.sps_MPI_Detail_Off entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Offs_Updated(global::LightSwitchApplication.sps_MPI_Detail_Off entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Offs_Deleting(global::LightSwitchApplication.sps_MPI_Detail_Off entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Offs_Deleted(global::LightSwitchApplication.sps_MPI_Detail_Off entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Offs_Validate(global::LightSwitchApplication.sps_MPI_Detail_Off entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPI_Detail_Offs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_MPI_Detail_Off, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPIs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPIs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPIs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPIs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPIs_Inserting(global::LightSwitchApplication.sps_MPI entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPIs_Inserted(global::LightSwitchApplication.sps_MPI entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPIs_Updating(global::LightSwitchApplication.sps_MPI entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPIs_Updated(global::LightSwitchApplication.sps_MPI entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPIs_Deleting(global::LightSwitchApplication.sps_MPI entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPIs_Deleted(global::LightSwitchApplication.sps_MPI entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPIs_Validate(global::LightSwitchApplication.sps_MPI entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_MPIs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_MPI, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqDets_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqDets_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqDets_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqDets_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqDets_Inserting(global::LightSwitchApplication.sps_NDEReqDet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqDets_Inserted(global::LightSwitchApplication.sps_NDEReqDet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqDets_Updating(global::LightSwitchApplication.sps_NDEReqDet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqDets_Updated(global::LightSwitchApplication.sps_NDEReqDet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqDets_Deleting(global::LightSwitchApplication.sps_NDEReqDet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqDets_Deleted(global::LightSwitchApplication.sps_NDEReqDet entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqDets_Validate(global::LightSwitchApplication.sps_NDEReqDet entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqDets_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_NDEReqDet, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqs_Inserting(global::LightSwitchApplication.sps_NDEReq entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqs_Inserted(global::LightSwitchApplication.sps_NDEReq entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqs_Updating(global::LightSwitchApplication.sps_NDEReq entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqs_Updated(global::LightSwitchApplication.sps_NDEReq entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqs_Deleting(global::LightSwitchApplication.sps_NDEReq entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqs_Deleted(global::LightSwitchApplication.sps_NDEReq entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqs_Validate(global::LightSwitchApplication.sps_NDEReq entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_NDEReqs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_NDEReq, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Project_Drgs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Project_Drgs_Validate(global::LightSwitchApplication.sps_Project_Drg entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Project_Drgs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Project_Drg, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Projects_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Projects_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Projects_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Projects_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Projects_Inserting(global::LightSwitchApplication.sps_Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Projects_Inserted(global::LightSwitchApplication.sps_Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Projects_Updating(global::LightSwitchApplication.sps_Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Projects_Updated(global::LightSwitchApplication.sps_Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Projects_Deleting(global::LightSwitchApplication.sps_Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Projects_Deleted(global::LightSwitchApplication.sps_Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Projects_Validate(global::LightSwitchApplication.sps_Project entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_Projects_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Project, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTDetails_Inserting(global::LightSwitchApplication.sps_PWHTDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTDetails_Inserted(global::LightSwitchApplication.sps_PWHTDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTDetails_Updating(global::LightSwitchApplication.sps_PWHTDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTDetails_Updated(global::LightSwitchApplication.sps_PWHTDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTDetails_Deleting(global::LightSwitchApplication.sps_PWHTDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTDetails_Deleted(global::LightSwitchApplication.sps_PWHTDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTDetails_Validate(global::LightSwitchApplication.sps_PWHTDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_PWHTDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTs_Inserting(global::LightSwitchApplication.sps_PWHT entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTs_Inserted(global::LightSwitchApplication.sps_PWHT entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTs_Updating(global::LightSwitchApplication.sps_PWHT entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTs_Updated(global::LightSwitchApplication.sps_PWHT entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTs_Deleting(global::LightSwitchApplication.sps_PWHT entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTs_Deleted(global::LightSwitchApplication.sps_PWHT entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTs_Validate(global::LightSwitchApplication.sps_PWHT entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_PWHTs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_PWHT, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFDetails_Inserting(global::LightSwitchApplication.sps_RR_WVFDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFDetails_Inserted(global::LightSwitchApplication.sps_RR_WVFDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFDetails_Updating(global::LightSwitchApplication.sps_RR_WVFDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFDetails_Updated(global::LightSwitchApplication.sps_RR_WVFDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFDetails_Deleting(global::LightSwitchApplication.sps_RR_WVFDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFDetails_Deleted(global::LightSwitchApplication.sps_RR_WVFDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFDetails_Validate(global::LightSwitchApplication.sps_RR_WVFDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_RR_WVFDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFs_Inserting(global::LightSwitchApplication.sps_RR_WVF entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFs_Inserted(global::LightSwitchApplication.sps_RR_WVF entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFs_Updating(global::LightSwitchApplication.sps_RR_WVF entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFs_Updated(global::LightSwitchApplication.sps_RR_WVF entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFs_Deleting(global::LightSwitchApplication.sps_RR_WVF entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFs_Deleted(global::LightSwitchApplication.sps_RR_WVF entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFs_Validate(global::LightSwitchApplication.sps_RR_WVF entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_RR_WVFs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_RR_WVF, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_User_Projects_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_User_Projects_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_User_Projects_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_User_Projects_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_User_Projects_Inserting(global::LightSwitchApplication.sps_User_Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_User_Projects_Inserted(global::LightSwitchApplication.sps_User_Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_User_Projects_Updating(global::LightSwitchApplication.sps_User_Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_User_Projects_Updated(global::LightSwitchApplication.sps_User_Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_User_Projects_Deleting(global::LightSwitchApplication.sps_User_Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_User_Projects_Deleted(global::LightSwitchApplication.sps_User_Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_User_Projects_Validate(global::LightSwitchApplication.sps_User_Project entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_User_Projects_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_User_Project, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Drg_No_For_NDEs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Drg_No_For_NDEs_Validate(global::LightSwitchApplication.sps_View_Get_Drg_No_For_NDE entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Drg_No_For_NDEs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Drg_No_For_NDE, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Drg_No_For_PWHTs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Drg_No_For_PWHTs_Validate(global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Drg_No_For_PWHTs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Drg_No_For_WVFs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Drg_No_For_WVFs_Validate(global::LightSwitchApplication.sps_View_Get_Drg_No_For_WVF entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Drg_No_For_WVFs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Drg_No_For_WVF, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_DrgNo_For_FitUpOffers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_DrgNo_For_FitUpOffers_Validate(global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_DrgNo_For_FitUpOffers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_get_DrgNOMFF_For_FitupOffers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_get_DrgNOMFF_For_FitupOffers_Validate(global::LightSwitchApplication.sps_View_get_DrgNOMFF_For_FitupOffer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_get_DrgNOMFF_For_FitupOffers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_get_DrgNOMFF_For_FitupOffer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_FTUDetail_For_Offers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_FTUDetail_For_Offers_Validate(global::LightSwitchApplication.sps_View_Get_FTUDetail_For_Offer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_FTUDetail_For_Offers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_FTUDetail_For_Offer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_HeatNo_From_IMIRIDs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_HeatNo_From_IMIRIDs_Validate(global::LightSwitchApplication.sps_View_Get_HeatNo_From_IMIRID entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_HeatNo_From_IMIRIDs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_HeatNo_From_IMIRID, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IDNO_From_IMIRIDs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IDNO_From_IMIRIDs_Validate(global::LightSwitchApplication.sps_View_Get_IDNO_From_IMIRID entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IDNO_From_IMIRIDs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IDNO_From_IMIRID, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1_Validate(global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1Item entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1Item, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2_Validate(global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2Item entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2Item, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3_Validate(global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3Item entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3Item, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4_Validate(global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4Item entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4Item, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5_Validate(global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5Item entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5Item, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Joint_Details_For_NDEBuffers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Joint_Details_For_NDEBuffers_Validate(global::LightSwitchApplication.sps_View_Get_Joint_Details_For_NDEBuffer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Joint_Details_For_NDEBuffers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Joint_Details_For_NDEBuffer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Joint_No_For_WVFs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Joint_No_For_WVFs_Validate(global::LightSwitchApplication.sps_View_Get_Joint_No_For_WVF entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Joint_No_For_WVFs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Joint_No_For_WVF, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_JointDetail_for_FitupOffers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_JointDetail_for_FitupOffers_Validate(global::LightSwitchApplication.sps_View_Get_JointDetail_for_FitupOffer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_JointDetail_for_FitupOffers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_JointDetail_for_FitupOffer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_JointNo_For_FitUpOffers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_JointNo_For_FitUpOffers_Validate(global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_JointNo_For_FitUpOffers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_MPINo_For_FitupOffers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_MPINo_For_FitupOffers_Validate(global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_MPINo_For_FitupOffers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_NDE_Buff_Det_for_Creates_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_NDE_Buff_Det_for_Creates_Validate(global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_NDE_Buff_Det_for_Creates_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Part_No_for_MI_Offers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Part_No_for_MI_Offers_Validate(global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Part_No_for_MI_Offers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Welder_For_WVFs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Welder_For_WVFs_Validate(global::LightSwitchApplication.sps_View_Get_Welder_For_WVF entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_Welder_For_WVFs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Welder_For_WVF, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_WVF_For_Deletes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_WVF_For_Deletes_Validate(global::LightSwitchApplication.sps_View_Get_WVF_For_Delete entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_WVF_For_Deletes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_WVF_For_Delete, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_WVFListForDeletes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_WVFListForDeletes_Validate(global::LightSwitchApplication.sps_View_Get_WVFListForDelete entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_View_Get_WVFListForDeletes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_WVFListForDelete, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_view_getDrgNo_for_ndeOffers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_view_getDrgNo_for_ndeOffers_Validate(global::LightSwitchApplication.sps_view_getDrgNo_for_ndeOffer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_view_getDrgNo_for_ndeOffers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_view_getDrgNo_for_ndeOffer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFDetails_Inserting(global::LightSwitchApplication.sps_WVFDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFDetails_Inserted(global::LightSwitchApplication.sps_WVFDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFDetails_Updating(global::LightSwitchApplication.sps_WVFDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFDetails_Updated(global::LightSwitchApplication.sps_WVFDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFDetails_Deleting(global::LightSwitchApplication.sps_WVFDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFDetails_Deleted(global::LightSwitchApplication.sps_WVFDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFDetails_Validate(global::LightSwitchApplication.sps_WVFDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_WVFDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFs_Inserting(global::LightSwitchApplication.sps_WVF entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFs_Inserted(global::LightSwitchApplication.sps_WVF entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFs_Updating(global::LightSwitchApplication.sps_WVF entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFs_Updated(global::LightSwitchApplication.sps_WVF entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFs_Deleting(global::LightSwitchApplication.sps_WVF entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFs_Deleted(global::LightSwitchApplication.sps_WVF entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFs_Validate(global::LightSwitchApplication.sps_WVF entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void sps_WVFs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_WVF, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Display_Inspect_FITUP_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Display_Inspect_FITUP_Executing(string Module_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Display_Inspect_FITUP_PreprocessQuery(string Module_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.FITUP_ACCEPT_MAIN> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Display_Inspect_FITUP_Executed(string Module_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.FITUP_ACCEPT_MAIN> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Display_Inspect_FITUP_ExecuteFailed(string Module_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractorModuleQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ContractorModuleQuery_Executing(string Module_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractorModuleQuery_PreprocessQuery(string Module_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.GET_CONTRACTOR> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ContractorModuleQuery_Executed(string Module_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_CONTRACTOR> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ContractorModuleQuery_ExecuteFailed(string Module_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void displayFITUP_QUERY_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void displayFITUP_QUERY_Executing(string FTU_No);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void displayFITUP_QUERY_PreprocessQuery(string FTU_No, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Get_FTU_For_inspect_closed> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void displayFITUP_QUERY_Executed(string FTU_No, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Get_FTU_For_inspect_closed> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void displayFITUP_QUERY_ExecuteFailed(string FTU_No, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Inspect_ftu_query_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Inspect_ftu_query_Executing(string Joint_ID, string Joint_No);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Inspect_ftu_query_PreprocessQuery(string Joint_ID, string Joint_No, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Get_FTU_For_inspect_closed> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Inspect_ftu_query_Executed(string Joint_ID, string Joint_No, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Get_FTU_For_inspect_closed> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Inspect_ftu_query_ExecuteFailed(string Joint_ID, string Joint_No, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Inspect_WVF_Query_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Inspect_WVF_Query_Executing(string Module_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Inspect_WVF_Query_PreprocessQuery(string Module_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.GET_INSPECT_For_WVF> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Inspect_WVF_Query_Executed(string Module_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_INSPECT_For_WVF> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Inspect_WVF_Query_ExecuteFailed(string Module_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InspectMPIQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void InspectMPIQuery_Executing(string MPI_No);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InspectMPIQuery_PreprocessQuery(string MPI_No, ref global::System.Linq.IQueryable<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void InspectMPIQuery_Executed(string MPI_No, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void InspectMPIQuery_ExecuteFailed(string MPI_No, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Display_Inspect_MPI_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Display_Inspect_MPI_Executing(string Module_ID_l2_Module, string MPI_No);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Display_Inspect_MPI_PreprocessQuery(string Module_ID_l2_Module, string MPI_No, ref global::System.Linq.IQueryable<global::LightSwitchApplication.GET_MPI_INSPECT> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Display_Inspect_MPI_Executed(string Module_ID_l2_Module, string MPI_No, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_MPI_INSPECT> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Display_Inspect_MPI_ExecuteFailed(string Module_ID_l2_Module, string MPI_No, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Inspect_MIquery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Inspect_MIquery_Executing(string Module_ID_l2_Module);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Inspect_MIquery_PreprocessQuery(string Module_ID_l2_Module, ref global::System.Linq.IQueryable<global::LightSwitchApplication.GET_MPI_INSPECT> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Inspect_MIquery_Executed(string Module_ID_l2_Module, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_MPI_INSPECT> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Inspect_MIquery_ExecuteFailed(string Module_ID_l2_Module, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Display_Inspect_PWHT_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Display_Inspect_PWHT_Executing(string Module_ID, string PWHT_No);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Display_Inspect_PWHT_PreprocessQuery(string Module_ID, string PWHT_No, ref global::System.Linq.IQueryable<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Display_Inspect_PWHT_Executed(string Module_ID, string PWHT_No, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Display_Inspect_PWHT_ExecuteFailed(string Module_ID, string PWHT_No, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_PWHT_INSPECTQUery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GET_PWHT_INSPECTQUery_Executing(string Module_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GET_PWHT_INSPECTQUery_PreprocessQuery(string Module_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GET_PWHT_INSPECTQUery_Executed(string Module_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GET_PWHT_INSPECTQUery_ExecuteFailed(string Module_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void INSPECT_PWHT_detail_query_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void INSPECT_PWHT_detail_query_Executing(string PWHT_No);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void INSPECT_PWHT_detail_query_PreprocessQuery(string PWHT_No, ref global::System.Linq.IQueryable<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void INSPECT_PWHT_detail_query_Executed(string PWHT_No, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void INSPECT_PWHT_detail_query_ExecuteFailed(string PWHT_No, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Inspect_PWHT_query_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Inspect_PWHT_query_Executing(string Joint_ID, string Joint_No);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Inspect_PWHT_query_PreprocessQuery(string Joint_ID, string Joint_No, ref global::System.Linq.IQueryable<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Inspect_PWHT_query_Executed(string Joint_ID, string Joint_No, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Inspect_PWHT_query_ExecuteFailed(string Joint_ID, string Joint_No, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Display_Inpect_MPI_Query_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Display_Inpect_MPI_Query_Executing(string PARTNO, string MPI_No);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Display_Inpect_MPI_Query_PreprocessQuery(string PARTNO, string MPI_No, ref global::System.Linq.IQueryable<global::LightSwitchApplication.GET_QC_INSPECT_MPI> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Display_Inpect_MPI_Query_Executed(string PARTNO, string MPI_No, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_QC_INSPECT_MPI> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Display_Inpect_MPI_Query_ExecuteFailed(string PARTNO, string MPI_No, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QC_Inspect_MPT_Query_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void QC_Inspect_MPT_Query_Executing(string MPI_No);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QC_Inspect_MPT_Query_PreprocessQuery(string MPI_No, ref global::System.Linq.IQueryable<global::LightSwitchApplication.GET_QC_INSPECT_MPI> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void QC_Inspect_MPT_Query_Executed(string MPI_No, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_QC_INSPECT_MPI> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void QC_Inspect_MPT_Query_ExecuteFailed(string MPI_No, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void hardness_query_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void hardness_query_Executing(string Module_ID, string Joint_No);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void hardness_query_PreprocessQuery(string Module_ID, string Joint_No, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Hardness_offer_get> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void hardness_query_Executed(string Module_ID, string Joint_No, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Hardness_offer_get> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void hardness_query_ExecuteFailed(string Module_ID, string Joint_No, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Inspect_hardness_query_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Inspect_hardness_query_Executing(string Module_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Inspect_hardness_query_PreprocessQuery(string Module_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Hardness_offer_get> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Inspect_hardness_query_Executed(string Module_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Hardness_offer_get> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Inspect_hardness_query_ExecuteFailed(string Module_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void INspect_WVF_Detail_Query_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void INspect_WVF_Detail_Query_Executing(string WVF_No);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void INspect_WVF_Detail_Query_PreprocessQuery(string WVF_No, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Inspect_WVF_Detail> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void INspect_WVF_Detail_Query_Executed(string WVF_No, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Inspect_WVF_Detail> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void INspect_WVF_Detail_Query_ExecuteFailed(string WVF_No, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractorForSelectedModule_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ContractorForSelectedModule_Executing(string Module_ID, string Project_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractorForSelectedModule_PreprocessQuery(string Module_ID, string Project_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_Contractor_Module> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ContractorForSelectedModule_Executed(string Module_ID, string Project_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_Contractor_Module> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ContractorForSelectedModule_ExecuteFailed(string Module_ID, string Project_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgFromModule_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgFromModule_Executing(string Module_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgFromModule_PreprocessQuery(string Module_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_DrgList> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgFromModule_Executed(string Module_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_DrgList> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgFromModule_ExecuteFailed(string Module_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationProjectQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void LocationProjectQuery_Executing(string Plant);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationProjectQuery_PreprocessQuery(string Plant, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_Location> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void LocationProjectQuery_Executed(string Plant, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_Location> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void LocationProjectQuery_ExecuteFailed(string Plant, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcedureQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProcedureQuery_Executing(string ProjectID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProcedureQuery_PreprocessQuery(string ProjectID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_Master_Proceduer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProcedureQuery_Executed(string ProjectID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_Master_Proceduer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProcedureQuery_ExecuteFailed(string ProjectID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CodeOfConstructionQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CodeOfConstructionQuery_Executing(string ProjectID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CodeOfConstructionQuery_PreprocessQuery(string ProjectID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_Matser_CodeOfConstruction> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CodeOfConstructionQuery_Executed(string ProjectID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_Matser_CodeOfConstruction> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CodeOfConstructionQuery_ExecuteFailed(string ProjectID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModuleProjectQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ModuleProjectQuery_Executing(string Project_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModuleProjectQuery_PreprocessQuery(string Project_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_Module> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ModuleProjectQuery_Executed(string Project_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_Module> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ModuleProjectQuery_ExecuteFailed(string Project_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void get_drg_query_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void get_drg_query_Executing(string Module_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void get_drg_query_PreprocessQuery(string Module_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_NDE> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void get_drg_query_Executed(string Module_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_NDE> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void get_drg_query_ExecuteFailed(string Module_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNoForPWHT_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgNoForPWHT_Executing(string Module_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNoForPWHT_PreprocessQuery(string Module_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgNoForPWHT_Executed(string Module_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgNoForPWHT_ExecuteFailed(string Module_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JointNoForPWHTOffer_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JointNoForPWHTOffer_Executing(string Drg_ID, string Module_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JointNoForPWHTOffer_PreprocessQuery(string Drg_ID, string Module_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JointNoForPWHTOffer_Executed(string Drg_ID, string Module_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JointNoForPWHTOffer_ExecuteFailed(string Drg_ID, string Module_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNoForWVFOffer_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgNoForWVFOffer_Executing(string Module_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNoForWVFOffer_PreprocessQuery(string Module_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_WVF> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgNoForWVFOffer_Executed(string Module_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_WVF> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgNoForWVFOffer_ExecuteFailed(string Module_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisplayDrgNoForFitupOffer_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DisplayDrgNoForFitupOffer_Executing(string Drg_ID, string Module_ID_l2_Module);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisplayDrgNoForFitupOffer_PreprocessQuery(string Drg_ID, string Module_ID_l2_Module, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DisplayDrgNoForFitupOffer_Executed(string Drg_ID, string Module_ID_l2_Module, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DisplayDrgNoForFitupOffer_ExecuteFailed(string Drg_ID, string Module_ID_l2_Module, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNoForFitupOffer_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgNoForFitupOffer_Executing(string Module_ID_l2_Module);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNoForFitupOffer_PreprocessQuery(string Module_ID_l2_Module, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgNoForFitupOffer_Executed(string Module_ID_l2_Module, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgNoForFitupOffer_ExecuteFailed(string Module_ID_l2_Module, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNoMFFForFitupOffer_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgNoMFFForFitupOffer_Executing(string Drg_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNoMFFForFitupOffer_PreprocessQuery(string Drg_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_get_DrgNOMFF_For_FitupOffer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgNoMFFForFitupOffer_Executed(string Drg_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_get_DrgNOMFF_For_FitupOffer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgNoMFFForFitupOffer_ExecuteFailed(string Drg_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FTUDetailForFitupOffer_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FTUDetailForFitupOffer_Executing(string Module_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FTUDetailForFitupOffer_PreprocessQuery(string Module_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_FTUDetail_For_Offer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FTUDetailForFitupOffer_Executed(string Module_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_FTUDetail_For_Offer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FTUDetailForFitupOffer_ExecuteFailed(string Module_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IMIRIDHeatForFitupOffer1_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IMIRIDHeatForFitupOffer1_Executing(string Drg_ID, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IMIRIDHeatForFitupOffer1_PreprocessQuery(string Drg_ID, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1Item> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IMIRIDHeatForFitupOffer1_Executed(string Drg_ID, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1Item> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IMIRIDHeatForFitupOffer1_ExecuteFailed(string Drg_ID, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IMIRIDHeatForFitupOffer2_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IMIRIDHeatForFitupOffer2_Executing(string Drg_ID_2, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IMIRIDHeatForFitupOffer2_PreprocessQuery(string Drg_ID_2, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2Item> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IMIRIDHeatForFitupOffer2_Executed(string Drg_ID_2, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2Item> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IMIRIDHeatForFitupOffer2_ExecuteFailed(string Drg_ID_2, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IMIRIDHeatForFitupOffer3_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IMIRIDHeatForFitupOffer3_Executing(string Drg_ID_3, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, string IMIRNO);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IMIRIDHeatForFitupOffer3_PreprocessQuery(string Drg_ID_3, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, string IMIRNO, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3Item> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IMIRIDHeatForFitupOffer3_Executed(string Drg_ID_3, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, string IMIRNO, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3Item> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IMIRIDHeatForFitupOffer3_ExecuteFailed(string Drg_ID_3, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, string IMIRNO, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IMIRIDHeatForFitupOffer4_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IMIRIDHeatForFitupOffer4_Executing(string Drg_ID_4, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IMIRIDHeatForFitupOffer4_PreprocessQuery(string Drg_ID_4, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4Item> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IMIRIDHeatForFitupOffer4_Executed(string Drg_ID_4, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4Item> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IMIRIDHeatForFitupOffer4_ExecuteFailed(string Drg_ID_4, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IMIRIDHeatForFitupOffer5_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IMIRIDHeatForFitupOffer5_Executing(string Drg_ID_5, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IMIRIDHeatForFitupOffer5_PreprocessQuery(string Drg_ID_5, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5Item> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IMIRIDHeatForFitupOffer5_Executed(string Drg_ID_5, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5Item> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IMIRIDHeatForFitupOffer5_ExecuteFailed(string Drg_ID_5, string Drg_id_l2_drglist, string Joint_No, string Part_No_l2_Drg_BOQ, string Module_ID_l2_Module, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query2_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Query2_Executing(string WVF_No);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query2_PreprocessQuery(string WVF_No, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Joint_Details_For_NDEBuffer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Query2_Executed(string WVF_No, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Joint_Details_For_NDEBuffer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Query2_ExecuteFailed(string WVF_No, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JointNoForWVFOffer_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JointNoForWVFOffer_Executing(string Drg_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JointNoForWVFOffer_PreprocessQuery(string Drg_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Joint_No_For_WVF> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JointNoForWVFOffer_Executed(string Drg_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Joint_No_For_WVF> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JointNoForWVFOffer_ExecuteFailed(string Drg_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JointDetailForFitupOffer_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JointDetailForFitupOffer_Executing(string Joint_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JointDetailForFitupOffer_PreprocessQuery(string Joint_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_JointDetail_for_FitupOffer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JointDetailForFitupOffer_Executed(string Joint_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_JointDetail_for_FitupOffer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JointDetailForFitupOffer_ExecuteFailed(string Joint_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisplayJointNoForFitupOffer_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DisplayJointNoForFitupOffer_Executing(string Drg_ID_l2_DrgList, string Joint_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisplayJointNoForFitupOffer_PreprocessQuery(string Drg_ID_l2_DrgList, string Joint_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DisplayJointNoForFitupOffer_Executed(string Drg_ID_l2_DrgList, string Joint_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DisplayJointNoForFitupOffer_ExecuteFailed(string Drg_ID_l2_DrgList, string Joint_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JointNoForFitupOffer_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JointNoForFitupOffer_Executing(string Drg_ID_l2_DrgList);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JointNoForFitupOffer_PreprocessQuery(string Drg_ID_l2_DrgList, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JointNoForFitupOffer_Executed(string Drg_ID_l2_DrgList, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void JointNoForFitupOffer_ExecuteFailed(string Drg_ID_l2_DrgList, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MPINoForFitupOffer_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MPINoForFitupOffer_Executing(string DrgIDFromDrawing, string Module_ID_l2_Module, string Part_No_l2_Drg_BOQ, string joint_no);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MPINoForFitupOffer_PreprocessQuery(string DrgIDFromDrawing, string Module_ID_l2_Module, string Part_No_l2_Drg_BOQ, string joint_no, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MPINoForFitupOffer_Executed(string DrgIDFromDrawing, string Module_ID_l2_Module, string Part_No_l2_Drg_BOQ, string joint_no, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MPINoForFitupOffer_ExecuteFailed(string DrgIDFromDrawing, string Module_ID_l2_Module, string Part_No_l2_Drg_BOQ, string joint_no, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query1_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Query1_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query1_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Query1_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void Query1_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FILTERjointQUERY_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FILTERjointQUERY_Executing(string WVF_No);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FILTERjointQUERY_PreprocessQuery(string WVF_No, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FILTERjointQUERY_Executed(string WVF_No, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FILTERjointQUERY_ExecuteFailed(string WVF_No, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void jointQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void jointQuery_Executing(string DrgNo);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void jointQuery_PreprocessQuery(string DrgNo, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void jointQuery_Executed(string DrgNo, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void jointQuery_ExecuteFailed(string DrgNo, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NDE_query_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void NDE_query_Executing(string Module_ID);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NDE_query_PreprocessQuery(string Module_ID, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void NDE_query_Executed(string Module_ID, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void NDE_query_ExecuteFailed(string Module_ID, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisplayPartNoForMIOfferNew_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DisplayPartNoForMIOfferNew_Executing(string Module_ID, string Project_ID_l2_Project, string Drg_ID_l2_DrgList, string Part_No);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisplayPartNoForMIOfferNew_PreprocessQuery(string Module_ID, string Project_ID_l2_Project, string Drg_ID_l2_DrgList, string Part_No, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DisplayPartNoForMIOfferNew_Executed(string Module_ID, string Project_ID_l2_Project, string Drg_ID_l2_DrgList, string Part_No, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DisplayPartNoForMIOfferNew_ExecuteFailed(string Module_ID, string Project_ID_l2_Project, string Drg_ID_l2_DrgList, string Part_No, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartNoFromDrgIDForMIOffer_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PartNoFromDrgIDForMIOffer_Executing(string Drg_ID_l2_DrgList);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartNoFromDrgIDForMIOffer_PreprocessQuery(string Drg_ID_l2_DrgList, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PartNoFromDrgIDForMIOffer_Executed(string Drg_ID_l2_DrgList, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PartNoFromDrgIDForMIOffer_ExecuteFailed(string Drg_ID_l2_DrgList, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WelderForWVFOffer_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void WelderForWVFOffer_Executing(string Project_ID_l2_Project);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WelderForWVFOffer_PreprocessQuery(string Project_ID_l2_Project, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Welder_For_WVF> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void WelderForWVFOffer_Executed(string Project_ID_l2_Project, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Welder_For_WVF> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void WelderForWVFOffer_ExecuteFailed(string Project_ID_l2_Project, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WVFForDelete_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void WVFForDelete_Executing(string WVF_No);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WVFForDelete_PreprocessQuery(string WVF_No, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_WVF_For_Delete> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void WVFForDelete_Executed(string WVF_No, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_WVF_For_Delete> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void WVFForDelete_ExecuteFailed(string WVF_No, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetWVFForDelete_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetWVFForDelete_Executing(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, string c_Module);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetWVFForDelete_PreprocessQuery(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, string c_Module, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_WVFListForDelete> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetWVFForDelete_Executed(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, string c_Module, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_WVFListForDelete> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetWVFForDelete_ExecuteFailed(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, string c_Module, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNoForNdeOffer_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgNoForNdeOffer_Executing(string Module_ID_l2_Module);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DrgNoForNdeOffer_PreprocessQuery(string Module_ID_l2_Module, ref global::System.Linq.IQueryable<global::LightSwitchApplication.sps_view_getDrgNo_for_ndeOffer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgNoForNdeOffer_Executed(string Module_ID_l2_Module, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_view_getDrgNo_for_ndeOffer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DrgNoForNdeOffer_ExecuteFailed(string Module_ID_l2_Module, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SPS_LSData_InitializingConnection(global::Microsoft.LightSwitch.DatabaseConnectionState state);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.FITUP_ACCEPT_MAIN>
                __FITUP_ACCEPT_MAINsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.FITUP_ACCEPT_MAIN>(
                    "FITUP_ACCEPT_MAINs",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__FITUP_ACCEPT_MAINs_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__FITUP_ACCEPT_MAINs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__FITUP_ACCEPT_MAINs_Filter);
            private static bool __FITUP_ACCEPT_MAINs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.FITUP_ACCEPT_MAINs_CanRead(ref result);
                return result;
            }
            private static void __FITUP_ACCEPT_MAINs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.FITUP_ACCEPT_MAIN e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.FITUP_ACCEPT_MAINs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.FITUP_ACCEPT_MAIN, bool>> __FITUP_ACCEPT_MAINs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.FITUP_ACCEPT_MAIN, bool>> filter = null;
                d.FITUP_ACCEPT_MAINs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_CONTRACTOR>
                __GET_CONTRACTORsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_CONTRACTOR>(
                    "GET_CONTRACTORs",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_CONTRACTORs_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_CONTRACTORs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_CONTRACTORs_Filter);
            private static bool __GET_CONTRACTORs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.GET_CONTRACTORs_CanRead(ref result);
                return result;
            }
            private static void __GET_CONTRACTORs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.GET_CONTRACTOR e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.GET_CONTRACTORs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_CONTRACTOR, bool>> __GET_CONTRACTORs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_CONTRACTOR, bool>> filter = null;
                d.GET_CONTRACTORs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Get_FTU_For_inspect_closed>
                __Get_FTU_For_inspect_closedsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Get_FTU_For_inspect_closed>(
                    "Get_FTU_For_inspect_closeds",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Get_FTU_For_inspect_closeds_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Get_FTU_For_inspect_closeds_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Get_FTU_For_inspect_closeds_Filter);
            private static bool __Get_FTU_For_inspect_closeds_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.Get_FTU_For_inspect_closeds_CanRead(ref result);
                return result;
            }
            private static void __Get_FTU_For_inspect_closeds_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.Get_FTU_For_inspect_closed e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Get_FTU_For_inspect_closeds_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Get_FTU_For_inspect_closed, bool>> __Get_FTU_For_inspect_closeds_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Get_FTU_For_inspect_closed, bool>> filter = null;
                d.Get_FTU_For_inspect_closeds_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_INSPECT_For_WVF>
                __GET_INSPECT_For_WVFsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_INSPECT_For_WVF>(
                    "GET_INSPECT_For_WVFs",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_INSPECT_For_WVFs_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_INSPECT_For_WVFs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_INSPECT_For_WVFs_Filter);
            private static bool __GET_INSPECT_For_WVFs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.GET_INSPECT_For_WVFs_CanRead(ref result);
                return result;
            }
            private static void __GET_INSPECT_For_WVFs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.GET_INSPECT_For_WVF e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.GET_INSPECT_For_WVFs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_INSPECT_For_WVF, bool>> __GET_INSPECT_For_WVFs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_INSPECT_For_WVF, bool>> filter = null;
                d.GET_INSPECT_For_WVFs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept>
                __GET_INSPECT_MPI_AFTERacceptsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept>(
                    "GET_INSPECT_MPI_AFTERaccepts",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_INSPECT_MPI_AFTERaccepts_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_INSPECT_MPI_AFTERaccepts_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_INSPECT_MPI_AFTERaccepts_Filter);
            private static bool __GET_INSPECT_MPI_AFTERaccepts_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.GET_INSPECT_MPI_AFTERaccepts_CanRead(ref result);
                return result;
            }
            private static void __GET_INSPECT_MPI_AFTERaccepts_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.GET_INSPECT_MPI_AFTERaccepts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, bool>> __GET_INSPECT_MPI_AFTERaccepts_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept, bool>> filter = null;
                d.GET_INSPECT_MPI_AFTERaccepts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_MPI_INSPECT>
                __GET_MPI_INSPECTsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_MPI_INSPECT>(
                    "GET_MPI_INSPECTs",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_MPI_INSPECTs_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_MPI_INSPECTs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_MPI_INSPECTs_Filter);
            private static bool __GET_MPI_INSPECTs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.GET_MPI_INSPECTs_CanRead(ref result);
                return result;
            }
            private static void __GET_MPI_INSPECTs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.GET_MPI_INSPECT e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.GET_MPI_INSPECTs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_MPI_INSPECT, bool>> __GET_MPI_INSPECTs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_MPI_INSPECT, bool>> filter = null;
                d.GET_MPI_INSPECTs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT>
                __GET_PWHT_INSPECT_ACCEPTsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT>(
                    "GET_PWHT_INSPECT_ACCEPTs",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_PWHT_INSPECT_ACCEPTs_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_PWHT_INSPECT_ACCEPTs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_PWHT_INSPECT_ACCEPTs_Filter);
            private static bool __GET_PWHT_INSPECT_ACCEPTs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.GET_PWHT_INSPECT_ACCEPTs_CanRead(ref result);
                return result;
            }
            private static void __GET_PWHT_INSPECT_ACCEPTs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.GET_PWHT_INSPECT_ACCEPTs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, bool>> __GET_PWHT_INSPECT_ACCEPTs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT, bool>> filter = null;
                d.GET_PWHT_INSPECT_ACCEPTs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT>
                __GET_PWHT_JOINT_ACCEPTsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT>(
                    "GET_PWHT_JOINT_ACCEPTs",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_PWHT_JOINT_ACCEPTs_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_PWHT_JOINT_ACCEPTs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_PWHT_JOINT_ACCEPTs_Filter);
            private static bool __GET_PWHT_JOINT_ACCEPTs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.GET_PWHT_JOINT_ACCEPTs_CanRead(ref result);
                return result;
            }
            private static void __GET_PWHT_JOINT_ACCEPTs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.GET_PWHT_JOINT_ACCEPTs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, bool>> __GET_PWHT_JOINT_ACCEPTs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT, bool>> filter = null;
                d.GET_PWHT_JOINT_ACCEPTs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_QC_INSPECT_MPI>
                __GET_QC_INSPECT_MPIsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_QC_INSPECT_MPI>(
                    "GET_QC_INSPECT_MPIs",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_QC_INSPECT_MPIs_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_QC_INSPECT_MPIs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_QC_INSPECT_MPIs_Filter);
            private static bool __GET_QC_INSPECT_MPIs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.GET_QC_INSPECT_MPIs_CanRead(ref result);
                return result;
            }
            private static void __GET_QC_INSPECT_MPIs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.GET_QC_INSPECT_MPI e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.GET_QC_INSPECT_MPIs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_QC_INSPECT_MPI, bool>> __GET_QC_INSPECT_MPIs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.GET_QC_INSPECT_MPI, bool>> filter = null;
                d.GET_QC_INSPECT_MPIs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Hardness_offer_get>
                __Hardness_offer_getsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Hardness_offer_get>(
                    "Hardness_offer_gets",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Hardness_offer_gets_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Hardness_offer_gets_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Hardness_offer_gets_Filter);
            private static bool __Hardness_offer_gets_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.Hardness_offer_gets_CanRead(ref result);
                return result;
            }
            private static void __Hardness_offer_gets_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.Hardness_offer_get e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Hardness_offer_gets_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Hardness_offer_get, bool>> __Hardness_offer_gets_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Hardness_offer_get, bool>> filter = null;
                d.Hardness_offer_gets_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Inspect_WVF_Detail>
                __Inspect_WVF_DetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Inspect_WVF_Detail>(
                    "Inspect_WVF_Details",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_WVF_Details_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_WVF_Details_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_WVF_Details_Filter);
            private static bool __Inspect_WVF_Details_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.Inspect_WVF_Details_CanRead(ref result);
                return result;
            }
            private static void __Inspect_WVF_Details_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.Inspect_WVF_Detail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Inspect_WVF_Details_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Inspect_WVF_Detail, bool>> __Inspect_WVF_Details_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Inspect_WVF_Detail, bool>> filter = null;
                d.Inspect_WVF_Details_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Contractor_Module>
                __sps_Contractor_ModulesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Contractor_Module>(
                    "sps_Contractor_Modules",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractor_Modules_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractor_Modules_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractor_Modules_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractor_Modules_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractor_Modules_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractor_Modules_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractor_Modules_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractor_Modules_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractor_Modules_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractor_Modules_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractor_Modules_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractor_Modules_Filter);
            private static bool __sps_Contractor_Modules_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Contractor_Modules_CanInsert(ref result);
                return result;
            }
            private static bool __sps_Contractor_Modules_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Contractor_Modules_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_Contractor_Modules_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Contractor_Modules_CanDelete(ref result);
                return result;
            }
            private static bool __sps_Contractor_Modules_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Contractor_Modules_CanRead(ref result);
                return result;
            }
            private static void __sps_Contractor_Modules_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Contractor_Module e)
            {
                d.sps_Contractor_Modules_Inserting(e);
            }
            private static void __sps_Contractor_Modules_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Contractor_Module e)
            {
                d.sps_Contractor_Modules_Inserted(e);
            }
            private static void __sps_Contractor_Modules_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Contractor_Module e)
            {
                d.sps_Contractor_Modules_Updating(e);
            }
            private static void __sps_Contractor_Modules_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Contractor_Module e)
            {
                d.sps_Contractor_Modules_Updated(e);
            }
            private static void __sps_Contractor_Modules_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Contractor_Module e)
            {
                d.sps_Contractor_Modules_Deleting(e);
            }
            private static void __sps_Contractor_Modules_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Contractor_Module e)
            {
                d.sps_Contractor_Modules_Deleted(e);
            }
            private static void __sps_Contractor_Modules_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Contractor_Module e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_Contractor_Modules_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Contractor_Module, bool>> __sps_Contractor_Modules_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Contractor_Module, bool>> filter = null;
                d.sps_Contractor_Modules_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Contractor>
                __sps_ContractorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Contractor>(
                    "sps_Contractors",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractors_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractors_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractors_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractors_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractors_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractors_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractors_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractors_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractors_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractors_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractors_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Contractors_Filter);
            private static bool __sps_Contractors_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Contractors_CanInsert(ref result);
                return result;
            }
            private static bool __sps_Contractors_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Contractors_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_Contractors_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Contractors_CanDelete(ref result);
                return result;
            }
            private static bool __sps_Contractors_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Contractors_CanRead(ref result);
                return result;
            }
            private static void __sps_Contractors_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Contractor e)
            {
                d.sps_Contractors_Inserting(e);
            }
            private static void __sps_Contractors_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Contractor e)
            {
                d.sps_Contractors_Inserted(e);
            }
            private static void __sps_Contractors_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Contractor e)
            {
                d.sps_Contractors_Updating(e);
            }
            private static void __sps_Contractors_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Contractor e)
            {
                d.sps_Contractors_Updated(e);
            }
            private static void __sps_Contractors_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Contractor e)
            {
                d.sps_Contractors_Deleting(e);
            }
            private static void __sps_Contractors_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Contractor e)
            {
                d.sps_Contractors_Deleted(e);
            }
            private static void __sps_Contractors_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Contractor e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_Contractors_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Contractor, bool>> __sps_Contractors_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Contractor, bool>> filter = null;
                d.sps_Contractors_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_DrgList>
                __sps_DrgListsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_DrgList>(
                    "sps_DrgLists",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_DrgLists_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_DrgLists_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_DrgLists_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_DrgLists_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_DrgLists_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_DrgLists_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_DrgLists_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_DrgLists_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_DrgLists_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_DrgLists_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_DrgLists_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_DrgLists_Filter);
            private static bool __sps_DrgLists_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_DrgLists_CanInsert(ref result);
                return result;
            }
            private static bool __sps_DrgLists_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_DrgLists_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_DrgLists_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_DrgLists_CanDelete(ref result);
                return result;
            }
            private static bool __sps_DrgLists_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_DrgLists_CanRead(ref result);
                return result;
            }
            private static void __sps_DrgLists_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_DrgList e)
            {
                d.sps_DrgLists_Inserting(e);
            }
            private static void __sps_DrgLists_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_DrgList e)
            {
                d.sps_DrgLists_Inserted(e);
            }
            private static void __sps_DrgLists_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_DrgList e)
            {
                d.sps_DrgLists_Updating(e);
            }
            private static void __sps_DrgLists_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_DrgList e)
            {
                d.sps_DrgLists_Updated(e);
            }
            private static void __sps_DrgLists_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_DrgList e)
            {
                d.sps_DrgLists_Deleting(e);
            }
            private static void __sps_DrgLists_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_DrgList e)
            {
                d.sps_DrgLists_Deleted(e);
            }
            private static void __sps_DrgLists_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_DrgList e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_DrgLists_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_DrgList, bool>> __sps_DrgLists_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_DrgList, bool>> filter = null;
                d.sps_DrgLists_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_FTUDetail>
                __sps_FTUDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_FTUDetail>(
                    "sps_FTUDetails",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUDetails_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUDetails_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUDetails_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUDetails_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUDetails_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUDetails_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUDetails_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUDetails_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUDetails_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUDetails_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUDetails_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUDetails_Filter);
            private static bool __sps_FTUDetails_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_FTUDetails_CanInsert(ref result);
                return result;
            }
            private static bool __sps_FTUDetails_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_FTUDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_FTUDetails_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_FTUDetails_CanDelete(ref result);
                return result;
            }
            private static bool __sps_FTUDetails_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_FTUDetails_CanRead(ref result);
                return result;
            }
            private static void __sps_FTUDetails_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_FTUDetail e)
            {
                d.sps_FTUDetails_Inserting(e);
            }
            private static void __sps_FTUDetails_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_FTUDetail e)
            {
                d.sps_FTUDetails_Inserted(e);
            }
            private static void __sps_FTUDetails_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_FTUDetail e)
            {
                d.sps_FTUDetails_Updating(e);
            }
            private static void __sps_FTUDetails_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_FTUDetail e)
            {
                d.sps_FTUDetails_Updated(e);
            }
            private static void __sps_FTUDetails_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_FTUDetail e)
            {
                d.sps_FTUDetails_Deleting(e);
            }
            private static void __sps_FTUDetails_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_FTUDetail e)
            {
                d.sps_FTUDetails_Deleted(e);
            }
            private static void __sps_FTUDetails_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_FTUDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_FTUDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_FTUDetail, bool>> __sps_FTUDetails_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_FTUDetail, bool>> filter = null;
                d.sps_FTUDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_FTU>
                __sps_FTUsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_FTU>(
                    "sps_FTUs",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUs_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUs_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUs_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUs_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUs_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUs_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUs_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUs_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUs_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUs_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_FTUs_Filter);
            private static bool __sps_FTUs_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_FTUs_CanInsert(ref result);
                return result;
            }
            private static bool __sps_FTUs_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_FTUs_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_FTUs_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_FTUs_CanDelete(ref result);
                return result;
            }
            private static bool __sps_FTUs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_FTUs_CanRead(ref result);
                return result;
            }
            private static void __sps_FTUs_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_FTU e)
            {
                d.sps_FTUs_Inserting(e);
            }
            private static void __sps_FTUs_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_FTU e)
            {
                d.sps_FTUs_Inserted(e);
            }
            private static void __sps_FTUs_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_FTU e)
            {
                d.sps_FTUs_Updating(e);
            }
            private static void __sps_FTUs_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_FTU e)
            {
                d.sps_FTUs_Updated(e);
            }
            private static void __sps_FTUs_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_FTU e)
            {
                d.sps_FTUs_Deleting(e);
            }
            private static void __sps_FTUs_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_FTU e)
            {
                d.sps_FTUs_Deleted(e);
            }
            private static void __sps_FTUs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_FTU e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_FTUs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_FTU, bool>> __sps_FTUs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_FTU, bool>> filter = null;
                d.sps_FTUs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_HardnessDetail>
                __sps_HardnessDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_HardnessDetail>(
                    "sps_HardnessDetails",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_HardnessDetails_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_HardnessDetails_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_HardnessDetails_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_HardnessDetails_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_HardnessDetails_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_HardnessDetails_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_HardnessDetails_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_HardnessDetails_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_HardnessDetails_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_HardnessDetails_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_HardnessDetails_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_HardnessDetails_Filter);
            private static bool __sps_HardnessDetails_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_HardnessDetails_CanInsert(ref result);
                return result;
            }
            private static bool __sps_HardnessDetails_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_HardnessDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_HardnessDetails_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_HardnessDetails_CanDelete(ref result);
                return result;
            }
            private static bool __sps_HardnessDetails_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_HardnessDetails_CanRead(ref result);
                return result;
            }
            private static void __sps_HardnessDetails_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_HardnessDetail e)
            {
                d.sps_HardnessDetails_Inserting(e);
            }
            private static void __sps_HardnessDetails_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_HardnessDetail e)
            {
                d.sps_HardnessDetails_Inserted(e);
            }
            private static void __sps_HardnessDetails_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_HardnessDetail e)
            {
                d.sps_HardnessDetails_Updating(e);
            }
            private static void __sps_HardnessDetails_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_HardnessDetail e)
            {
                d.sps_HardnessDetails_Updated(e);
            }
            private static void __sps_HardnessDetails_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_HardnessDetail e)
            {
                d.sps_HardnessDetails_Deleting(e);
            }
            private static void __sps_HardnessDetails_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_HardnessDetail e)
            {
                d.sps_HardnessDetails_Deleted(e);
            }
            private static void __sps_HardnessDetails_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_HardnessDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_HardnessDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_HardnessDetail, bool>> __sps_HardnessDetails_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_HardnessDetail, bool>> filter = null;
                d.sps_HardnessDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Hardness>
                __sps_HardnessesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Hardness>(
                    "sps_Hardnesses",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Hardnesses_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Hardnesses_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Hardnesses_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Hardnesses_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Hardnesses_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Hardnesses_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Hardnesses_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Hardnesses_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Hardnesses_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Hardnesses_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Hardnesses_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Hardnesses_Filter);
            private static bool __sps_Hardnesses_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Hardnesses_CanInsert(ref result);
                return result;
            }
            private static bool __sps_Hardnesses_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Hardnesses_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_Hardnesses_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Hardnesses_CanDelete(ref result);
                return result;
            }
            private static bool __sps_Hardnesses_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Hardnesses_CanRead(ref result);
                return result;
            }
            private static void __sps_Hardnesses_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Hardness e)
            {
                d.sps_Hardnesses_Inserting(e);
            }
            private static void __sps_Hardnesses_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Hardness e)
            {
                d.sps_Hardnesses_Inserted(e);
            }
            private static void __sps_Hardnesses_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Hardness e)
            {
                d.sps_Hardnesses_Updating(e);
            }
            private static void __sps_Hardnesses_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Hardness e)
            {
                d.sps_Hardnesses_Updated(e);
            }
            private static void __sps_Hardnesses_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Hardness e)
            {
                d.sps_Hardnesses_Deleting(e);
            }
            private static void __sps_Hardnesses_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Hardness e)
            {
                d.sps_Hardnesses_Deleted(e);
            }
            private static void __sps_Hardnesses_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Hardness e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_Hardnesses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Hardness, bool>> __sps_Hardnesses_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Hardness, bool>> filter = null;
                d.sps_Hardnesses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Location>
                __sps_LocationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Location>(
                    "sps_Locations",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Locations_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Locations_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Locations_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Locations_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Locations_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Locations_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Locations_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Locations_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Locations_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Locations_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Locations_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Locations_Filter);
            private static bool __sps_Locations_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Locations_CanInsert(ref result);
                return result;
            }
            private static bool __sps_Locations_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Locations_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_Locations_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Locations_CanDelete(ref result);
                return result;
            }
            private static bool __sps_Locations_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Locations_CanRead(ref result);
                return result;
            }
            private static void __sps_Locations_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Location e)
            {
                d.sps_Locations_Inserting(e);
            }
            private static void __sps_Locations_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Location e)
            {
                d.sps_Locations_Inserted(e);
            }
            private static void __sps_Locations_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Location e)
            {
                d.sps_Locations_Updating(e);
            }
            private static void __sps_Locations_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Location e)
            {
                d.sps_Locations_Updated(e);
            }
            private static void __sps_Locations_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Location e)
            {
                d.sps_Locations_Deleting(e);
            }
            private static void __sps_Locations_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Location e)
            {
                d.sps_Locations_Deleted(e);
            }
            private static void __sps_Locations_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Location e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_Locations_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Location, bool>> __sps_Locations_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Location, bool>> filter = null;
                d.sps_Locations_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Master_Proceduer>
                __sps_Master_ProceduersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Master_Proceduer>(
                    "sps_Master_Proceduers",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Master_Proceduers_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Master_Proceduers_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Master_Proceduers_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Master_Proceduers_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Master_Proceduers_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Master_Proceduers_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Master_Proceduers_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Master_Proceduers_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Master_Proceduers_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Master_Proceduers_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Master_Proceduers_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Master_Proceduers_Filter);
            private static bool __sps_Master_Proceduers_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Master_Proceduers_CanInsert(ref result);
                return result;
            }
            private static bool __sps_Master_Proceduers_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Master_Proceduers_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_Master_Proceduers_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Master_Proceduers_CanDelete(ref result);
                return result;
            }
            private static bool __sps_Master_Proceduers_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Master_Proceduers_CanRead(ref result);
                return result;
            }
            private static void __sps_Master_Proceduers_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Master_Proceduer e)
            {
                d.sps_Master_Proceduers_Inserting(e);
            }
            private static void __sps_Master_Proceduers_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Master_Proceduer e)
            {
                d.sps_Master_Proceduers_Inserted(e);
            }
            private static void __sps_Master_Proceduers_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Master_Proceduer e)
            {
                d.sps_Master_Proceduers_Updating(e);
            }
            private static void __sps_Master_Proceduers_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Master_Proceduer e)
            {
                d.sps_Master_Proceduers_Updated(e);
            }
            private static void __sps_Master_Proceduers_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Master_Proceduer e)
            {
                d.sps_Master_Proceduers_Deleting(e);
            }
            private static void __sps_Master_Proceduers_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Master_Proceduer e)
            {
                d.sps_Master_Proceduers_Deleted(e);
            }
            private static void __sps_Master_Proceduers_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Master_Proceduer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_Master_Proceduers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Master_Proceduer, bool>> __sps_Master_Proceduers_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Master_Proceduer, bool>> filter = null;
                d.sps_Master_Proceduers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Matser_CodeOfConstruction>
                __sps_Matser_CodeOfConstructionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Matser_CodeOfConstruction>(
                    "sps_Matser_CodeOfConstructions",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Matser_CodeOfConstructions_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Matser_CodeOfConstructions_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Matser_CodeOfConstructions_Filter);
            private static bool __sps_Matser_CodeOfConstructions_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Matser_CodeOfConstructions_CanRead(ref result);
                return result;
            }
            private static void __sps_Matser_CodeOfConstructions_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Matser_CodeOfConstruction e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_Matser_CodeOfConstructions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Matser_CodeOfConstruction, bool>> __sps_Matser_CodeOfConstructions_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Matser_CodeOfConstruction, bool>> filter = null;
                d.sps_Matser_CodeOfConstructions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_MCR_Detail>
                __sps_MCR_DetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_MCR_Detail>(
                    "sps_MCR_Details",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCR_Details_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCR_Details_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCR_Details_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCR_Details_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCR_Details_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCR_Details_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCR_Details_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCR_Details_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCR_Details_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCR_Details_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCR_Details_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCR_Details_Filter);
            private static bool __sps_MCR_Details_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MCR_Details_CanInsert(ref result);
                return result;
            }
            private static bool __sps_MCR_Details_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MCR_Details_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_MCR_Details_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MCR_Details_CanDelete(ref result);
                return result;
            }
            private static bool __sps_MCR_Details_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MCR_Details_CanRead(ref result);
                return result;
            }
            private static void __sps_MCR_Details_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MCR_Detail e)
            {
                d.sps_MCR_Details_Inserting(e);
            }
            private static void __sps_MCR_Details_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MCR_Detail e)
            {
                d.sps_MCR_Details_Inserted(e);
            }
            private static void __sps_MCR_Details_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MCR_Detail e)
            {
                d.sps_MCR_Details_Updating(e);
            }
            private static void __sps_MCR_Details_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MCR_Detail e)
            {
                d.sps_MCR_Details_Updated(e);
            }
            private static void __sps_MCR_Details_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MCR_Detail e)
            {
                d.sps_MCR_Details_Deleting(e);
            }
            private static void __sps_MCR_Details_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MCR_Detail e)
            {
                d.sps_MCR_Details_Deleted(e);
            }
            private static void __sps_MCR_Details_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MCR_Detail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_MCR_Details_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_MCR_Detail, bool>> __sps_MCR_Details_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_MCR_Detail, bool>> filter = null;
                d.sps_MCR_Details_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_MCR>
                __sps_MCRsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_MCR>(
                    "sps_MCRs",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCRs_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCRs_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCRs_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCRs_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCRs_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCRs_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCRs_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCRs_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCRs_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCRs_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCRs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MCRs_Filter);
            private static bool __sps_MCRs_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MCRs_CanInsert(ref result);
                return result;
            }
            private static bool __sps_MCRs_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MCRs_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_MCRs_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MCRs_CanDelete(ref result);
                return result;
            }
            private static bool __sps_MCRs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MCRs_CanRead(ref result);
                return result;
            }
            private static void __sps_MCRs_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MCR e)
            {
                d.sps_MCRs_Inserting(e);
            }
            private static void __sps_MCRs_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MCR e)
            {
                d.sps_MCRs_Inserted(e);
            }
            private static void __sps_MCRs_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MCR e)
            {
                d.sps_MCRs_Updating(e);
            }
            private static void __sps_MCRs_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MCR e)
            {
                d.sps_MCRs_Updated(e);
            }
            private static void __sps_MCRs_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MCR e)
            {
                d.sps_MCRs_Deleting(e);
            }
            private static void __sps_MCRs_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MCR e)
            {
                d.sps_MCRs_Deleted(e);
            }
            private static void __sps_MCRs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MCR e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_MCRs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_MCR, bool>> __sps_MCRs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_MCR, bool>> filter = null;
                d.sps_MCRs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Module>
                __sps_ModulesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Module>(
                    "sps_Modules",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Modules_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Modules_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Modules_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Modules_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Modules_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Modules_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Modules_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Modules_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Modules_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Modules_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Modules_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Modules_Filter);
            private static bool __sps_Modules_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Modules_CanInsert(ref result);
                return result;
            }
            private static bool __sps_Modules_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Modules_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_Modules_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Modules_CanDelete(ref result);
                return result;
            }
            private static bool __sps_Modules_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Modules_CanRead(ref result);
                return result;
            }
            private static void __sps_Modules_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Module e)
            {
                d.sps_Modules_Inserting(e);
            }
            private static void __sps_Modules_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Module e)
            {
                d.sps_Modules_Inserted(e);
            }
            private static void __sps_Modules_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Module e)
            {
                d.sps_Modules_Updating(e);
            }
            private static void __sps_Modules_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Module e)
            {
                d.sps_Modules_Updated(e);
            }
            private static void __sps_Modules_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Module e)
            {
                d.sps_Modules_Deleting(e);
            }
            private static void __sps_Modules_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Module e)
            {
                d.sps_Modules_Deleted(e);
            }
            private static void __sps_Modules_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Module e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_Modules_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Module, bool>> __sps_Modules_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Module, bool>> filter = null;
                d.sps_Modules_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_MPI_Detail_Insp>
                __sps_MPI_Detail_InspsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_MPI_Detail_Insp>(
                    "sps_MPI_Detail_Insps",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Insps_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Insps_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Insps_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Insps_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Insps_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Insps_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Insps_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Insps_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Insps_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Insps_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Insps_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Insps_Filter);
            private static bool __sps_MPI_Detail_Insps_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MPI_Detail_Insps_CanInsert(ref result);
                return result;
            }
            private static bool __sps_MPI_Detail_Insps_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MPI_Detail_Insps_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_MPI_Detail_Insps_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MPI_Detail_Insps_CanDelete(ref result);
                return result;
            }
            private static bool __sps_MPI_Detail_Insps_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MPI_Detail_Insps_CanRead(ref result);
                return result;
            }
            private static void __sps_MPI_Detail_Insps_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI_Detail_Insp e)
            {
                d.sps_MPI_Detail_Insps_Inserting(e);
            }
            private static void __sps_MPI_Detail_Insps_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI_Detail_Insp e)
            {
                d.sps_MPI_Detail_Insps_Inserted(e);
            }
            private static void __sps_MPI_Detail_Insps_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI_Detail_Insp e)
            {
                d.sps_MPI_Detail_Insps_Updating(e);
            }
            private static void __sps_MPI_Detail_Insps_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI_Detail_Insp e)
            {
                d.sps_MPI_Detail_Insps_Updated(e);
            }
            private static void __sps_MPI_Detail_Insps_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI_Detail_Insp e)
            {
                d.sps_MPI_Detail_Insps_Deleting(e);
            }
            private static void __sps_MPI_Detail_Insps_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI_Detail_Insp e)
            {
                d.sps_MPI_Detail_Insps_Deleted(e);
            }
            private static void __sps_MPI_Detail_Insps_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI_Detail_Insp e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_MPI_Detail_Insps_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_MPI_Detail_Insp, bool>> __sps_MPI_Detail_Insps_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_MPI_Detail_Insp, bool>> filter = null;
                d.sps_MPI_Detail_Insps_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_MPI_Detail_Off>
                __sps_MPI_Detail_OffsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_MPI_Detail_Off>(
                    "sps_MPI_Detail_Offs",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Offs_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Offs_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Offs_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Offs_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Offs_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Offs_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Offs_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Offs_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Offs_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Offs_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Offs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPI_Detail_Offs_Filter);
            private static bool __sps_MPI_Detail_Offs_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MPI_Detail_Offs_CanInsert(ref result);
                return result;
            }
            private static bool __sps_MPI_Detail_Offs_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MPI_Detail_Offs_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_MPI_Detail_Offs_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MPI_Detail_Offs_CanDelete(ref result);
                return result;
            }
            private static bool __sps_MPI_Detail_Offs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MPI_Detail_Offs_CanRead(ref result);
                return result;
            }
            private static void __sps_MPI_Detail_Offs_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI_Detail_Off e)
            {
                d.sps_MPI_Detail_Offs_Inserting(e);
            }
            private static void __sps_MPI_Detail_Offs_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI_Detail_Off e)
            {
                d.sps_MPI_Detail_Offs_Inserted(e);
            }
            private static void __sps_MPI_Detail_Offs_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI_Detail_Off e)
            {
                d.sps_MPI_Detail_Offs_Updating(e);
            }
            private static void __sps_MPI_Detail_Offs_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI_Detail_Off e)
            {
                d.sps_MPI_Detail_Offs_Updated(e);
            }
            private static void __sps_MPI_Detail_Offs_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI_Detail_Off e)
            {
                d.sps_MPI_Detail_Offs_Deleting(e);
            }
            private static void __sps_MPI_Detail_Offs_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI_Detail_Off e)
            {
                d.sps_MPI_Detail_Offs_Deleted(e);
            }
            private static void __sps_MPI_Detail_Offs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI_Detail_Off e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_MPI_Detail_Offs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_MPI_Detail_Off, bool>> __sps_MPI_Detail_Offs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_MPI_Detail_Off, bool>> filter = null;
                d.sps_MPI_Detail_Offs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_MPI>
                __sps_MPIsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_MPI>(
                    "sps_MPIs",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPIs_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPIs_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPIs_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPIs_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPIs_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPIs_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPIs_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPIs_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPIs_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPIs_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPIs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_MPIs_Filter);
            private static bool __sps_MPIs_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MPIs_CanInsert(ref result);
                return result;
            }
            private static bool __sps_MPIs_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MPIs_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_MPIs_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MPIs_CanDelete(ref result);
                return result;
            }
            private static bool __sps_MPIs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_MPIs_CanRead(ref result);
                return result;
            }
            private static void __sps_MPIs_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI e)
            {
                d.sps_MPIs_Inserting(e);
            }
            private static void __sps_MPIs_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI e)
            {
                d.sps_MPIs_Inserted(e);
            }
            private static void __sps_MPIs_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI e)
            {
                d.sps_MPIs_Updating(e);
            }
            private static void __sps_MPIs_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI e)
            {
                d.sps_MPIs_Updated(e);
            }
            private static void __sps_MPIs_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI e)
            {
                d.sps_MPIs_Deleting(e);
            }
            private static void __sps_MPIs_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI e)
            {
                d.sps_MPIs_Deleted(e);
            }
            private static void __sps_MPIs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_MPI e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_MPIs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_MPI, bool>> __sps_MPIs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_MPI, bool>> filter = null;
                d.sps_MPIs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_NDEReqDet>
                __sps_NDEReqDetsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_NDEReqDet>(
                    "sps_NDEReqDets",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqDets_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqDets_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqDets_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqDets_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqDets_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqDets_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqDets_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqDets_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqDets_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqDets_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqDets_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqDets_Filter);
            private static bool __sps_NDEReqDets_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_NDEReqDets_CanInsert(ref result);
                return result;
            }
            private static bool __sps_NDEReqDets_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_NDEReqDets_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_NDEReqDets_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_NDEReqDets_CanDelete(ref result);
                return result;
            }
            private static bool __sps_NDEReqDets_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_NDEReqDets_CanRead(ref result);
                return result;
            }
            private static void __sps_NDEReqDets_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_NDEReqDet e)
            {
                d.sps_NDEReqDets_Inserting(e);
            }
            private static void __sps_NDEReqDets_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_NDEReqDet e)
            {
                d.sps_NDEReqDets_Inserted(e);
            }
            private static void __sps_NDEReqDets_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_NDEReqDet e)
            {
                d.sps_NDEReqDets_Updating(e);
            }
            private static void __sps_NDEReqDets_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_NDEReqDet e)
            {
                d.sps_NDEReqDets_Updated(e);
            }
            private static void __sps_NDEReqDets_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_NDEReqDet e)
            {
                d.sps_NDEReqDets_Deleting(e);
            }
            private static void __sps_NDEReqDets_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_NDEReqDet e)
            {
                d.sps_NDEReqDets_Deleted(e);
            }
            private static void __sps_NDEReqDets_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_NDEReqDet e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_NDEReqDets_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_NDEReqDet, bool>> __sps_NDEReqDets_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_NDEReqDet, bool>> filter = null;
                d.sps_NDEReqDets_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_NDEReq>
                __sps_NDEReqsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_NDEReq>(
                    "sps_NDEReqs",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqs_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqs_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqs_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqs_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqs_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqs_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqs_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqs_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqs_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqs_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_NDEReqs_Filter);
            private static bool __sps_NDEReqs_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_NDEReqs_CanInsert(ref result);
                return result;
            }
            private static bool __sps_NDEReqs_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_NDEReqs_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_NDEReqs_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_NDEReqs_CanDelete(ref result);
                return result;
            }
            private static bool __sps_NDEReqs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_NDEReqs_CanRead(ref result);
                return result;
            }
            private static void __sps_NDEReqs_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_NDEReq e)
            {
                d.sps_NDEReqs_Inserting(e);
            }
            private static void __sps_NDEReqs_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_NDEReq e)
            {
                d.sps_NDEReqs_Inserted(e);
            }
            private static void __sps_NDEReqs_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_NDEReq e)
            {
                d.sps_NDEReqs_Updating(e);
            }
            private static void __sps_NDEReqs_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_NDEReq e)
            {
                d.sps_NDEReqs_Updated(e);
            }
            private static void __sps_NDEReqs_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_NDEReq e)
            {
                d.sps_NDEReqs_Deleting(e);
            }
            private static void __sps_NDEReqs_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_NDEReq e)
            {
                d.sps_NDEReqs_Deleted(e);
            }
            private static void __sps_NDEReqs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_NDEReq e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_NDEReqs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_NDEReq, bool>> __sps_NDEReqs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_NDEReq, bool>> filter = null;
                d.sps_NDEReqs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Project_Drg>
                __sps_Project_DrgsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Project_Drg>(
                    "sps_Project_Drgs",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Project_Drgs_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Project_Drgs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Project_Drgs_Filter);
            private static bool __sps_Project_Drgs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Project_Drgs_CanRead(ref result);
                return result;
            }
            private static void __sps_Project_Drgs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Project_Drg e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_Project_Drgs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Project_Drg, bool>> __sps_Project_Drgs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Project_Drg, bool>> filter = null;
                d.sps_Project_Drgs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Project>
                __sps_ProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Project>(
                    "sps_Projects",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Projects_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Projects_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Projects_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Projects_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Projects_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Projects_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Projects_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Projects_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Projects_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Projects_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Projects_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_Projects_Filter);
            private static bool __sps_Projects_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Projects_CanInsert(ref result);
                return result;
            }
            private static bool __sps_Projects_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Projects_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_Projects_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Projects_CanDelete(ref result);
                return result;
            }
            private static bool __sps_Projects_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_Projects_CanRead(ref result);
                return result;
            }
            private static void __sps_Projects_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Project e)
            {
                d.sps_Projects_Inserting(e);
            }
            private static void __sps_Projects_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Project e)
            {
                d.sps_Projects_Inserted(e);
            }
            private static void __sps_Projects_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Project e)
            {
                d.sps_Projects_Updating(e);
            }
            private static void __sps_Projects_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Project e)
            {
                d.sps_Projects_Updated(e);
            }
            private static void __sps_Projects_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Project e)
            {
                d.sps_Projects_Deleting(e);
            }
            private static void __sps_Projects_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Project e)
            {
                d.sps_Projects_Deleted(e);
            }
            private static void __sps_Projects_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_Project e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_Projects_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Project, bool>> __sps_Projects_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_Project, bool>> filter = null;
                d.sps_Projects_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_PWHTDetail>
                __sps_PWHTDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_PWHTDetail>(
                    "sps_PWHTDetails",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTDetails_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTDetails_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTDetails_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTDetails_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTDetails_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTDetails_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTDetails_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTDetails_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTDetails_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTDetails_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTDetails_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTDetails_Filter);
            private static bool __sps_PWHTDetails_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_PWHTDetails_CanInsert(ref result);
                return result;
            }
            private static bool __sps_PWHTDetails_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_PWHTDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_PWHTDetails_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_PWHTDetails_CanDelete(ref result);
                return result;
            }
            private static bool __sps_PWHTDetails_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_PWHTDetails_CanRead(ref result);
                return result;
            }
            private static void __sps_PWHTDetails_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_PWHTDetail e)
            {
                d.sps_PWHTDetails_Inserting(e);
            }
            private static void __sps_PWHTDetails_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_PWHTDetail e)
            {
                d.sps_PWHTDetails_Inserted(e);
            }
            private static void __sps_PWHTDetails_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_PWHTDetail e)
            {
                d.sps_PWHTDetails_Updating(e);
            }
            private static void __sps_PWHTDetails_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_PWHTDetail e)
            {
                d.sps_PWHTDetails_Updated(e);
            }
            private static void __sps_PWHTDetails_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_PWHTDetail e)
            {
                d.sps_PWHTDetails_Deleting(e);
            }
            private static void __sps_PWHTDetails_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_PWHTDetail e)
            {
                d.sps_PWHTDetails_Deleted(e);
            }
            private static void __sps_PWHTDetails_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_PWHTDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_PWHTDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_PWHTDetail, bool>> __sps_PWHTDetails_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_PWHTDetail, bool>> filter = null;
                d.sps_PWHTDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_PWHT>
                __sps_PWHTsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_PWHT>(
                    "sps_PWHTs",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTs_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTs_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTs_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTs_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTs_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTs_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTs_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTs_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTs_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTs_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_PWHTs_Filter);
            private static bool __sps_PWHTs_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_PWHTs_CanInsert(ref result);
                return result;
            }
            private static bool __sps_PWHTs_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_PWHTs_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_PWHTs_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_PWHTs_CanDelete(ref result);
                return result;
            }
            private static bool __sps_PWHTs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_PWHTs_CanRead(ref result);
                return result;
            }
            private static void __sps_PWHTs_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_PWHT e)
            {
                d.sps_PWHTs_Inserting(e);
            }
            private static void __sps_PWHTs_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_PWHT e)
            {
                d.sps_PWHTs_Inserted(e);
            }
            private static void __sps_PWHTs_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_PWHT e)
            {
                d.sps_PWHTs_Updating(e);
            }
            private static void __sps_PWHTs_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_PWHT e)
            {
                d.sps_PWHTs_Updated(e);
            }
            private static void __sps_PWHTs_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_PWHT e)
            {
                d.sps_PWHTs_Deleting(e);
            }
            private static void __sps_PWHTs_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_PWHT e)
            {
                d.sps_PWHTs_Deleted(e);
            }
            private static void __sps_PWHTs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_PWHT e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_PWHTs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_PWHT, bool>> __sps_PWHTs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_PWHT, bool>> filter = null;
                d.sps_PWHTs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_RR_WVFDetail>
                __sps_RR_WVFDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_RR_WVFDetail>(
                    "sps_RR_WVFDetails",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFDetails_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFDetails_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFDetails_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFDetails_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFDetails_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFDetails_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFDetails_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFDetails_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFDetails_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFDetails_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFDetails_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFDetails_Filter);
            private static bool __sps_RR_WVFDetails_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_RR_WVFDetails_CanInsert(ref result);
                return result;
            }
            private static bool __sps_RR_WVFDetails_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_RR_WVFDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_RR_WVFDetails_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_RR_WVFDetails_CanDelete(ref result);
                return result;
            }
            private static bool __sps_RR_WVFDetails_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_RR_WVFDetails_CanRead(ref result);
                return result;
            }
            private static void __sps_RR_WVFDetails_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_RR_WVFDetail e)
            {
                d.sps_RR_WVFDetails_Inserting(e);
            }
            private static void __sps_RR_WVFDetails_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_RR_WVFDetail e)
            {
                d.sps_RR_WVFDetails_Inserted(e);
            }
            private static void __sps_RR_WVFDetails_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_RR_WVFDetail e)
            {
                d.sps_RR_WVFDetails_Updating(e);
            }
            private static void __sps_RR_WVFDetails_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_RR_WVFDetail e)
            {
                d.sps_RR_WVFDetails_Updated(e);
            }
            private static void __sps_RR_WVFDetails_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_RR_WVFDetail e)
            {
                d.sps_RR_WVFDetails_Deleting(e);
            }
            private static void __sps_RR_WVFDetails_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_RR_WVFDetail e)
            {
                d.sps_RR_WVFDetails_Deleted(e);
            }
            private static void __sps_RR_WVFDetails_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_RR_WVFDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_RR_WVFDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_RR_WVFDetail, bool>> __sps_RR_WVFDetails_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_RR_WVFDetail, bool>> filter = null;
                d.sps_RR_WVFDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_RR_WVF>
                __sps_RR_WVFsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_RR_WVF>(
                    "sps_RR_WVFs",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFs_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFs_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFs_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFs_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFs_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFs_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFs_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFs_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFs_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFs_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_RR_WVFs_Filter);
            private static bool __sps_RR_WVFs_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_RR_WVFs_CanInsert(ref result);
                return result;
            }
            private static bool __sps_RR_WVFs_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_RR_WVFs_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_RR_WVFs_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_RR_WVFs_CanDelete(ref result);
                return result;
            }
            private static bool __sps_RR_WVFs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_RR_WVFs_CanRead(ref result);
                return result;
            }
            private static void __sps_RR_WVFs_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_RR_WVF e)
            {
                d.sps_RR_WVFs_Inserting(e);
            }
            private static void __sps_RR_WVFs_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_RR_WVF e)
            {
                d.sps_RR_WVFs_Inserted(e);
            }
            private static void __sps_RR_WVFs_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_RR_WVF e)
            {
                d.sps_RR_WVFs_Updating(e);
            }
            private static void __sps_RR_WVFs_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_RR_WVF e)
            {
                d.sps_RR_WVFs_Updated(e);
            }
            private static void __sps_RR_WVFs_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_RR_WVF e)
            {
                d.sps_RR_WVFs_Deleting(e);
            }
            private static void __sps_RR_WVFs_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_RR_WVF e)
            {
                d.sps_RR_WVFs_Deleted(e);
            }
            private static void __sps_RR_WVFs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_RR_WVF e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_RR_WVFs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_RR_WVF, bool>> __sps_RR_WVFs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_RR_WVF, bool>> filter = null;
                d.sps_RR_WVFs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_User_Project>
                __sps_User_ProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_User_Project>(
                    "sps_User_Projects",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_User_Projects_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_User_Projects_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_User_Projects_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_User_Projects_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_User_Projects_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_User_Projects_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_User_Projects_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_User_Projects_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_User_Projects_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_User_Projects_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_User_Projects_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_User_Projects_Filter);
            private static bool __sps_User_Projects_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_User_Projects_CanInsert(ref result);
                return result;
            }
            private static bool __sps_User_Projects_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_User_Projects_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_User_Projects_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_User_Projects_CanDelete(ref result);
                return result;
            }
            private static bool __sps_User_Projects_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_User_Projects_CanRead(ref result);
                return result;
            }
            private static void __sps_User_Projects_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_User_Project e)
            {
                d.sps_User_Projects_Inserting(e);
            }
            private static void __sps_User_Projects_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_User_Project e)
            {
                d.sps_User_Projects_Inserted(e);
            }
            private static void __sps_User_Projects_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_User_Project e)
            {
                d.sps_User_Projects_Updating(e);
            }
            private static void __sps_User_Projects_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_User_Project e)
            {
                d.sps_User_Projects_Updated(e);
            }
            private static void __sps_User_Projects_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_User_Project e)
            {
                d.sps_User_Projects_Deleting(e);
            }
            private static void __sps_User_Projects_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_User_Project e)
            {
                d.sps_User_Projects_Deleted(e);
            }
            private static void __sps_User_Projects_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_User_Project e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_User_Projects_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_User_Project, bool>> __sps_User_Projects_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_User_Project, bool>> filter = null;
                d.sps_User_Projects_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Drg_No_For_NDE>
                __sps_View_Get_Drg_No_For_NDEsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Drg_No_For_NDE>(
                    "sps_View_Get_Drg_No_For_NDEs",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Drg_No_For_NDEs_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Drg_No_For_NDEs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Drg_No_For_NDEs_Filter);
            private static bool __sps_View_Get_Drg_No_For_NDEs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_Drg_No_For_NDEs_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_Drg_No_For_NDEs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_Drg_No_For_NDE e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_Drg_No_For_NDEs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Drg_No_For_NDE, bool>> __sps_View_Get_Drg_No_For_NDEs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Drg_No_For_NDE, bool>> filter = null;
                d.sps_View_Get_Drg_No_For_NDEs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT>
                __sps_View_Get_Drg_No_For_PWHTsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT>(
                    "sps_View_Get_Drg_No_For_PWHTs",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Drg_No_For_PWHTs_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Drg_No_For_PWHTs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Drg_No_For_PWHTs_Filter);
            private static bool __sps_View_Get_Drg_No_For_PWHTs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_Drg_No_For_PWHTs_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_Drg_No_For_PWHTs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_Drg_No_For_PWHTs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT, bool>> __sps_View_Get_Drg_No_For_PWHTs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT, bool>> filter = null;
                d.sps_View_Get_Drg_No_For_PWHTs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Drg_No_For_WVF>
                __sps_View_Get_Drg_No_For_WVFsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Drg_No_For_WVF>(
                    "sps_View_Get_Drg_No_For_WVFs",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Drg_No_For_WVFs_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Drg_No_For_WVFs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Drg_No_For_WVFs_Filter);
            private static bool __sps_View_Get_Drg_No_For_WVFs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_Drg_No_For_WVFs_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_Drg_No_For_WVFs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_Drg_No_For_WVF e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_Drg_No_For_WVFs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Drg_No_For_WVF, bool>> __sps_View_Get_Drg_No_For_WVFs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Drg_No_For_WVF, bool>> filter = null;
                d.sps_View_Get_Drg_No_For_WVFs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer>
                __sps_View_Get_DrgNo_For_FitUpOffersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer>(
                    "sps_View_Get_DrgNo_For_FitUpOffers",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_DrgNo_For_FitUpOffers_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_DrgNo_For_FitUpOffers_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_DrgNo_For_FitUpOffers_Filter);
            private static bool __sps_View_Get_DrgNo_For_FitUpOffers_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_DrgNo_For_FitUpOffers_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_DrgNo_For_FitUpOffers_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_DrgNo_For_FitUpOffers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer, bool>> __sps_View_Get_DrgNo_For_FitUpOffers_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer, bool>> filter = null;
                d.sps_View_Get_DrgNo_For_FitUpOffers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_get_DrgNOMFF_For_FitupOffer>
                __sps_View_get_DrgNOMFF_For_FitupOffersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_get_DrgNOMFF_For_FitupOffer>(
                    "sps_View_get_DrgNOMFF_For_FitupOffers",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_get_DrgNOMFF_For_FitupOffers_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_get_DrgNOMFF_For_FitupOffers_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_get_DrgNOMFF_For_FitupOffers_Filter);
            private static bool __sps_View_get_DrgNOMFF_For_FitupOffers_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_get_DrgNOMFF_For_FitupOffers_CanRead(ref result);
                return result;
            }
            private static void __sps_View_get_DrgNOMFF_For_FitupOffers_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_get_DrgNOMFF_For_FitupOffer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_get_DrgNOMFF_For_FitupOffers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_get_DrgNOMFF_For_FitupOffer, bool>> __sps_View_get_DrgNOMFF_For_FitupOffers_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_get_DrgNOMFF_For_FitupOffer, bool>> filter = null;
                d.sps_View_get_DrgNOMFF_For_FitupOffers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_FTUDetail_For_Offer>
                __sps_View_Get_FTUDetail_For_OffersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_FTUDetail_For_Offer>(
                    "sps_View_Get_FTUDetail_For_Offers",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_FTUDetail_For_Offers_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_FTUDetail_For_Offers_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_FTUDetail_For_Offers_Filter);
            private static bool __sps_View_Get_FTUDetail_For_Offers_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_FTUDetail_For_Offers_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_FTUDetail_For_Offers_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_FTUDetail_For_Offer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_FTUDetail_For_Offers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_FTUDetail_For_Offer, bool>> __sps_View_Get_FTUDetail_For_Offers_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_FTUDetail_For_Offer, bool>> filter = null;
                d.sps_View_Get_FTUDetail_For_Offers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_HeatNo_From_IMIRID>
                __sps_View_Get_HeatNo_From_IMIRIDsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_HeatNo_From_IMIRID>(
                    "sps_View_Get_HeatNo_From_IMIRIDs",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_HeatNo_From_IMIRIDs_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_HeatNo_From_IMIRIDs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_HeatNo_From_IMIRIDs_Filter);
            private static bool __sps_View_Get_HeatNo_From_IMIRIDs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_HeatNo_From_IMIRIDs_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_HeatNo_From_IMIRIDs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_HeatNo_From_IMIRID e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_HeatNo_From_IMIRIDs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_HeatNo_From_IMIRID, bool>> __sps_View_Get_HeatNo_From_IMIRIDs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_HeatNo_From_IMIRID, bool>> filter = null;
                d.sps_View_Get_HeatNo_From_IMIRIDs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IDNO_From_IMIRID>
                __sps_View_Get_IDNO_From_IMIRIDsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IDNO_From_IMIRID>(
                    "sps_View_Get_IDNO_From_IMIRIDs",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IDNO_From_IMIRIDs_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IDNO_From_IMIRIDs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IDNO_From_IMIRIDs_Filter);
            private static bool __sps_View_Get_IDNO_From_IMIRIDs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_IDNO_From_IMIRIDs_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_IDNO_From_IMIRIDs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_IDNO_From_IMIRID e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_IDNO_From_IMIRIDs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IDNO_From_IMIRID, bool>> __sps_View_Get_IDNO_From_IMIRIDs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IDNO_From_IMIRID, bool>> filter = null;
                d.sps_View_Get_IDNO_From_IMIRIDs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1Item>
                __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1Item>(
                    "sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1_Filter);
            private static bool __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1Item e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1Item, bool>> __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1Item, bool>> filter = null;
                d.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2Item>
                __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2Item>(
                    "sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2_Filter);
            private static bool __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2Item e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2Item, bool>> __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2Item, bool>> filter = null;
                d.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3Item>
                __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3Item>(
                    "sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3_Filter);
            private static bool __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3Item e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3Item, bool>> __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3Item, bool>> filter = null;
                d.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4Item>
                __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4Item>(
                    "sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4_Filter);
            private static bool __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4Item e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4Item, bool>> __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4Item, bool>> filter = null;
                d.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5Item>
                __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5Item>(
                    "sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5_Filter);
            private static bool __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5Item e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5Item, bool>> __sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5Item, bool>> filter = null;
                d.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Joint_Details_For_NDEBuffer>
                __sps_View_Get_Joint_Details_For_NDEBuffersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Joint_Details_For_NDEBuffer>(
                    "sps_View_Get_Joint_Details_For_NDEBuffers",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Joint_Details_For_NDEBuffers_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Joint_Details_For_NDEBuffers_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Joint_Details_For_NDEBuffers_Filter);
            private static bool __sps_View_Get_Joint_Details_For_NDEBuffers_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_Joint_Details_For_NDEBuffers_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_Joint_Details_For_NDEBuffers_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_Joint_Details_For_NDEBuffer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_Joint_Details_For_NDEBuffers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Joint_Details_For_NDEBuffer, bool>> __sps_View_Get_Joint_Details_For_NDEBuffers_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Joint_Details_For_NDEBuffer, bool>> filter = null;
                d.sps_View_Get_Joint_Details_For_NDEBuffers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Joint_No_For_WVF>
                __sps_View_Get_Joint_No_For_WVFsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Joint_No_For_WVF>(
                    "sps_View_Get_Joint_No_For_WVFs",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Joint_No_For_WVFs_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Joint_No_For_WVFs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Joint_No_For_WVFs_Filter);
            private static bool __sps_View_Get_Joint_No_For_WVFs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_Joint_No_For_WVFs_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_Joint_No_For_WVFs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_Joint_No_For_WVF e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_Joint_No_For_WVFs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Joint_No_For_WVF, bool>> __sps_View_Get_Joint_No_For_WVFs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Joint_No_For_WVF, bool>> filter = null;
                d.sps_View_Get_Joint_No_For_WVFs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_JointDetail_for_FitupOffer>
                __sps_View_Get_JointDetail_for_FitupOffersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_JointDetail_for_FitupOffer>(
                    "sps_View_Get_JointDetail_for_FitupOffers",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_JointDetail_for_FitupOffers_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_JointDetail_for_FitupOffers_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_JointDetail_for_FitupOffers_Filter);
            private static bool __sps_View_Get_JointDetail_for_FitupOffers_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_JointDetail_for_FitupOffers_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_JointDetail_for_FitupOffers_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_JointDetail_for_FitupOffer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_JointDetail_for_FitupOffers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_JointDetail_for_FitupOffer, bool>> __sps_View_Get_JointDetail_for_FitupOffers_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_JointDetail_for_FitupOffer, bool>> filter = null;
                d.sps_View_Get_JointDetail_for_FitupOffers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer>
                __sps_View_Get_JointNo_For_FitUpOffersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer>(
                    "sps_View_Get_JointNo_For_FitUpOffers",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_JointNo_For_FitUpOffers_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_JointNo_For_FitUpOffers_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_JointNo_For_FitUpOffers_Filter);
            private static bool __sps_View_Get_JointNo_For_FitUpOffers_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_JointNo_For_FitUpOffers_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_JointNo_For_FitUpOffers_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_JointNo_For_FitUpOffers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer, bool>> __sps_View_Get_JointNo_For_FitUpOffers_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer, bool>> filter = null;
                d.sps_View_Get_JointNo_For_FitUpOffers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer>
                __sps_View_Get_MPINo_For_FitupOffersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer>(
                    "sps_View_Get_MPINo_For_FitupOffers",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_MPINo_For_FitupOffers_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_MPINo_For_FitupOffers_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_MPINo_For_FitupOffers_Filter);
            private static bool __sps_View_Get_MPINo_For_FitupOffers_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_MPINo_For_FitupOffers_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_MPINo_For_FitupOffers_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_MPINo_For_FitupOffers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer, bool>> __sps_View_Get_MPINo_For_FitupOffers_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer, bool>> filter = null;
                d.sps_View_Get_MPINo_For_FitupOffers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create>
                __sps_View_Get_NDE_Buff_Det_for_CreatesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create>(
                    "sps_View_Get_NDE_Buff_Det_for_Creates",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_NDE_Buff_Det_for_Creates_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_NDE_Buff_Det_for_Creates_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_NDE_Buff_Det_for_Creates_Filter);
            private static bool __sps_View_Get_NDE_Buff_Det_for_Creates_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_NDE_Buff_Det_for_Creates_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_NDE_Buff_Det_for_Creates_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_NDE_Buff_Det_for_Creates_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create, bool>> __sps_View_Get_NDE_Buff_Det_for_Creates_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create, bool>> filter = null;
                d.sps_View_Get_NDE_Buff_Det_for_Creates_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer>
                __sps_View_Get_Part_No_for_MI_OffersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer>(
                    "sps_View_Get_Part_No_for_MI_Offers",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Part_No_for_MI_Offers_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Part_No_for_MI_Offers_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Part_No_for_MI_Offers_Filter);
            private static bool __sps_View_Get_Part_No_for_MI_Offers_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_Part_No_for_MI_Offers_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_Part_No_for_MI_Offers_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_Part_No_for_MI_Offers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer, bool>> __sps_View_Get_Part_No_for_MI_Offers_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer, bool>> filter = null;
                d.sps_View_Get_Part_No_for_MI_Offers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Welder_For_WVF>
                __sps_View_Get_Welder_For_WVFsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Welder_For_WVF>(
                    "sps_View_Get_Welder_For_WVFs",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Welder_For_WVFs_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Welder_For_WVFs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_Welder_For_WVFs_Filter);
            private static bool __sps_View_Get_Welder_For_WVFs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_Welder_For_WVFs_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_Welder_For_WVFs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_Welder_For_WVF e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_Welder_For_WVFs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Welder_For_WVF, bool>> __sps_View_Get_Welder_For_WVFs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_Welder_For_WVF, bool>> filter = null;
                d.sps_View_Get_Welder_For_WVFs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_WVF_For_Delete>
                __sps_View_Get_WVF_For_DeletesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_WVF_For_Delete>(
                    "sps_View_Get_WVF_For_Deletes",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_WVF_For_Deletes_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_WVF_For_Deletes_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_WVF_For_Deletes_Filter);
            private static bool __sps_View_Get_WVF_For_Deletes_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_WVF_For_Deletes_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_WVF_For_Deletes_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_WVF_For_Delete e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_WVF_For_Deletes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_WVF_For_Delete, bool>> __sps_View_Get_WVF_For_Deletes_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_WVF_For_Delete, bool>> filter = null;
                d.sps_View_Get_WVF_For_Deletes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_WVFListForDelete>
                __sps_View_Get_WVFListForDeletesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_WVFListForDelete>(
                    "sps_View_Get_WVFListForDeletes",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_WVFListForDeletes_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_WVFListForDeletes_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_View_Get_WVFListForDeletes_Filter);
            private static bool __sps_View_Get_WVFListForDeletes_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_View_Get_WVFListForDeletes_CanRead(ref result);
                return result;
            }
            private static void __sps_View_Get_WVFListForDeletes_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_View_Get_WVFListForDelete e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_View_Get_WVFListForDeletes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_WVFListForDelete, bool>> __sps_View_Get_WVFListForDeletes_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_View_Get_WVFListForDelete, bool>> filter = null;
                d.sps_View_Get_WVFListForDeletes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_view_getDrgNo_for_ndeOffer>
                __sps_view_getDrgNo_for_ndeOffersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_view_getDrgNo_for_ndeOffer>(
                    "sps_view_getDrgNo_for_ndeOffers",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_view_getDrgNo_for_ndeOffers_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_view_getDrgNo_for_ndeOffers_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_view_getDrgNo_for_ndeOffers_Filter);
            private static bool __sps_view_getDrgNo_for_ndeOffers_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_view_getDrgNo_for_ndeOffers_CanRead(ref result);
                return result;
            }
            private static void __sps_view_getDrgNo_for_ndeOffers_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_view_getDrgNo_for_ndeOffer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_view_getDrgNo_for_ndeOffers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_view_getDrgNo_for_ndeOffer, bool>> __sps_view_getDrgNo_for_ndeOffers_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_view_getDrgNo_for_ndeOffer, bool>> filter = null;
                d.sps_view_getDrgNo_for_ndeOffers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_WVFDetail>
                __sps_WVFDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_WVFDetail>(
                    "sps_WVFDetails",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFDetails_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFDetails_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFDetails_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFDetails_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFDetails_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFDetails_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFDetails_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFDetails_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFDetails_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFDetails_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFDetails_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFDetails_Filter);
            private static bool __sps_WVFDetails_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_WVFDetails_CanInsert(ref result);
                return result;
            }
            private static bool __sps_WVFDetails_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_WVFDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_WVFDetails_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_WVFDetails_CanDelete(ref result);
                return result;
            }
            private static bool __sps_WVFDetails_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_WVFDetails_CanRead(ref result);
                return result;
            }
            private static void __sps_WVFDetails_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_WVFDetail e)
            {
                d.sps_WVFDetails_Inserting(e);
            }
            private static void __sps_WVFDetails_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_WVFDetail e)
            {
                d.sps_WVFDetails_Inserted(e);
            }
            private static void __sps_WVFDetails_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_WVFDetail e)
            {
                d.sps_WVFDetails_Updating(e);
            }
            private static void __sps_WVFDetails_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_WVFDetail e)
            {
                d.sps_WVFDetails_Updated(e);
            }
            private static void __sps_WVFDetails_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_WVFDetail e)
            {
                d.sps_WVFDetails_Deleting(e);
            }
            private static void __sps_WVFDetails_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_WVFDetail e)
            {
                d.sps_WVFDetails_Deleted(e);
            }
            private static void __sps_WVFDetails_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_WVFDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_WVFDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_WVFDetail, bool>> __sps_WVFDetails_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_WVFDetail, bool>> filter = null;
                d.sps_WVFDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_WVF>
                __sps_WVFsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_WVF>(
                    "sps_WVFs",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFs_CanInsert,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFs_CanUpdate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFs_CanDelete,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFs_CanRead,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFs_Inserting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFs_Inserted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFs_Updating,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFs_Updated,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFs_Deleting,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFs_Deleted,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFs_Validate,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__sps_WVFs_Filter);
            private static bool __sps_WVFs_CanInsert(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_WVFs_CanInsert(ref result);
                return result;
            }
            private static bool __sps_WVFs_CanUpdate(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_WVFs_CanUpdate(ref result);
                return result;
            }
            private static bool __sps_WVFs_CanDelete(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_WVFs_CanDelete(ref result);
                return result;
            }
            private static bool __sps_WVFs_CanRead(global::LightSwitchApplication.SPS_LSDataService d)
            {
                bool result = true;
                d.sps_WVFs_CanRead(ref result);
                return result;
            }
            private static void __sps_WVFs_Inserting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_WVF e)
            {
                d.sps_WVFs_Inserting(e);
            }
            private static void __sps_WVFs_Inserted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_WVF e)
            {
                d.sps_WVFs_Inserted(e);
            }
            private static void __sps_WVFs_Updating(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_WVF e)
            {
                d.sps_WVFs_Updating(e);
            }
            private static void __sps_WVFs_Updated(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_WVF e)
            {
                d.sps_WVFs_Updated(e);
            }
            private static void __sps_WVFs_Deleting(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_WVF e)
            {
                d.sps_WVFs_Deleting(e);
            }
            private static void __sps_WVFs_Deleted(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_WVF e)
            {
                d.sps_WVFs_Deleted(e);
            }
            private static void __sps_WVFs_Validate(global::LightSwitchApplication.SPS_LSDataService d, global::LightSwitchApplication.sps_WVF e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.sps_WVFs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_WVF, bool>> __sps_WVFs_Filter(global::LightSwitchApplication.SPS_LSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.sps_WVF, bool>> filter = null;
                d.sps_WVFs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.SPS_LSDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.SPS_LSDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.FITUP_ACCEPT_MAIN>
                __Display_Inspect_FITUPEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.FITUP_ACCEPT_MAIN>(
                    "Display_Inspect_FITUP",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inspect_FITUP_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inspect_FITUP_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inspect_FITUP_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inspect_FITUP_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inspect_FITUP_PreprocessQuery);
            private static bool __Display_Inspect_FITUP_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.Display_Inspect_FITUP_CanExecute(ref r);
                return r;
            }
            private static void __Display_Inspect_FITUP_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Display_Inspect_FITUP_Executing((string)args[0]);
            }
            private static void __Display_Inspect_FITUP_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Display_Inspect_FITUP_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.FITUP_ACCEPT_MAIN>)args[1]);
            }
            private static void __Display_Inspect_FITUP_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.Display_Inspect_FITUP_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Display_Inspect_FITUP_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.FITUP_ACCEPT_MAIN> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.FITUP_ACCEPT_MAIN>)args[1];
                d.Display_Inspect_FITUP_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_CONTRACTOR>
                __ContractorModuleQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_CONTRACTOR>(
                    "ContractorModuleQuery",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ContractorModuleQuery_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ContractorModuleQuery_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ContractorModuleQuery_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ContractorModuleQuery_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ContractorModuleQuery_PreprocessQuery);
            private static bool __ContractorModuleQuery_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.ContractorModuleQuery_CanExecute(ref r);
                return r;
            }
            private static void __ContractorModuleQuery_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.ContractorModuleQuery_Executing((string)args[0]);
            }
            private static void __ContractorModuleQuery_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.ContractorModuleQuery_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_CONTRACTOR>)args[1]);
            }
            private static void __ContractorModuleQuery_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.ContractorModuleQuery_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ContractorModuleQuery_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.GET_CONTRACTOR> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.GET_CONTRACTOR>)args[1];
                d.ContractorModuleQuery_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Get_FTU_For_inspect_closed>
                __displayFITUP_QUERYEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Get_FTU_For_inspect_closed>(
                    "displayFITUP_QUERY",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__displayFITUP_QUERY_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__displayFITUP_QUERY_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__displayFITUP_QUERY_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__displayFITUP_QUERY_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__displayFITUP_QUERY_PreprocessQuery);
            private static bool __displayFITUP_QUERY_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.displayFITUP_QUERY_CanExecute(ref r);
                return r;
            }
            private static void __displayFITUP_QUERY_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.displayFITUP_QUERY_Executing((string)args[0]);
            }
            private static void __displayFITUP_QUERY_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.displayFITUP_QUERY_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Get_FTU_For_inspect_closed>)args[1]);
            }
            private static void __displayFITUP_QUERY_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.displayFITUP_QUERY_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __displayFITUP_QUERY_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Get_FTU_For_inspect_closed> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Get_FTU_For_inspect_closed>)args[1];
                d.displayFITUP_QUERY_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Get_FTU_For_inspect_closed>
                __Inspect_ftu_queryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Get_FTU_For_inspect_closed>(
                    "Inspect_ftu_query",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_ftu_query_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_ftu_query_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_ftu_query_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_ftu_query_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_ftu_query_PreprocessQuery);
            private static bool __Inspect_ftu_query_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.Inspect_ftu_query_CanExecute(ref r);
                return r;
            }
            private static void __Inspect_ftu_query_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Inspect_ftu_query_Executing((string)args[0], (string)args[1]);
            }
            private static void __Inspect_ftu_query_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Inspect_ftu_query_Executed((string)args[0], (string)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Get_FTU_For_inspect_closed>)args[2]);
            }
            private static void __Inspect_ftu_query_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.Inspect_ftu_query_ExecuteFailed((string)args[0], (string)args[1], ex);
            }
            private static global::System.Linq.IQueryable __Inspect_ftu_query_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Get_FTU_For_inspect_closed> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Get_FTU_For_inspect_closed>)args[2];
                d.Inspect_ftu_query_PreprocessQuery((string)args[0], (string)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_INSPECT_For_WVF>
                __Inspect_WVF_QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_INSPECT_For_WVF>(
                    "Inspect_WVF_Query",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_WVF_Query_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_WVF_Query_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_WVF_Query_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_WVF_Query_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_WVF_Query_PreprocessQuery);
            private static bool __Inspect_WVF_Query_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.Inspect_WVF_Query_CanExecute(ref r);
                return r;
            }
            private static void __Inspect_WVF_Query_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Inspect_WVF_Query_Executing((string)args[0]);
            }
            private static void __Inspect_WVF_Query_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Inspect_WVF_Query_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_INSPECT_For_WVF>)args[1]);
            }
            private static void __Inspect_WVF_Query_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.Inspect_WVF_Query_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Inspect_WVF_Query_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.GET_INSPECT_For_WVF> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.GET_INSPECT_For_WVF>)args[1];
                d.Inspect_WVF_Query_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept>
                __InspectMPIQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept>(
                    "InspectMPIQuery",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__InspectMPIQuery_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__InspectMPIQuery_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__InspectMPIQuery_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__InspectMPIQuery_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__InspectMPIQuery_PreprocessQuery);
            private static bool __InspectMPIQuery_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.InspectMPIQuery_CanExecute(ref r);
                return r;
            }
            private static void __InspectMPIQuery_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.InspectMPIQuery_Executing((string)args[0]);
            }
            private static void __InspectMPIQuery_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.InspectMPIQuery_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept>)args[1]);
            }
            private static void __InspectMPIQuery_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.InspectMPIQuery_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __InspectMPIQuery_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.GET_INSPECT_MPI_AFTERaccept>)args[1];
                d.InspectMPIQuery_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_MPI_INSPECT>
                __Display_Inspect_MPIEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_MPI_INSPECT>(
                    "Display_Inspect_MPI",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inspect_MPI_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inspect_MPI_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inspect_MPI_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inspect_MPI_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inspect_MPI_PreprocessQuery);
            private static bool __Display_Inspect_MPI_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.Display_Inspect_MPI_CanExecute(ref r);
                return r;
            }
            private static void __Display_Inspect_MPI_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Display_Inspect_MPI_Executing((string)args[0], (string)args[1]);
            }
            private static void __Display_Inspect_MPI_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Display_Inspect_MPI_Executed((string)args[0], (string)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_MPI_INSPECT>)args[2]);
            }
            private static void __Display_Inspect_MPI_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.Display_Inspect_MPI_ExecuteFailed((string)args[0], (string)args[1], ex);
            }
            private static global::System.Linq.IQueryable __Display_Inspect_MPI_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.GET_MPI_INSPECT> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.GET_MPI_INSPECT>)args[2];
                d.Display_Inspect_MPI_PreprocessQuery((string)args[0], (string)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_MPI_INSPECT>
                __Inspect_MIqueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_MPI_INSPECT>(
                    "Inspect_MIquery",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_MIquery_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_MIquery_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_MIquery_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_MIquery_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_MIquery_PreprocessQuery);
            private static bool __Inspect_MIquery_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.Inspect_MIquery_CanExecute(ref r);
                return r;
            }
            private static void __Inspect_MIquery_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Inspect_MIquery_Executing((string)args[0]);
            }
            private static void __Inspect_MIquery_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Inspect_MIquery_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_MPI_INSPECT>)args[1]);
            }
            private static void __Inspect_MIquery_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.Inspect_MIquery_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Inspect_MIquery_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.GET_MPI_INSPECT> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.GET_MPI_INSPECT>)args[1];
                d.Inspect_MIquery_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT>
                __Display_Inspect_PWHTEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT>(
                    "Display_Inspect_PWHT",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inspect_PWHT_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inspect_PWHT_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inspect_PWHT_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inspect_PWHT_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inspect_PWHT_PreprocessQuery);
            private static bool __Display_Inspect_PWHT_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.Display_Inspect_PWHT_CanExecute(ref r);
                return r;
            }
            private static void __Display_Inspect_PWHT_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Display_Inspect_PWHT_Executing((string)args[0], (string)args[1]);
            }
            private static void __Display_Inspect_PWHT_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Display_Inspect_PWHT_Executed((string)args[0], (string)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT>)args[2]);
            }
            private static void __Display_Inspect_PWHT_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.Display_Inspect_PWHT_ExecuteFailed((string)args[0], (string)args[1], ex);
            }
            private static global::System.Linq.IQueryable __Display_Inspect_PWHT_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT>)args[2];
                d.Display_Inspect_PWHT_PreprocessQuery((string)args[0], (string)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT>
                __GET_PWHT_INSPECTQUeryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT>(
                    "GET_PWHT_INSPECTQUery",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_PWHT_INSPECTQUery_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_PWHT_INSPECTQUery_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_PWHT_INSPECTQUery_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_PWHT_INSPECTQUery_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GET_PWHT_INSPECTQUery_PreprocessQuery);
            private static bool __GET_PWHT_INSPECTQUery_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.GET_PWHT_INSPECTQUery_CanExecute(ref r);
                return r;
            }
            private static void __GET_PWHT_INSPECTQUery_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.GET_PWHT_INSPECTQUery_Executing((string)args[0]);
            }
            private static void __GET_PWHT_INSPECTQUery_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.GET_PWHT_INSPECTQUery_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT>)args[1]);
            }
            private static void __GET_PWHT_INSPECTQUery_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.GET_PWHT_INSPECTQUery_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GET_PWHT_INSPECTQUery_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.GET_PWHT_INSPECT_ACCEPT>)args[1];
                d.GET_PWHT_INSPECTQUery_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT>
                __INSPECT_PWHT_detail_queryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT>(
                    "INSPECT_PWHT_detail_query",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__INSPECT_PWHT_detail_query_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__INSPECT_PWHT_detail_query_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__INSPECT_PWHT_detail_query_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__INSPECT_PWHT_detail_query_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__INSPECT_PWHT_detail_query_PreprocessQuery);
            private static bool __INSPECT_PWHT_detail_query_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.INSPECT_PWHT_detail_query_CanExecute(ref r);
                return r;
            }
            private static void __INSPECT_PWHT_detail_query_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.INSPECT_PWHT_detail_query_Executing((string)args[0]);
            }
            private static void __INSPECT_PWHT_detail_query_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.INSPECT_PWHT_detail_query_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT>)args[1]);
            }
            private static void __INSPECT_PWHT_detail_query_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.INSPECT_PWHT_detail_query_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __INSPECT_PWHT_detail_query_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT>)args[1];
                d.INSPECT_PWHT_detail_query_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT>
                __Inspect_PWHT_queryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT>(
                    "Inspect_PWHT_query",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_PWHT_query_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_PWHT_query_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_PWHT_query_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_PWHT_query_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_PWHT_query_PreprocessQuery);
            private static bool __Inspect_PWHT_query_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.Inspect_PWHT_query_CanExecute(ref r);
                return r;
            }
            private static void __Inspect_PWHT_query_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Inspect_PWHT_query_Executing((string)args[0], (string)args[1]);
            }
            private static void __Inspect_PWHT_query_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Inspect_PWHT_query_Executed((string)args[0], (string)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT>)args[2]);
            }
            private static void __Inspect_PWHT_query_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.Inspect_PWHT_query_ExecuteFailed((string)args[0], (string)args[1], ex);
            }
            private static global::System.Linq.IQueryable __Inspect_PWHT_query_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.GET_PWHT_JOINT_ACCEPT>)args[2];
                d.Inspect_PWHT_query_PreprocessQuery((string)args[0], (string)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_QC_INSPECT_MPI>
                __Display_Inpect_MPI_QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_QC_INSPECT_MPI>(
                    "Display_Inpect_MPI_Query",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inpect_MPI_Query_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inpect_MPI_Query_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inpect_MPI_Query_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inpect_MPI_Query_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Display_Inpect_MPI_Query_PreprocessQuery);
            private static bool __Display_Inpect_MPI_Query_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.Display_Inpect_MPI_Query_CanExecute(ref r);
                return r;
            }
            private static void __Display_Inpect_MPI_Query_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Display_Inpect_MPI_Query_Executing((string)args[0], (string)args[1]);
            }
            private static void __Display_Inpect_MPI_Query_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Display_Inpect_MPI_Query_Executed((string)args[0], (string)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_QC_INSPECT_MPI>)args[2]);
            }
            private static void __Display_Inpect_MPI_Query_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.Display_Inpect_MPI_Query_ExecuteFailed((string)args[0], (string)args[1], ex);
            }
            private static global::System.Linq.IQueryable __Display_Inpect_MPI_Query_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.GET_QC_INSPECT_MPI> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.GET_QC_INSPECT_MPI>)args[2];
                d.Display_Inpect_MPI_Query_PreprocessQuery((string)args[0], (string)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_QC_INSPECT_MPI>
                __QC_Inspect_MPT_QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.GET_QC_INSPECT_MPI>(
                    "QC_Inspect_MPT_Query",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__QC_Inspect_MPT_Query_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__QC_Inspect_MPT_Query_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__QC_Inspect_MPT_Query_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__QC_Inspect_MPT_Query_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__QC_Inspect_MPT_Query_PreprocessQuery);
            private static bool __QC_Inspect_MPT_Query_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.QC_Inspect_MPT_Query_CanExecute(ref r);
                return r;
            }
            private static void __QC_Inspect_MPT_Query_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.QC_Inspect_MPT_Query_Executing((string)args[0]);
            }
            private static void __QC_Inspect_MPT_Query_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.QC_Inspect_MPT_Query_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.GET_QC_INSPECT_MPI>)args[1]);
            }
            private static void __QC_Inspect_MPT_Query_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.QC_Inspect_MPT_Query_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __QC_Inspect_MPT_Query_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.GET_QC_INSPECT_MPI> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.GET_QC_INSPECT_MPI>)args[1];
                d.QC_Inspect_MPT_Query_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Hardness_offer_get>
                __hardness_queryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Hardness_offer_get>(
                    "hardness_query",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__hardness_query_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__hardness_query_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__hardness_query_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__hardness_query_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__hardness_query_PreprocessQuery);
            private static bool __hardness_query_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.hardness_query_CanExecute(ref r);
                return r;
            }
            private static void __hardness_query_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.hardness_query_Executing((string)args[0], (string)args[1]);
            }
            private static void __hardness_query_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.hardness_query_Executed((string)args[0], (string)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Hardness_offer_get>)args[2]);
            }
            private static void __hardness_query_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.hardness_query_ExecuteFailed((string)args[0], (string)args[1], ex);
            }
            private static global::System.Linq.IQueryable __hardness_query_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Hardness_offer_get> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Hardness_offer_get>)args[2];
                d.hardness_query_PreprocessQuery((string)args[0], (string)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Hardness_offer_get>
                __Inspect_hardness_queryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Hardness_offer_get>(
                    "Inspect_hardness_query",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_hardness_query_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_hardness_query_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_hardness_query_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_hardness_query_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Inspect_hardness_query_PreprocessQuery);
            private static bool __Inspect_hardness_query_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.Inspect_hardness_query_CanExecute(ref r);
                return r;
            }
            private static void __Inspect_hardness_query_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Inspect_hardness_query_Executing((string)args[0]);
            }
            private static void __Inspect_hardness_query_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Inspect_hardness_query_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Hardness_offer_get>)args[1]);
            }
            private static void __Inspect_hardness_query_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.Inspect_hardness_query_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Inspect_hardness_query_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Hardness_offer_get> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Hardness_offer_get>)args[1];
                d.Inspect_hardness_query_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Inspect_WVF_Detail>
                __INspect_WVF_Detail_QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.Inspect_WVF_Detail>(
                    "INspect_WVF_Detail_Query",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__INspect_WVF_Detail_Query_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__INspect_WVF_Detail_Query_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__INspect_WVF_Detail_Query_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__INspect_WVF_Detail_Query_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__INspect_WVF_Detail_Query_PreprocessQuery);
            private static bool __INspect_WVF_Detail_Query_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.INspect_WVF_Detail_Query_CanExecute(ref r);
                return r;
            }
            private static void __INspect_WVF_Detail_Query_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.INspect_WVF_Detail_Query_Executing((string)args[0]);
            }
            private static void __INspect_WVF_Detail_Query_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.INspect_WVF_Detail_Query_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Inspect_WVF_Detail>)args[1]);
            }
            private static void __INspect_WVF_Detail_Query_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.INspect_WVF_Detail_Query_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __INspect_WVF_Detail_Query_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Inspect_WVF_Detail> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Inspect_WVF_Detail>)args[1];
                d.INspect_WVF_Detail_Query_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Contractor_Module>
                __ContractorForSelectedModuleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Contractor_Module>(
                    "ContractorForSelectedModule",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ContractorForSelectedModule_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ContractorForSelectedModule_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ContractorForSelectedModule_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ContractorForSelectedModule_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ContractorForSelectedModule_PreprocessQuery);
            private static bool __ContractorForSelectedModule_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.ContractorForSelectedModule_CanExecute(ref r);
                return r;
            }
            private static void __ContractorForSelectedModule_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.ContractorForSelectedModule_Executing((string)args[0], (string)args[1]);
            }
            private static void __ContractorForSelectedModule_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.ContractorForSelectedModule_Executed((string)args[0], (string)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_Contractor_Module>)args[2]);
            }
            private static void __ContractorForSelectedModule_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.ContractorForSelectedModule_ExecuteFailed((string)args[0], (string)args[1], ex);
            }
            private static global::System.Linq.IQueryable __ContractorForSelectedModule_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_Contractor_Module> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_Contractor_Module>)args[2];
                d.ContractorForSelectedModule_PreprocessQuery((string)args[0], (string)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_DrgList>
                __DrgFromModuleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_DrgList>(
                    "DrgFromModule",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgFromModule_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgFromModule_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgFromModule_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgFromModule_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgFromModule_PreprocessQuery);
            private static bool __DrgFromModule_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.DrgFromModule_CanExecute(ref r);
                return r;
            }
            private static void __DrgFromModule_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DrgFromModule_Executing((string)args[0]);
            }
            private static void __DrgFromModule_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DrgFromModule_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_DrgList>)args[1]);
            }
            private static void __DrgFromModule_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.DrgFromModule_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __DrgFromModule_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_DrgList> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_DrgList>)args[1];
                d.DrgFromModule_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Location>
                __LocationProjectQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Location>(
                    "LocationProjectQuery",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__LocationProjectQuery_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__LocationProjectQuery_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__LocationProjectQuery_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__LocationProjectQuery_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__LocationProjectQuery_PreprocessQuery);
            private static bool __LocationProjectQuery_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.LocationProjectQuery_CanExecute(ref r);
                return r;
            }
            private static void __LocationProjectQuery_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.LocationProjectQuery_Executing((string)args[0]);
            }
            private static void __LocationProjectQuery_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.LocationProjectQuery_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_Location>)args[1]);
            }
            private static void __LocationProjectQuery_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.LocationProjectQuery_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __LocationProjectQuery_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_Location> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_Location>)args[1];
                d.LocationProjectQuery_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Master_Proceduer>
                __ProcedureQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Master_Proceduer>(
                    "ProcedureQuery",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ProcedureQuery_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ProcedureQuery_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ProcedureQuery_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ProcedureQuery_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ProcedureQuery_PreprocessQuery);
            private static bool __ProcedureQuery_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.ProcedureQuery_CanExecute(ref r);
                return r;
            }
            private static void __ProcedureQuery_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.ProcedureQuery_Executing((string)args[0]);
            }
            private static void __ProcedureQuery_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.ProcedureQuery_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_Master_Proceduer>)args[1]);
            }
            private static void __ProcedureQuery_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.ProcedureQuery_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ProcedureQuery_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_Master_Proceduer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_Master_Proceduer>)args[1];
                d.ProcedureQuery_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Matser_CodeOfConstruction>
                __CodeOfConstructionQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Matser_CodeOfConstruction>(
                    "CodeOfConstructionQuery",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__CodeOfConstructionQuery_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__CodeOfConstructionQuery_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__CodeOfConstructionQuery_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__CodeOfConstructionQuery_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__CodeOfConstructionQuery_PreprocessQuery);
            private static bool __CodeOfConstructionQuery_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.CodeOfConstructionQuery_CanExecute(ref r);
                return r;
            }
            private static void __CodeOfConstructionQuery_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.CodeOfConstructionQuery_Executing((string)args[0]);
            }
            private static void __CodeOfConstructionQuery_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.CodeOfConstructionQuery_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_Matser_CodeOfConstruction>)args[1]);
            }
            private static void __CodeOfConstructionQuery_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.CodeOfConstructionQuery_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __CodeOfConstructionQuery_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_Matser_CodeOfConstruction> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_Matser_CodeOfConstruction>)args[1];
                d.CodeOfConstructionQuery_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Module>
                __ModuleProjectQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_Module>(
                    "ModuleProjectQuery",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ModuleProjectQuery_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ModuleProjectQuery_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ModuleProjectQuery_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ModuleProjectQuery_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__ModuleProjectQuery_PreprocessQuery);
            private static bool __ModuleProjectQuery_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.ModuleProjectQuery_CanExecute(ref r);
                return r;
            }
            private static void __ModuleProjectQuery_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.ModuleProjectQuery_Executing((string)args[0]);
            }
            private static void __ModuleProjectQuery_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.ModuleProjectQuery_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_Module>)args[1]);
            }
            private static void __ModuleProjectQuery_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.ModuleProjectQuery_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ModuleProjectQuery_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_Module> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_Module>)args[1];
                d.ModuleProjectQuery_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Drg_No_For_NDE>
                __get_drg_queryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Drg_No_For_NDE>(
                    "get_drg_query",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__get_drg_query_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__get_drg_query_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__get_drg_query_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__get_drg_query_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__get_drg_query_PreprocessQuery);
            private static bool __get_drg_query_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.get_drg_query_CanExecute(ref r);
                return r;
            }
            private static void __get_drg_query_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.get_drg_query_Executing((string)args[0]);
            }
            private static void __get_drg_query_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.get_drg_query_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_NDE>)args[1]);
            }
            private static void __get_drg_query_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.get_drg_query_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __get_drg_query_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_NDE> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_NDE>)args[1];
                d.get_drg_query_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT>
                __DrgNoForPWHTEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT>(
                    "DrgNoForPWHT",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForPWHT_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForPWHT_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForPWHT_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForPWHT_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForPWHT_PreprocessQuery);
            private static bool __DrgNoForPWHT_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.DrgNoForPWHT_CanExecute(ref r);
                return r;
            }
            private static void __DrgNoForPWHT_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DrgNoForPWHT_Executing((string)args[0]);
            }
            private static void __DrgNoForPWHT_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DrgNoForPWHT_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT>)args[1]);
            }
            private static void __DrgNoForPWHT_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.DrgNoForPWHT_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __DrgNoForPWHT_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT>)args[1];
                d.DrgNoForPWHT_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT>
                __JointNoForPWHTOfferEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT>(
                    "JointNoForPWHTOffer",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointNoForPWHTOffer_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointNoForPWHTOffer_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointNoForPWHTOffer_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointNoForPWHTOffer_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointNoForPWHTOffer_PreprocessQuery);
            private static bool __JointNoForPWHTOffer_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.JointNoForPWHTOffer_CanExecute(ref r);
                return r;
            }
            private static void __JointNoForPWHTOffer_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.JointNoForPWHTOffer_Executing((string)args[0], (string)args[1]);
            }
            private static void __JointNoForPWHTOffer_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.JointNoForPWHTOffer_Executed((string)args[0], (string)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT>)args[2]);
            }
            private static void __JointNoForPWHTOffer_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.JointNoForPWHTOffer_ExecuteFailed((string)args[0], (string)args[1], ex);
            }
            private static global::System.Linq.IQueryable __JointNoForPWHTOffer_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_PWHT>)args[2];
                d.JointNoForPWHTOffer_PreprocessQuery((string)args[0], (string)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Drg_No_For_WVF>
                __DrgNoForWVFOfferEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Drg_No_For_WVF>(
                    "DrgNoForWVFOffer",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForWVFOffer_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForWVFOffer_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForWVFOffer_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForWVFOffer_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForWVFOffer_PreprocessQuery);
            private static bool __DrgNoForWVFOffer_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.DrgNoForWVFOffer_CanExecute(ref r);
                return r;
            }
            private static void __DrgNoForWVFOffer_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DrgNoForWVFOffer_Executing((string)args[0]);
            }
            private static void __DrgNoForWVFOffer_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DrgNoForWVFOffer_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_WVF>)args[1]);
            }
            private static void __DrgNoForWVFOffer_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.DrgNoForWVFOffer_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __DrgNoForWVFOffer_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_WVF> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Drg_No_For_WVF>)args[1];
                d.DrgNoForWVFOffer_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer>
                __DisplayDrgNoForFitupOfferEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer>(
                    "DisplayDrgNoForFitupOffer",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DisplayDrgNoForFitupOffer_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DisplayDrgNoForFitupOffer_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DisplayDrgNoForFitupOffer_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DisplayDrgNoForFitupOffer_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DisplayDrgNoForFitupOffer_PreprocessQuery);
            private static bool __DisplayDrgNoForFitupOffer_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.DisplayDrgNoForFitupOffer_CanExecute(ref r);
                return r;
            }
            private static void __DisplayDrgNoForFitupOffer_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DisplayDrgNoForFitupOffer_Executing((string)args[0], (string)args[1]);
            }
            private static void __DisplayDrgNoForFitupOffer_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DisplayDrgNoForFitupOffer_Executed((string)args[0], (string)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer>)args[2]);
            }
            private static void __DisplayDrgNoForFitupOffer_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.DisplayDrgNoForFitupOffer_ExecuteFailed((string)args[0], (string)args[1], ex);
            }
            private static global::System.Linq.IQueryable __DisplayDrgNoForFitupOffer_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer>)args[2];
                d.DisplayDrgNoForFitupOffer_PreprocessQuery((string)args[0], (string)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer>
                __DrgNoForFitupOfferEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer>(
                    "DrgNoForFitupOffer",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForFitupOffer_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForFitupOffer_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForFitupOffer_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForFitupOffer_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForFitupOffer_PreprocessQuery);
            private static bool __DrgNoForFitupOffer_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.DrgNoForFitupOffer_CanExecute(ref r);
                return r;
            }
            private static void __DrgNoForFitupOffer_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DrgNoForFitupOffer_Executing((string)args[0]);
            }
            private static void __DrgNoForFitupOffer_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DrgNoForFitupOffer_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer>)args[1]);
            }
            private static void __DrgNoForFitupOffer_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.DrgNoForFitupOffer_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __DrgNoForFitupOffer_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_DrgNo_For_FitUpOffer>)args[1];
                d.DrgNoForFitupOffer_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_get_DrgNOMFF_For_FitupOffer>
                __DrgNoMFFForFitupOfferEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_get_DrgNOMFF_For_FitupOffer>(
                    "DrgNoMFFForFitupOffer",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoMFFForFitupOffer_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoMFFForFitupOffer_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoMFFForFitupOffer_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoMFFForFitupOffer_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoMFFForFitupOffer_PreprocessQuery);
            private static bool __DrgNoMFFForFitupOffer_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.DrgNoMFFForFitupOffer_CanExecute(ref r);
                return r;
            }
            private static void __DrgNoMFFForFitupOffer_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DrgNoMFFForFitupOffer_Executing((string)args[0]);
            }
            private static void __DrgNoMFFForFitupOffer_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DrgNoMFFForFitupOffer_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_get_DrgNOMFF_For_FitupOffer>)args[1]);
            }
            private static void __DrgNoMFFForFitupOffer_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.DrgNoMFFForFitupOffer_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __DrgNoMFFForFitupOffer_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_get_DrgNOMFF_For_FitupOffer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_get_DrgNOMFF_For_FitupOffer>)args[1];
                d.DrgNoMFFForFitupOffer_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_FTUDetail_For_Offer>
                __FTUDetailForFitupOfferEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_FTUDetail_For_Offer>(
                    "FTUDetailForFitupOffer",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__FTUDetailForFitupOffer_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__FTUDetailForFitupOffer_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__FTUDetailForFitupOffer_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__FTUDetailForFitupOffer_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__FTUDetailForFitupOffer_PreprocessQuery);
            private static bool __FTUDetailForFitupOffer_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.FTUDetailForFitupOffer_CanExecute(ref r);
                return r;
            }
            private static void __FTUDetailForFitupOffer_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.FTUDetailForFitupOffer_Executing((string)args[0]);
            }
            private static void __FTUDetailForFitupOffer_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.FTUDetailForFitupOffer_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_FTUDetail_For_Offer>)args[1]);
            }
            private static void __FTUDetailForFitupOffer_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.FTUDetailForFitupOffer_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __FTUDetailForFitupOffer_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_FTUDetail_For_Offer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_FTUDetail_For_Offer>)args[1];
                d.FTUDetailForFitupOffer_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1Item>
                __IMIRIDHeatForFitupOffer1Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1Item>(
                    "IMIRIDHeatForFitupOffer1",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer1_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer1_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer1_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer1_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer1_PreprocessQuery);
            private static bool __IMIRIDHeatForFitupOffer1_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.IMIRIDHeatForFitupOffer1_CanExecute(ref r);
                return r;
            }
            private static void __IMIRIDHeatForFitupOffer1_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.IMIRIDHeatForFitupOffer1_Executing((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4]);
            }
            private static void __IMIRIDHeatForFitupOffer1_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.IMIRIDHeatForFitupOffer1_Executed((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1Item>)args[5]);
            }
            private static void __IMIRIDHeatForFitupOffer1_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.IMIRIDHeatForFitupOffer1_ExecuteFailed((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], ex);
            }
            private static global::System.Linq.IQueryable __IMIRIDHeatForFitupOffer1_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1Item> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI1Item>)args[5];
                d.IMIRIDHeatForFitupOffer1_PreprocessQuery((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2Item>
                __IMIRIDHeatForFitupOffer2Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2Item>(
                    "IMIRIDHeatForFitupOffer2",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer2_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer2_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer2_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer2_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer2_PreprocessQuery);
            private static bool __IMIRIDHeatForFitupOffer2_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.IMIRIDHeatForFitupOffer2_CanExecute(ref r);
                return r;
            }
            private static void __IMIRIDHeatForFitupOffer2_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.IMIRIDHeatForFitupOffer2_Executing((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4]);
            }
            private static void __IMIRIDHeatForFitupOffer2_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.IMIRIDHeatForFitupOffer2_Executed((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2Item>)args[5]);
            }
            private static void __IMIRIDHeatForFitupOffer2_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.IMIRIDHeatForFitupOffer2_ExecuteFailed((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], ex);
            }
            private static global::System.Linq.IQueryable __IMIRIDHeatForFitupOffer2_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2Item> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI2Item>)args[5];
                d.IMIRIDHeatForFitupOffer2_PreprocessQuery((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3Item>
                __IMIRIDHeatForFitupOffer3Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3Item>(
                    "IMIRIDHeatForFitupOffer3",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer3_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer3_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer3_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer3_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer3_PreprocessQuery);
            private static bool __IMIRIDHeatForFitupOffer3_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.IMIRIDHeatForFitupOffer3_CanExecute(ref r);
                return r;
            }
            private static void __IMIRIDHeatForFitupOffer3_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.IMIRIDHeatForFitupOffer3_Executing((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], (string)args[5]);
            }
            private static void __IMIRIDHeatForFitupOffer3_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.IMIRIDHeatForFitupOffer3_Executed((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], (string)args[5], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3Item>)args[6]);
            }
            private static void __IMIRIDHeatForFitupOffer3_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.IMIRIDHeatForFitupOffer3_ExecuteFailed((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], (string)args[5], ex);
            }
            private static global::System.Linq.IQueryable __IMIRIDHeatForFitupOffer3_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3Item> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI3Item>)args[6];
                d.IMIRIDHeatForFitupOffer3_PreprocessQuery((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], (string)args[5], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4Item>
                __IMIRIDHeatForFitupOffer4Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4Item>(
                    "IMIRIDHeatForFitupOffer4",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer4_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer4_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer4_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer4_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer4_PreprocessQuery);
            private static bool __IMIRIDHeatForFitupOffer4_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.IMIRIDHeatForFitupOffer4_CanExecute(ref r);
                return r;
            }
            private static void __IMIRIDHeatForFitupOffer4_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.IMIRIDHeatForFitupOffer4_Executing((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4]);
            }
            private static void __IMIRIDHeatForFitupOffer4_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.IMIRIDHeatForFitupOffer4_Executed((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4Item>)args[5]);
            }
            private static void __IMIRIDHeatForFitupOffer4_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.IMIRIDHeatForFitupOffer4_ExecuteFailed((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], ex);
            }
            private static global::System.Linq.IQueryable __IMIRIDHeatForFitupOffer4_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4Item> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI4Item>)args[5];
                d.IMIRIDHeatForFitupOffer4_PreprocessQuery((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5Item>
                __IMIRIDHeatForFitupOffer5Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5Item>(
                    "IMIRIDHeatForFitupOffer5",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer5_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer5_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer5_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer5_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__IMIRIDHeatForFitupOffer5_PreprocessQuery);
            private static bool __IMIRIDHeatForFitupOffer5_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.IMIRIDHeatForFitupOffer5_CanExecute(ref r);
                return r;
            }
            private static void __IMIRIDHeatForFitupOffer5_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.IMIRIDHeatForFitupOffer5_Executing((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4]);
            }
            private static void __IMIRIDHeatForFitupOffer5_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.IMIRIDHeatForFitupOffer5_Executed((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5Item>)args[5]);
            }
            private static void __IMIRIDHeatForFitupOffer5_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.IMIRIDHeatForFitupOffer5_ExecuteFailed((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], ex);
            }
            private static global::System.Linq.IQueryable __IMIRIDHeatForFitupOffer5_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5Item> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_IMIRNo_IDNo_HEatNo_for_Ftu_Offer_From_MI5Item>)args[5];
                d.IMIRIDHeatForFitupOffer5_PreprocessQuery((string)args[0], (string)args[1], (string)args[2], (string)args[3], (string)args[4], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Joint_Details_For_NDEBuffer>
                __Query2Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Joint_Details_For_NDEBuffer>(
                    "Query2",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Query2_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Query2_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Query2_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Query2_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Query2_PreprocessQuery);
            private static bool __Query2_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.Query2_CanExecute(ref r);
                return r;
            }
            private static void __Query2_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Query2_Executing((string)args[0]);
            }
            private static void __Query2_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Query2_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Joint_Details_For_NDEBuffer>)args[1]);
            }
            private static void __Query2_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.Query2_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Query2_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Joint_Details_For_NDEBuffer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Joint_Details_For_NDEBuffer>)args[1];
                d.Query2_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Joint_No_For_WVF>
                __JointNoForWVFOfferEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Joint_No_For_WVF>(
                    "JointNoForWVFOffer",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointNoForWVFOffer_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointNoForWVFOffer_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointNoForWVFOffer_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointNoForWVFOffer_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointNoForWVFOffer_PreprocessQuery);
            private static bool __JointNoForWVFOffer_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.JointNoForWVFOffer_CanExecute(ref r);
                return r;
            }
            private static void __JointNoForWVFOffer_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.JointNoForWVFOffer_Executing((string)args[0]);
            }
            private static void __JointNoForWVFOffer_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.JointNoForWVFOffer_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Joint_No_For_WVF>)args[1]);
            }
            private static void __JointNoForWVFOffer_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.JointNoForWVFOffer_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __JointNoForWVFOffer_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Joint_No_For_WVF> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Joint_No_For_WVF>)args[1];
                d.JointNoForWVFOffer_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_JointDetail_for_FitupOffer>
                __JointDetailForFitupOfferEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_JointDetail_for_FitupOffer>(
                    "JointDetailForFitupOffer",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointDetailForFitupOffer_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointDetailForFitupOffer_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointDetailForFitupOffer_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointDetailForFitupOffer_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointDetailForFitupOffer_PreprocessQuery);
            private static bool __JointDetailForFitupOffer_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.JointDetailForFitupOffer_CanExecute(ref r);
                return r;
            }
            private static void __JointDetailForFitupOffer_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.JointDetailForFitupOffer_Executing((string)args[0]);
            }
            private static void __JointDetailForFitupOffer_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.JointDetailForFitupOffer_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_JointDetail_for_FitupOffer>)args[1]);
            }
            private static void __JointDetailForFitupOffer_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.JointDetailForFitupOffer_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __JointDetailForFitupOffer_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_JointDetail_for_FitupOffer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_JointDetail_for_FitupOffer>)args[1];
                d.JointDetailForFitupOffer_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer>
                __DisplayJointNoForFitupOfferEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer>(
                    "DisplayJointNoForFitupOffer",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DisplayJointNoForFitupOffer_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DisplayJointNoForFitupOffer_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DisplayJointNoForFitupOffer_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DisplayJointNoForFitupOffer_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DisplayJointNoForFitupOffer_PreprocessQuery);
            private static bool __DisplayJointNoForFitupOffer_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.DisplayJointNoForFitupOffer_CanExecute(ref r);
                return r;
            }
            private static void __DisplayJointNoForFitupOffer_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DisplayJointNoForFitupOffer_Executing((string)args[0], (string)args[1]);
            }
            private static void __DisplayJointNoForFitupOffer_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DisplayJointNoForFitupOffer_Executed((string)args[0], (string)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer>)args[2]);
            }
            private static void __DisplayJointNoForFitupOffer_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.DisplayJointNoForFitupOffer_ExecuteFailed((string)args[0], (string)args[1], ex);
            }
            private static global::System.Linq.IQueryable __DisplayJointNoForFitupOffer_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer>)args[2];
                d.DisplayJointNoForFitupOffer_PreprocessQuery((string)args[0], (string)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer>
                __JointNoForFitupOfferEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer>(
                    "JointNoForFitupOffer",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointNoForFitupOffer_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointNoForFitupOffer_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointNoForFitupOffer_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointNoForFitupOffer_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__JointNoForFitupOffer_PreprocessQuery);
            private static bool __JointNoForFitupOffer_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.JointNoForFitupOffer_CanExecute(ref r);
                return r;
            }
            private static void __JointNoForFitupOffer_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.JointNoForFitupOffer_Executing((string)args[0]);
            }
            private static void __JointNoForFitupOffer_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.JointNoForFitupOffer_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer>)args[1]);
            }
            private static void __JointNoForFitupOffer_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.JointNoForFitupOffer_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __JointNoForFitupOffer_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_JointNo_For_FitUpOffer>)args[1];
                d.JointNoForFitupOffer_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer>
                __MPINoForFitupOfferEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer>(
                    "MPINoForFitupOffer",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__MPINoForFitupOffer_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__MPINoForFitupOffer_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__MPINoForFitupOffer_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__MPINoForFitupOffer_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__MPINoForFitupOffer_PreprocessQuery);
            private static bool __MPINoForFitupOffer_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.MPINoForFitupOffer_CanExecute(ref r);
                return r;
            }
            private static void __MPINoForFitupOffer_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.MPINoForFitupOffer_Executing((string)args[0], (string)args[1], (string)args[2], (string)args[3]);
            }
            private static void __MPINoForFitupOffer_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.MPINoForFitupOffer_Executed((string)args[0], (string)args[1], (string)args[2], (string)args[3], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer>)args[4]);
            }
            private static void __MPINoForFitupOffer_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.MPINoForFitupOffer_ExecuteFailed((string)args[0], (string)args[1], (string)args[2], (string)args[3], ex);
            }
            private static global::System.Linq.IQueryable __MPINoForFitupOffer_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer>)args[4];
                d.MPINoForFitupOffer_PreprocessQuery((string)args[0], (string)args[1], (string)args[2], (string)args[3], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer>
                __Query1Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer>(
                    "Query1",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Query1_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Query1_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Query1_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Query1_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Query1_PreprocessQuery);
            private static bool __Query1_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.Query1_CanExecute(ref r);
                return r;
            }
            private static void __Query1_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Query1_Executing();
            }
            private static void __Query1_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.Query1_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer>)args[0]);
            }
            private static void __Query1_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.Query1_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Query1_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_MPINo_For_FitupOffer>)args[0];
                d.Query1_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create>
                __FILTERjointQUERYEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create>(
                    "FILTERjointQUERY",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__FILTERjointQUERY_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__FILTERjointQUERY_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__FILTERjointQUERY_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__FILTERjointQUERY_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__FILTERjointQUERY_PreprocessQuery);
            private static bool __FILTERjointQUERY_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.FILTERjointQUERY_CanExecute(ref r);
                return r;
            }
            private static void __FILTERjointQUERY_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.FILTERjointQUERY_Executing((string)args[0]);
            }
            private static void __FILTERjointQUERY_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.FILTERjointQUERY_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create>)args[1]);
            }
            private static void __FILTERjointQUERY_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.FILTERjointQUERY_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __FILTERjointQUERY_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create>)args[1];
                d.FILTERjointQUERY_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create>
                __jointQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create>(
                    "jointQuery",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__jointQuery_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__jointQuery_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__jointQuery_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__jointQuery_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__jointQuery_PreprocessQuery);
            private static bool __jointQuery_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.jointQuery_CanExecute(ref r);
                return r;
            }
            private static void __jointQuery_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.jointQuery_Executing((string)args[0]);
            }
            private static void __jointQuery_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.jointQuery_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create>)args[1]);
            }
            private static void __jointQuery_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.jointQuery_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __jointQuery_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create>)args[1];
                d.jointQuery_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create>
                __NDE_queryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create>(
                    "NDE_query",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__NDE_query_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__NDE_query_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__NDE_query_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__NDE_query_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__NDE_query_PreprocessQuery);
            private static bool __NDE_query_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.NDE_query_CanExecute(ref r);
                return r;
            }
            private static void __NDE_query_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.NDE_query_Executing((string)args[0]);
            }
            private static void __NDE_query_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.NDE_query_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create>)args[1]);
            }
            private static void __NDE_query_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.NDE_query_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __NDE_query_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_NDE_Buff_Det_for_Create>)args[1];
                d.NDE_query_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer>
                __DisplayPartNoForMIOfferNewEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer>(
                    "DisplayPartNoForMIOfferNew",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DisplayPartNoForMIOfferNew_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DisplayPartNoForMIOfferNew_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DisplayPartNoForMIOfferNew_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DisplayPartNoForMIOfferNew_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DisplayPartNoForMIOfferNew_PreprocessQuery);
            private static bool __DisplayPartNoForMIOfferNew_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.DisplayPartNoForMIOfferNew_CanExecute(ref r);
                return r;
            }
            private static void __DisplayPartNoForMIOfferNew_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DisplayPartNoForMIOfferNew_Executing((string)args[0], (string)args[1], (string)args[2], (string)args[3]);
            }
            private static void __DisplayPartNoForMIOfferNew_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DisplayPartNoForMIOfferNew_Executed((string)args[0], (string)args[1], (string)args[2], (string)args[3], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer>)args[4]);
            }
            private static void __DisplayPartNoForMIOfferNew_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.DisplayPartNoForMIOfferNew_ExecuteFailed((string)args[0], (string)args[1], (string)args[2], (string)args[3], ex);
            }
            private static global::System.Linq.IQueryable __DisplayPartNoForMIOfferNew_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer>)args[4];
                d.DisplayPartNoForMIOfferNew_PreprocessQuery((string)args[0], (string)args[1], (string)args[2], (string)args[3], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer>
                __PartNoFromDrgIDForMIOfferEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer>(
                    "PartNoFromDrgIDForMIOffer",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__PartNoFromDrgIDForMIOffer_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__PartNoFromDrgIDForMIOffer_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__PartNoFromDrgIDForMIOffer_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__PartNoFromDrgIDForMIOffer_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__PartNoFromDrgIDForMIOffer_PreprocessQuery);
            private static bool __PartNoFromDrgIDForMIOffer_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.PartNoFromDrgIDForMIOffer_CanExecute(ref r);
                return r;
            }
            private static void __PartNoFromDrgIDForMIOffer_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.PartNoFromDrgIDForMIOffer_Executing((string)args[0]);
            }
            private static void __PartNoFromDrgIDForMIOffer_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.PartNoFromDrgIDForMIOffer_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer>)args[1]);
            }
            private static void __PartNoFromDrgIDForMIOffer_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.PartNoFromDrgIDForMIOffer_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __PartNoFromDrgIDForMIOffer_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Part_No_for_MI_Offer>)args[1];
                d.PartNoFromDrgIDForMIOffer_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Welder_For_WVF>
                __WelderForWVFOfferEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_Welder_For_WVF>(
                    "WelderForWVFOffer",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__WelderForWVFOffer_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__WelderForWVFOffer_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__WelderForWVFOffer_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__WelderForWVFOffer_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__WelderForWVFOffer_PreprocessQuery);
            private static bool __WelderForWVFOffer_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.WelderForWVFOffer_CanExecute(ref r);
                return r;
            }
            private static void __WelderForWVFOffer_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.WelderForWVFOffer_Executing((string)args[0]);
            }
            private static void __WelderForWVFOffer_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.WelderForWVFOffer_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_Welder_For_WVF>)args[1]);
            }
            private static void __WelderForWVFOffer_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.WelderForWVFOffer_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __WelderForWVFOffer_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Welder_For_WVF> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_Welder_For_WVF>)args[1];
                d.WelderForWVFOffer_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_WVF_For_Delete>
                __WVFForDeleteEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_WVF_For_Delete>(
                    "WVFForDelete",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__WVFForDelete_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__WVFForDelete_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__WVFForDelete_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__WVFForDelete_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__WVFForDelete_PreprocessQuery);
            private static bool __WVFForDelete_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.WVFForDelete_CanExecute(ref r);
                return r;
            }
            private static void __WVFForDelete_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.WVFForDelete_Executing((string)args[0]);
            }
            private static void __WVFForDelete_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.WVFForDelete_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_WVF_For_Delete>)args[1]);
            }
            private static void __WVFForDelete_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.WVFForDelete_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __WVFForDelete_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_WVF_For_Delete> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_WVF_For_Delete>)args[1];
                d.WVFForDelete_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_WVFListForDelete>
                __GetWVFForDeleteEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_View_Get_WVFListForDelete>(
                    "GetWVFForDelete",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GetWVFForDelete_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GetWVFForDelete_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GetWVFForDelete_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GetWVFForDelete_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__GetWVFForDelete_PreprocessQuery);
            private static bool __GetWVFForDelete_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.GetWVFForDelete_CanExecute(ref r);
                return r;
            }
            private static void __GetWVFForDelete_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.GetWVFForDelete_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2]);
            }
            private static void __GetWVFForDelete_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.GetWVFForDelete_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_View_Get_WVFListForDelete>)args[3]);
            }
            private static void __GetWVFForDelete_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.GetWVFForDelete_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ex);
            }
            private static global::System.Linq.IQueryable __GetWVFForDelete_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_WVFListForDelete> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_View_Get_WVFListForDelete>)args[3];
                d.GetWVFForDelete_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ref query);
                return query;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_view_getDrgNo_for_ndeOffer>
                __DrgNoForNdeOfferEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.SPS_LSDataService, global::LightSwitchApplication.sps_view_getDrgNo_for_ndeOffer>(
                    "DrgNoForNdeOffer",
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForNdeOffer_CanExecute,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForNdeOffer_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForNdeOffer_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForNdeOffer_Failed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__DrgNoForNdeOffer_PreprocessQuery);
            private static bool __DrgNoForNdeOffer_CanExecute(global::LightSwitchApplication.SPS_LSDataService d, bool r)
            {
                d.DrgNoForNdeOffer_CanExecute(ref r);
                return r;
            }
            private static void __DrgNoForNdeOffer_Executing(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DrgNoForNdeOffer_Executing((string)args[0]);
            }
            private static void __DrgNoForNdeOffer_Executed(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                d.DrgNoForNdeOffer_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.sps_view_getDrgNo_for_ndeOffer>)args[1]);
            }
            private static void __DrgNoForNdeOffer_Failed(global::LightSwitchApplication.SPS_LSDataService d, object[] args, global::System.Exception ex)
            {
                d.DrgNoForNdeOffer_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __DrgNoForNdeOffer_PreprocessQuery(global::LightSwitchApplication.SPS_LSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.sps_view_getDrgNo_for_ndeOffer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.sps_view_getDrgNo_for_ndeOffer>)args[1];
                d.DrgNoForNdeOffer_PreprocessQuery((string)args[0], ref query);
                return query;
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.SPS_LSDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.SPS_LSDataService>(
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.SPS_LSDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.SPS_LSDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.SPS_LSDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.SPS_LSDataService>
                ___DatabaseAuthEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.SPS_LSDataService>(
                    global::LightSwitchApplication.SPS_LSDataService.DetailsClass.__SPS_LSData_InitializingConnection);
            private static void __SPS_LSData_InitializingConnection(global::LightSwitchApplication.SPS_LSDataService d, global::Microsoft.LightSwitch.DatabaseConnectionState state)
            {
                d.SPS_LSData_InitializingConnection(state);
            }
        }
    
        #endregion
    }
    
    #endregion
}
